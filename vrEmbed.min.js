! function(t) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        var e;
        e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, e.vrEmbed = t()
    }
}(function() {
    var t;
    return function e(t, i, n) {
        function r(s, a) {
            if (!i[s]) {
                if (!t[s]) {
                    var A = "function" == typeof require && require;
                    if (!a && A) return A(s, !0);
                    if (o) return o(s, !0);
                    var u = new Error("Cannot find module '" + s + "'");
                    throw u.code = "MODULE_NOT_FOUND", u
                }
                var c = i[s] = {
                    exports: {}
                };
                t[s][0].call(c.exports, function(e) {
                    var i = t[s][1][e];
                    return r(i ? i : e)
                }, c, c.exports, e, t, i, n)
            }
            return i[s].exports
        }
        for (var o = "function" == typeof require && require, s = 0; s < n.length; s++) r(n[s]);
        return r
    }({
        1: [function(t, e, i) {
            var n = function() {
                function t() {
                    n ? document.removeEventListener("DOMContentLoaded", t, !0) : "complete" === document.readyState && document.detachEvent("onreadystatechange", t), i()
                }

                function e() {
                    if (!r) {
                        try {
                            document.documentElement.doScroll("left")
                        } catch (t) {
                            return void window.setTimeout(arguments.callee, 15)
                        }
                        i()
                    }
                }

                function i() {
                    if (!r) {
                        r = !0;
                        for (var t = s.length, e = 0; t > e; e++) s[e].call(document)
                    }
                }
                var n = !!document.addEventListener,
                    r = !1,
                    o = !1,
                    s = [];
                if (n) document.addEventListener("DOMContentLoaded", t, !0), window.addEventListener("load", i, !1);
                else {
                    document.attachEvent("onreadystatechange", t), window.attachEvent("onload", i);
                    try {
                        o = null === window.frameElement
                    } catch (a) {}
                    document.documentElement.doScroll && o && e()
                }
                return function(t) {
                    return r ? t.call(document) : s.push(t)
                }
            }();
            e.exports = n
        }, {}],
        2: [function(t, e, i) {
            function n() {
                this.callbacks = {}
            }
            n.prototype.emit = function(t) {
                var e = this.callbacks[t];
                if (!e) return void console.log("No valid callback specified.");
                var i = [].slice.call(arguments);
                i.shift();
                for (var n = 0; n < e.length; n++) e[n].apply(this, i)
            }, n.prototype.on = function(t, e) {
                t in this.callbacks ? this.callbacks[t].push(e) : this.callbacks[t] = [e]
            }, e.exports = n
        }, {}],
        3: [function(e, i, n) {
            ! function(e, n) {
                "function" == typeof t && t.amd && t([], n), "undefined" != typeof i && i.exports ? i.exports = n() : e.twgl = n()
            }(this, function() {
                var t, e, i;
                return function(n) {
                    function r(t, e) {
                        return w.call(t, e)
                    }

                    function o(t, e) {
                        var i, n, r, o, s, a, A, u, c, l, h, d = e && e.split("/"),
                            f = v.map,
                            g = f && f["*"] || {};
                        if (t && "." === t.charAt(0))
                            if (e) {
                                for (t = t.split("/"), s = t.length - 1, v.nodeIdCompat && D.test(t[s]) && (t[s] = t[s].replace(D, "")), t = d.slice(0, d.length - 1).concat(t), c = 0; c < t.length; c += 1)
                                    if (h = t[c], "." === h) t.splice(c, 1), c -= 1;
                                    else if (".." === h) {
                                    if (1 === c && (".." === t[2] || ".." === t[0])) break;
                                    c > 0 && (t.splice(c - 1, 2), c -= 2)
                                }
                                t = t.join("/")
                            } else 0 === t.indexOf("./") && (t = t.substring(2));
                        if ((d || g) && f) {
                            for (i = t.split("/"), c = i.length; c > 0; c -= 1) {
                                if (n = i.slice(0, c).join("/"), d)
                                    for (l = d.length; l > 0; l -= 1)
                                        if (r = f[d.slice(0, l).join("/")], r && (r = r[n])) {
                                            o = r, a = c;
                                            break
                                        } if (o) break;
                                !A && g && g[n] && (A = g[n], u = c)
                            }!o && A && (o = A, a = u), o && (i.splice(0, a, o), t = i.join("/"))
                        }
                        return t
                    }

                    function s(t, e) {
                        return function() {
                            var i = E.call(arguments, 0);
                            return "string" != typeof i[0] && 1 === i.length && i.push(null), d.apply(n, i.concat([t, e]))
                        }
                    }

                    function a(t) {
                        return function(e) {
                            return o(e, t)
                        }
                    }

                    function A(t) {
                        return function(e) {
                            p[t] = e
                        }
                    }

                    function u(t) {
                        if (r(M, t)) {
                            var e = M[t];
                            delete M[t], m[t] = !0, h.apply(n, e)
                        }
                        if (!r(p, t) && !r(m, t)) throw new Error("No " + t);
                        return p[t]
                    }

                    function c(t) {
                        var e, i = t ? t.indexOf("!") : -1;
                        return i > -1 && (e = t.substring(0, i), t = t.substring(i + 1, t.length)), [e, t]
                    }

                    function l(t) {
                        return function() {
                            return v && v.config && v.config[t] || {}
                        }
                    }
                    var h, d, f, g, p = {},
                        M = {},
                        v = {},
                        m = {},
                        w = Object.prototype.hasOwnProperty,
                        E = [].slice,
                        D = /\.js$/;
                    f = function(t, e) {
                        var i, n = c(t),
                            r = n[0];
                        return t = n[1], r && (r = o(r, e), i = u(r)), r ? t = i && i.normalize ? i.normalize(t, a(e)) : o(t, e) : (t = o(t, e), n = c(t), r = n[0], t = n[1], r && (i = u(r))), {
                            f: r ? r + "!" + t : t,
                            n: t,
                            pr: r,
                            p: i
                        }
                    }, g = {
                        notrequirebecasebrowserifymessesup: function(t) {
                            return s(t)
                        },
                        exports: function(t) {
                            var e = p[t];
                            return "undefined" != typeof e ? e : p[t] = {}
                        },
                        module: function(t) {
                            return {
                                id: t,
                                uri: "",
                                exports: p[t],
                                config: l(t)
                            }
                        }
                    }, h = function(t, e, i, o) {
                        var a, c, l, h, d, v, w = [],
                            E = typeof i;
                        if (o = o || t, "undefined" === E || "function" === E) {
                            for (e = !e.length && i.length ? ["notrequirebecasebrowserifymessesup", "exports", "module"] : e, d = 0; d < e.length; d += 1)
                                if (h = f(e[d], o), c = h.f, "notrequirebecasebrowserifymessesup" === c) w[d] = g.notrequirebecasebrowserifymessesup(t);
                                else if ("exports" === c) w[d] = g.exports(t), v = !0;
                            else if ("module" === c) a = w[d] = g.module(t);
                            else if (r(p, c) || r(M, c) || r(m, c)) w[d] = u(c);
                            else {
                                if (!h.p) throw new Error(t + " missing " + c);
                                h.p.load(h.n, s(o, !0), A(c), {}), w[d] = p[c]
                            }
                            l = i ? i.apply(p[t], w) : void 0, t && (a && a.exports !== n && a.exports !== p[t] ? p[t] = a.exports : l === n && v || (p[t] = l))
                        } else t && (p[t] = i)
                    }, t = e = d = function(t, e, i, r, o) {
                        if ("string" == typeof t) return g[t] ? g[t](e) : u(f(t, e).f);
                        if (!t.splice) {
                            if (v = t, v.deps && d(v.deps, v.callback), !e) return;
                            e.splice ? (t = e, e = i, i = null) : t = n
                        }
                        return e = e || function() {}, "function" == typeof i && (i = r, r = o), r ? h(n, t, e, i) : setTimeout(function() {
                            h(n, t, e, i)
                        }, 4), d
                    }, d.config = function(t) {
                        return d(t)
                    }, t._defined = p, i = function(t, e, i) {
                        if ("string" != typeof t) throw new Error("See almond README: incorrect module build, no module name");
                        e.splice || (i = e, e = []), r(p, t) || r(M, t) || (M[t] = [t, e, i])
                    }, i.amd = {
                        jQuery: !0
                    }
                }(), i("node_modules/almond/almond.js", function() {}), i("twgl/typedarrays", [], function() {
                    function t(t) {
                        if (t instanceof Int8Array) return n;
                        if (t instanceof Uint8Array) return r;
                        if (t instanceof Int16Array) return o;
                        if (t instanceof Uint16Array) return s;
                        if (t instanceof Int32Array) return a;
                        if (t instanceof Uint32Array) return A;
                        if (t instanceof Float32Array) return u;
                        throw "unsupported typed array type"
                    }

                    function e(t) {
                        switch (t) {
                            case n:
                                return Int8Array;
                            case r:
                                return Uint8Array;
                            case o:
                                return Int16Array;
                            case s:
                                return Uint16Array;
                            case a:
                                return Int32Array;
                            case A:
                                return Uint32Array;
                            case u:
                                return Float32Array;
                            default:
                                throw "unknown gl type"
                        }
                    }

                    function i(t) {
                        return t && t.buffer && t.buffer instanceof ArrayBuffer
                    }
                    var n = 5120,
                        r = 5121,
                        o = 5122,
                        s = 5123,
                        a = 5124,
                        A = 5125,
                        u = 5126;
                    return {
                        getGLTypeForTypedArray: t,
                        getTypedArrayTypeForGLType: e,
                        isArrayBuffer: i
                    }
                }), i("twgl/attributes", ["./typedarrays"], function(t) {
                    function e(t) {
                        f.attribPrefix = t
                    }

                    function i(t) {
                        Object.keys(t).forEach(function(e) {
                            f[e] = t[e]
                        })
                    }

                    function n(t, e, i, n, r) {
                        t.bindBuffer(e, i), t.bufferData(e, n, r || t.STATIC_DRAW)
                    }

                    function r(t, e, i, r) {
                        if (e instanceof WebGLBuffer) return e;
                        i = i || t.ARRAY_BUFFER;
                        var o = t.createBuffer();
                        return n(t, i, o, e, r), o
                    }

                    function o(t) {
                        return "indices" === t
                    }

                    function s(t) {
                        return t instanceof Int8Array ? !0 : t instanceof Uint8Array ? !0 : !1
                    }

                    function a(t, e) {
                        var i;
                        if (i = t.indexOf("coord") >= 0 ? 2 : t.indexOf("color") >= 0 ? 4 : 3, e % i > 0) throw "can not guess numComponents. You should specify it.";
                        return i
                    }

                    function A(e, i) {
                        if (t.isArrayBuffer(e)) return e;
                        if (t.isArrayBuffer(e.data)) return e.data;
                        Array.isArray(e) && (e = {
                            data: e
                        });
                        var n = e.type;
                        return n || (n = "indices" === i ? Uint16Array : Float32Array), new n(e.data)
                    }

                    function u(e, i) {
                        var n = {};
                        return Object.keys(i).forEach(function(u) {
                            if (!o(u)) {
                                var c = i[u],
                                    l = c.attrib || c.name || c.attribName || f.attribPrefix + u,
                                    h = A(c, u);
                                n[l] = {
                                    buffer: r(e, h, void 0, c.drawType),
                                    numComponents: c.numComponents || c.size || a(u),
                                    type: t.getGLTypeForTypedArray(h),
                                    normalize: void 0 !== c.normalize ? c.normalize : s(h),
                                    stride: c.stride || 0,
                                    offset: c.offset || 0,
                                    drawType: c.drawType
                                }
                            }
                        }), n
                    }

                    function c(t, e, i, r) {
                        i = A(i), r ? (t.bindBuffer(t.ARRAY_BUFFER, e.buffer), t.bufferSubData(t.ARRAY_BUFFER, r, i)) : n(t, t.ARRAY_BUFFER, e.buffer, i, e.drawType)
                    }

                    function l(t, e) {
                        var i = {
                                attribs: u(t, e)
                            },
                            n = e.indices;
                        return n ? (n = A(n, "indices"), i.indices = r(t, n, t.ELEMENT_ARRAY_BUFFER), i.numElements = n.length, i.elementType = n instanceof Uint32Array ? t.UNSIGNED_INT : t.UNSIGNED_SHORT) : i.numElements = g(e), i
                    }

                    function h(t, e, i) {
                        var n = "indices" === i ? t.ELEMENT_ARRAY_BUFFER : t.ARRAY_BUFFER,
                            o = A(e, i);
                        return r(t, o, n)
                    }

                    function d(t, e) {
                        var i = {};
                        return Object.keys(e).forEach(function(n) {
                            i[n] = h(t, e[n], n)
                        }), i
                    }
                    var f = {
                            attribPrefix: ""
                        },
                        g = function() {
                            var t = ["position", "positions", "a_position"];
                            return function(e) {
                                for (var i, n = 0; n < t.length && (i = t[n], !(i in e)); ++n);
                                n === t.length && (i = Object.keys(e)[0]);
                                var r = e[i],
                                    o = r.length || r.data.length,
                                    s = r.numComponents || a(i, o),
                                    A = o / s;
                                if (o % s > 0) throw "numComponents " + s + " not correct for length " + o;
                                return A
                            }
                        }();
                    return {
                        createAttribsFromArrays: u,
                        createBuffersFromArrays: d,
                        createBufferFromArray: h,
                        createBufferFromTypedArray: r,
                        createBufferInfoFromArrays: l,
                        setAttribInfoBufferFromArray: c,
                        setAttributePrefix: e,
                        setDefaults_: i
                    }
                }), i("twgl/programs", [], function() {
                    function t(t) {
                        return t.split("\n").map(function(t, e) {
                            return e + 1 + ": " + t
                        }).join("\n")
                    }

                    function e(e, i, n, r) {
                        var o = r || f,
                            s = e.createShader(n);
                        e.shaderSource(s, i), e.compileShader(s);
                        var a = e.getShaderParameter(s, e.COMPILE_STATUS);
                        if (!a) {
                            var A = e.getShaderInfoLog(s);
                            return o(t(i) + "\n*** Error compiling shader: " + A), e.deleteShader(s), null
                        }
                        return s
                    }

                    function i(t, e, i, n, r) {
                        var o = r || f,
                            s = t.createProgram();
                        e.forEach(function(e) {
                            t.attachShader(s, e)
                        }), i && i.forEach(function(e, i) {
                            t.bindAttribLocation(s, n ? n[i] : i, e)
                        }), t.linkProgram(s);
                        var a = t.getProgramParameter(s, t.LINK_STATUS);
                        if (!a) {
                            var A = t.getProgramInfoLog(s);
                            return o("Error in program linking:" + A), t.deleteProgram(s), null
                        }
                        return s
                    }

                    function n(t, i, n, r) {
                        var o, s = "",
                            a = document.getElementById(i);
                        if (!a) throw "*** Error: unknown script element" + i;
                        if (s = a.text, !n)
                            if ("x-shader/x-vertex" === a.type) o = t.VERTEX_SHADER;
                            else if ("x-shader/x-fragment" === a.type) o = t.FRAGMENT_SHADER;
                        else if (o !== t.VERTEX_SHADER && o !== t.FRAGMENT_SHADER) throw "*** Error: unknown shader type";
                        return e(t, s, n ? n : o, r)
                    }

                    function r(t, e, r, o, s) {
                        for (var a = [], A = 0; A < e.length; ++A) {
                            var u = n(t, e[A], t[g[A]], s);
                            if (!u) return null;
                            a.push(u)
                        }
                        return i(t, a, r, o, s)
                    }

                    function o(t, n, r, o, s) {
                        for (var a = [], A = 0; A < n.length; ++A) {
                            var u = e(t, n[A], t[g[A]], s);
                            if (!u) return null;
                            a.push(u)
                        }
                        return i(t, a, r, o, s)
                    }

                    function s(t, e) {
                        return e === t.SAMPLER_2D ? t.TEXTURE_2D : e === t.SAMPLER_CUBE ? t.TEXTURE_CUBE_MAP : void 0
                    }

                    function a(t, e) {
                        function i(e, i) {
                            var r = t.getUniformLocation(e, i.name),
                                o = i.type,
                                a = i.size > 1 && "[0]" === i.name.substr(-3);
                            if (o === t.FLOAT && a) return function(e) {
                                t.uniform1fv(r, e)
                            };
                            if (o === t.FLOAT) return function(e) {
                                t.uniform1f(r, e)
                            };
                            if (o === t.FLOAT_VEC2) return function(e) {
                                t.uniform2fv(r, e)
                            };
                            if (o === t.FLOAT_VEC3) return function(e) {
                                t.uniform3fv(r, e)
                            };
                            if (o === t.FLOAT_VEC4) return function(e) {
                                t.uniform4fv(r, e)
                            };
                            if (o === t.INT && a) return function(e) {
                                t.uniform1iv(r, e)
                            };
                            if (o === t.INT) return function(e) {
                                t.uniform1i(r, e)
                            };
                            if (o === t.INT_VEC2) return function(e) {
                                t.uniform2iv(r, e)
                            };
                            if (o === t.INT_VEC3) return function(e) {
                                t.uniform3iv(r, e)
                            };
                            if (o === t.INT_VEC4) return function(e) {
                                t.uniform4iv(r, e)
                            };
                            if (o === t.BOOL && a) return function(e) {
                                t.uniform1iv(r, e)
                            };
                            if (o === t.BOOL) return function(e) {
                                t.uniform1i(r, e)
                            };
                            if (o === t.BOOL_VEC2) return function(e) {
                                t.uniform2iv(r, e)
                            };
                            if (o === t.BOOL_VEC3) return function(e) {
                                t.uniform3iv(r, e)
                            };
                            if (o === t.BOOL_VEC4) return function(e) {
                                t.uniform4iv(r, e)
                            };
                            if (o === t.FLOAT_MAT2) return function(e) {
                                t.uniformMatrix2fv(r, !1, e)
                            };
                            if (o === t.FLOAT_MAT3) return function(e) {
                                t.uniformMatrix3fv(r, !1, e)
                            };
                            if (o === t.FLOAT_MAT4) return function(e) {
                                t.uniformMatrix4fv(r, !1, e)
                            };
                            if ((o === t.SAMPLER_2D || o === t.SAMPLER_CUBE) && a) {
                                for (var A = [], u = 0; u < i.size; ++u) A.push(n++);
                                return function(e, i) {
                                    return function(n) {
                                        t.uniform1iv(r, i), n.forEach(function(n, r) {
                                            t.activeTexture(t.TEXTURE0 + i[r]), t.bindTexture(e, n)
                                        })
                                    }
                                }(s(t, o), A)
                            }
                            if (o === t.SAMPLER_2D || o === t.SAMPLER_CUBE) return function(e, i) {
                                return function(n) {
                                    t.uniform1i(r, i), t.activeTexture(t.TEXTURE0 + i), t.bindTexture(e, n)
                                }
                            }(s(t, o), n++);
                            throw "unknown type: 0x" + o.toString(16)
                        }
                        for (var n = 0, r = {}, o = t.getProgramParameter(e, t.ACTIVE_UNIFORMS), a = 0; o > a; ++a) {
                            var A = t.getActiveUniform(e, a);
                            if (!A) break;
                            var u = A.name;
                            "[0]" === u.substr(-3) && (u = u.substr(0, u.length - 3));
                            var c = i(e, A);
                            r[u] = c
                        }
                        return r
                    }

                    function A(t, e) {
                        for (var i = t.uniformSetters || t, n = arguments.length, r = 1; n > r; ++r) {
                            var o = arguments[r];
                            if (Array.isArray(o))
                                for (var s = o.length, a = 0; s > a; ++a) A(i, o[a]);
                            else
                                for (var u in o) {
                                    var c = i[u];
                                    c && c(o[u])
                                }
                        }
                    }

                    function u(t, e) {
                        function i(e) {
                            return function(i) {
                                t.bindBuffer(t.ARRAY_BUFFER, i.buffer), t.enableVertexAttribArray(e), t.vertexAttribPointer(e, i.numComponents || i.size, i.type || t.FLOAT, i.normalize || !1, i.stride || 0, i.offset || 0)
                            }
                        }
                        for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), o = 0; r > o; ++o) {
                            var s = t.getActiveAttrib(e, o);
                            if (!s) break;
                            var a = t.getAttribLocation(e, s.name);
                            n[s.name] = i(a)
                        }
                        return n
                    }

                    function c(t, e) {
                        for (var i in e) {
                            var n = t[i];
                            n && n(e[i])
                        }
                    }

                    function l(t, e, i) {
                        c(e.attribSetters || e, i.attribs), i.indices && t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, i.indices)
                    }

                    function h(t, e) {
                        var i = a(t, e),
                            n = u(t, e);
                        return {
                            program: e,
                            uniformSetters: i,
                            attribSetters: n
                        }
                    }

                    function d(t, e, i, n, r) {
                        e = e.map(function(t) {
                            var e = document.getElementById(t);
                            return e ? e.text : t
                        });
                        var s = o(t, e, i, n, r);
                        return s ? h(t, s) : null
                    }
                    var f = window.console && window.console.error && "function" == typeof window.console.error ? window.console.error.bind(window.console) : function() {},
                        g = ["VERTEX_SHADER", "FRAGMENT_SHADER"];
                    return {
                        createAttributeSetters: u,
                        createProgram: i,
                        createProgramFromScripts: r,
                        createProgramFromSources: o,
                        createProgramInfo: d,
                        createProgramInfoFromProgram: h,
                        createUniformSetters: a,
                        setAttributes: c,
                        setBuffersAndAttributes: l,
                        setUniforms: A
                    }
                }), i("twgl/draw", ["./programs"], function(t) {
                    function e(t, e, i, n, r) {
                        var o = i.indices,
                            s = void 0 === n ? i.numElements : n;
                        r = void 0 === r ? 0 : r, o ? t.drawElements(e, s, void 0 === i.elementType ? t.UNSIGNED_SHORT : i.elementType, r) : t.drawArrays(e, r, s)
                    }

                    function i(i, n) {
                        var r = null,
                            o = null;
                        n.forEach(function(n) {
                            if (n.active !== !1) {
                                var s = n.programInfo,
                                    a = n.bufferInfo,
                                    A = !1;
                                s !== r && (r = s, i.useProgram(s.program), A = !0), (A || a !== o) && (o = a, t.setBuffersAndAttributes(i, s, a)), t.setUniforms(s, n.uniforms), e(i, n.type || i.TRIANGLES, a, n.count, n.offset)
                            }
                        })
                    }
                    return {
                        drawBufferInfo: e,
                        drawObjectList: i
                    }
                }), i("twgl/utils", [], function() {
                    function t(t) {
                        var e = {};
                        return Object.keys(t).forEach(function(i) {
                            e[i] = t[i]
                        }), e
                    }
                    return {
                        shallowCopy: t
                    }
                }), i("twgl/textures", ["./typedarrays", "./utils"], function(t, e) {
                    function i(t) {
                        T.textureColor = new Uint8Array([255 * t[0], 255 * t[1], 255 * t[2], 255 * t[3]])
                    }

                    function n(t) {
                        return !b.test(t)
                    }

                    function r(t) {
                        t.textureColor && i(t.textureColor), Object.keys(t).filter(n).forEach(function(e) {
                            T[e] = t[e]
                        })
                    }

                    function o(t, e) {
                        void 0 !== e.colorspaceConversion && (k.colorSpaceConversion = t.getParameter(t.UNPACK_COLORSPACE_CONVERSION_WEBGL)), void 0 !== e.premultiplyAlpha && (k.premultiplyAlpha = t.getParameter(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL)), void 0 !== e.flipY && (k.flipY = t.getParameter(t.UNPACK_FLIP_Y_WEBGL))
                    }

                    function s(t, e) {
                        void 0 !== e.colorspaceConversion && t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL, k.colorSpaceConversion), void 0 !== e.premultiplyAlpha && t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, k.premultiplyAlpha), void 0 !== e.flipY && t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, k.flipY)
                    }

                    function a(t, e, i) {
                        var n = i.target || t.TEXTURE_2D;
                        t.bindTexture(n, e), i.min && t.texParameteri(n, t.TEXTURE_MIN_FILTER, i.min), i.mag && t.texParameteri(n, t.TEXTURE_MAG_FILTER, i.mag), i.wrap && (t.texParameteri(n, t.TEXTURE_WRAP_S, i.wrap), t.texParameteri(n, t.TEXTURE_WRAP_T, i.wrap)), i.wrapS && t.texParameteri(n, t.TEXTURE_WRAP_S, i.wrapS), i.wrapT && t.texParameteri(n, t.TEXTURE_WRAP_T, i.wrapT)
                    }

                    function A(t) {
                        return t = t || T.textureColor, y(t) ? t : new Uint8Array([255 * t[0], 255 * t[1], 255 * t[2], 255 * t[3]])
                    }

                    function u(t) {
                        return 0 === (t & t - 1)
                    }

                    function c(t, e, i, n, r) {
                        i = i || T.textureOptions;
                        var o = i.target || t.TEXTURE_2D;
                        n = n || i.width, r = r || i.height, t.bindTexture(o, e), u(n) && u(r) ? t.generateMipmap(o) : (t.texParameteri(o, t.TEXTURE_MIN_FILTER, t.LINEAR), t.texParameteri(o, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(o, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE))
                    }

                    function l(t, e) {
                        return e = e || {}, e.cubeFaceOrder || [t.TEXTURE_CUBE_MAP_POSITIVE_X, t.TEXTURE_CUBE_MAP_NEGATIVE_X, t.TEXTURE_CUBE_MAP_POSITIVE_Y, t.TEXTURE_CUBE_MAP_NEGATIVE_Y, t.TEXTURE_CUBE_MAP_POSITIVE_Z, t.TEXTURE_CUBE_MAP_NEGATIVE_Z]
                    }

                    function h(t, e) {
                        var i = l(t, e),
                            n = i.map(function(t, e) {
                                return {
                                    face: t,
                                    ndx: e
                                }
                            });
                        return n.sort(function(t, e) {
                            return t.face - e.face
                        }), n
                    }

                    function d() {}

                    function f(t, e, i) {
                        i = i || d;
                        var n = new Image;
                        return e = void 0 !== e ? e : T.crossOrigin, void 0 !== e && (n.crossOrigin = e), n.onerror = function() {
                            var e = "couldn't load image: " + t;
                            i(e, n)
                        }, n.onload = function() {
                            i(null, n)
                        }, n.src = t, n
                    }

                    function g(t, e, i) {
                        i = i || T.textureOptions;
                        var n = i.target || t.TEXTURE_2D;
                        if (t.bindTexture(n, e), i.color !== !1) {
                            var r = A(i.color);
                            if (n === t.TEXTURE_CUBE_MAP)
                                for (var o = 0; 6 > o; ++o) t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
                            else t.texImage2D(n, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r)
                        }
                    }

                    function p(t, i, n, r) {
                        r = r || d, n = n || T.textureOptions, g(t, i, n), n = e.shallowCopy(n);
                        var o = f(n.src, n.crossOrigin, function(e, o) {
                            e ? r(e, i, o) : (B(t, i, o, n), r(null, i, o))
                        });
                        return o
                    }

                    function M(t, i, n, r) {
                        function a(e) {
                            return function(a, A) {
                                --M, a ? v.push(a) : A.width !== A.height ? v.push("cubemap face img is not a square: " + A.src) : (o(t, n), t.bindTexture(h, i), 5 === M ? l(t).forEach(function(e) {
                                    t.texImage2D(e, 0, u, u, c, A)
                                }) : t.texImage2D(e, 0, u, u, c, A), s(t, n), t.generateMipmap(h)), 0 === M && r(v.length ? v : void 0, p, i)
                            }
                        }
                        r = r || d;
                        var A = n.src;
                        if (6 !== A.length) throw "there must be 6 urls for a cubemap";
                        var u = n.format || t.RGBA,
                            c = n.type || t.UNSIGNED_BYTE,
                            h = n.target || t.TEXTURE_2D;
                        if (h !== t.TEXTURE_CUBE_MAP) throw "target must be TEXTURE_CUBE_MAP";
                        g(t, i, n), n = e.shallowCopy(n);
                        var p, M = 6,
                            v = [],
                            m = l(t, n);
                        p = A.map(function(t, e) {
                            return f(t, n.crossOrigin, a(m[e]))
                        })
                    }

                    function v(t) {
                        switch (t) {
                            case x:
                            case j:
                                return 1;
                            case N:
                                return 2;
                            case C:
                                return 3;
                            case R:
                                return 4;
                            default:
                                throw "unknown type: " + t
                        }
                    }

                    function m(e, i) {
                        return y(i) ? t.getGLTypeForTypedArray(i) : e.UNSIGNED_BYTE
                    }

                    function w(e, i, n, r) {
                        r = r || T.textureOptions;
                        var a = r.target || e.TEXTURE_2D;
                        e.bindTexture(a, i);
                        var A = r.width,
                            u = r.height,
                            c = r.format || e.RGBA,
                            l = r.type || m(e, n),
                            d = v(c),
                            f = n.length / d;
                        if (f % 1) throw "length wrong size for format: " + O(e, c);
                        if (A || u) {
                            if (u) {
                                if (!A && (A = f / u, A % 1)) throw "can't guess width"
                            } else if (u = f / A, u % 1) throw "can't guess height"
                        } else {
                            var g = Math.sqrt(f / (a === e.TEXTURE_CUBE_MAP ? 6 : 1));
                            g % 1 === 0 ? (A = g, u = g) : (A = f, u = 1)
                        }
                        if (!y(n)) {
                            var p = t.getTypedArrayTypeForGLType(l);
                            n = new p(n)
                        }
                        if (e.pixelStorei(e.UNPACK_ALIGNMENT, r.unpackAlignment || 1), o(e, r), a === e.TEXTURE_CUBE_MAP) {
                            var M = f / 6 * d;
                            h(e, r).forEach(function(t) {
                                var i = M * t.ndx,
                                    r = n.subarray(i, i + M);
                                e.texImage2D(t.face, 0, c, A, u, 0, c, l, r)
                            })
                        } else e.texImage2D(a, 0, c, A, u, 0, c, l, n);
                        return s(e, r), {
                            width: A,
                            height: u
                        }
                    }

                    function E(t, e, i) {
                        var n = i.target || t.TEXTURE_2D;
                        t.bindTexture(n, e);
                        var r = i.format || t.RGBA,
                            s = i.type || t.UNSIGNED_BYTE;
                        if (o(t, i), n === t.TEXTURE_CUBE_MAP)
                            for (var a = 0; 6 > a; ++a) t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + a, 0, r, i.width, i.height, 0, r, s, null);
                        else t.texImage2D(n, 0, r, i.width, i.height, 0, r, s, null)
                    }

                    function D(t, e, i) {
                        i = i || d, e = e || T.textureOptions;
                        var n = t.createTexture(),
                            r = e.target || t.TEXTURE_2D,
                            o = e.width || 1,
                            s = e.height || 1;
                        t.bindTexture(r, n), r === t.TEXTURE_CUBE_MAP && (t.texParameteri(r, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(r, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE));
                        var A = e.src;
                        if (A)
                            if ("function" == typeof A && (A = A(t, e)), "string" == typeof A) p(t, n, e, i);
                            else if (y(A) || Array.isArray(A) && ("number" == typeof A[0] || Array.isArray(A[0]) || y(A[0]))) {
                            var u = w(t, n, A, e);
                            o = u.width, s = u.height
                        } else if (Array.isArray(A) && "string" == typeof A[0]) M(t, n, e, i);
                        else {
                            if (!(A instanceof HTMLElement)) throw "unsupported src type";
                            B(t, n, A, e), o = A.width, s = A.height
                        } else E(t, n, e);
                        return e.auto !== !1 && c(t, n, e, o, s), a(t, n, e), n
                    }

                    function S(t, e, i, n, r) {
                        n = n || i.width, r = r || i.height;
                        var o = i.target || t.TEXTURE_2D;
                        t.bindTexture(o, e);
                        var s, a = i.format || t.RGBA,
                            A = i.src;
                        if (s = A && (y(A) || Array.isArray(A) && "number" == typeof A[0]) ? i.type || m(t, A) : i.type || t.UNSIGNED_BYTE, o === t.TEXTURE_CUBE_MAP)
                            for (var u = 0; 6 > u; ++u) t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + u, 0, a, n, r, 0, a, s, null);
                        else t.texImage2D(o, 0, a, n, r, 0, a, s, null)
                    }

                    function L(t) {
                        return "string" == typeof t || Array.isArray(t) && "string" == typeof t[0]
                    }

                    function I(t, e, i) {
                        function n() {
                            0 === r && setTimeout(function() {
                                i(o.length ? o : void 0, s, a)
                            }, 0)
                        }
                        i = i || d;
                        var r = 0,
                            o = [],
                            s = {},
                            a = {};
                        return Object.keys(e).forEach(function(i) {
                            var A = e[i],
                                u = void 0;
                            L(A.src) && (u = function(t, e, s) {
                                a[i] = s, --r, t && o.push(t), n()
                            }, ++r), s[i] = D(t, A, u)
                        }), n(), s
                    }
                    var T = {
                            textureColor: new Uint8Array([128, 192, 255, 255]),
                            textureOptions: {}
                        },
                        y = t.isArrayBuffer,
                        x = 6406,
                        C = 6407,
                        R = 6408,
                        j = 6409,
                        N = 6410,
                        b = /^textureColor$/,
                        O = function() {
                            function t(t) {
                                e || (e = {}, Object.keys(t).forEach(function(i) {
                                    "number" == typeof t[i] && (e[t[i]] = i)
                                }))
                            }
                            var e;
                            return function(i, n) {
                                return t(), e[n] || "0x" + n.toString(16)
                            }
                        }(),
                        k = {},
                        B = function() {
                            var t = document.createElement("canvas").getContext("2d");
                            return function(e, i, n, r) {
                                r = r || T.textureOptions;
                                var A = r.target || e.TEXTURE_2D,
                                    u = n.width,
                                    l = n.height,
                                    d = r.format || e.RGBA,
                                    f = r.type || e.UNSIGNED_BYTE;
                                if (o(e, r), e.bindTexture(A, i), A === e.TEXTURE_CUBE_MAP) {
                                    var g, p, M = n.width,
                                        v = n.height;
                                    if (M / 6 === v) g = v, p = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];
                                    else if (v / 6 === M) g = M, p = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];
                                    else if (M / 3 === v / 2) g = M / 3, p = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];
                                    else {
                                        if (M / 2 !== v / 3) throw "can't figure out cube map from element: " + (n.src ? n.src : n.nodeName);
                                        g = M / 2, p = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2]
                                    }
                                    t.canvas.width = g, t.canvas.height = g, u = g, l = g, h(e, r).forEach(function(i) {
                                        var r = p[2 * i.ndx + 0] * g,
                                            o = p[2 * i.ndx + 1] * g;
                                        t.drawImage(n, r, o, g, g, 0, 0, g, g), e.texImage2D(i.face, 0, d, d, f, t.canvas)
                                    }), t.canvas.width = 1, t.canvas.height = 1
                                } else e.texImage2D(A, 0, d, d, f, n);
                                s(e, r), r.auto !== !1 && c(e, i, r, u, l), a(e, i, r)
                            }
                        }();
                    return {
                        setDefaults_: r,
                        createTexture: D,
                        setEmptyTexture: E,
                        setTextureFromArray: w,
                        loadTextureFromUrl: p,
                        setTextureFromElement: B,
                        setTextureFilteringForSize: c,
                        setTextureParameters: a,
                        setDefaultTextureColor: i,
                        createTextures: I,
                        resizeTexture: S,
                        getNumComponentsForFormat: v
                    }
                }), i("twgl/framebuffers", ["./textures", "./utils"], function(t, e) {
                    function i(t) {
                        return L[t]
                    }

                    function n(t) {
                        return I[t]
                    }

                    function r(r, o, s, a) {
                        var A = r.FRAMEBUFFER,
                            u = r.createFramebuffer();
                        r.bindFramebuffer(A, u), s = s || r.drawingBufferWidth, a = a || r.drawingBufferHeight, o = o || S;
                        var c = 0,
                            l = {
                                framebuffer: u,
                                attachments: [],
                                width: s,
                                height: a
                            };
                        return o.forEach(function(o) {
                            var u = o.attachment,
                                h = o.format,
                                d = i(h);
                            if (d || (d = M + c++), !u)
                                if (n(h)) u = r.createRenderbuffer(), r.bindRenderbuffer(r.RENDERBUFFER, u), r.renderbufferStorage(r.RENDERBUFFER, h, s, a);
                                else {
                                    var f = e.shallowCopy(o);
                                    f.width = s, f.height = a, f.auto = void 0 === o.auto ? !1 : o.auto, u = t.createTexture(r, f)
                                } if (u instanceof WebGLRenderbuffer) r.framebufferRenderbuffer(A, d, r.RENDERBUFFER, u);
                            else {
                                if (!(u instanceof WebGLTexture)) throw "unknown attachment type";
                                r.framebufferTexture2D(A, d, o.texTarget || r.TEXTURE_2D, u, o.level || 0)
                            }
                            l.attachments.push(u)
                        }), l
                    }

                    function o(e, i, n, r, o) {
                        r = r || e.drawingBufferWidth, o = o || e.drawingBufferHeight, i.width = r, i.height = o, n = n || S, n.forEach(function(n, s) {
                            var a = i.attachments[s],
                                A = n.format;
                            if (a instanceof WebGLRenderbuffer) e.bindRenderbuffer(e.RENDERBUFFER, a), e.renderbufferStorage(e.RENDERBUFFER, A, r, o);
                            else {
                                if (!(a instanceof WebGLTexture)) throw "unknown attachment type";
                                t.resizeTexture(e, a, n, r, o)
                            }
                        })
                    }

                    function s(t, e, i) {
                        i = i || t.FRAMEBUFFER, e ? (t.bindFramebuffer(i, e.framebuffer), t.viewport(0, 0, e.width, e.height)) : (t.bindFramebuffer(i, null), t.viewport(0, 0, t.drawingBufferWidth, t.drawingBufferHeight))
                    }
                    var a = 5121,
                        A = 6402,
                        u = 6408,
                        c = 32854,
                        l = 32855,
                        h = 36194,
                        d = 33189,
                        f = 6401,
                        g = 36168,
                        p = 34041,
                        M = 36064,
                        v = 36096,
                        m = 36128,
                        w = 33306,
                        E = 33071,
                        D = 9729,
                        S = [{
                            format: u,
                            type: a,
                            min: D,
                            wrap: E
                        }, {
                            format: p
                        }],
                        L = {};
                    L[p] = w, L[f] = m, L[g] = m, L[A] = v, L[d] = v;
                    var I = {};
                    return I[c] = !0, I[l] = !0, I[h] = !0, I[p] = !0, I[d] = !0, I[f] = !0, I[g] = !0, {
                        bindFramebufferInfo: s,
                        createFramebufferInfo: r,
                        resizeFramebufferInfo: o
                    }
                }), i("twgl/twgl", ["./attributes", "./draw", "./framebuffers", "./programs", "./textures", "./typedarrays"], function(t, e, i, n, r, o) {
                    function s(e) {
                        t.setDefaults_(e), r.setDefaults_(e)
                    }

                    function a(t, e) {
                        for (var i = ["webgl", "experimental-webgl"], n = null, r = 0; r < i.length; ++r) {
                            try {
                                n = t.getContext(i[r], e)
                            } catch (o) {}
                            if (n) break
                        }
                        return n
                    }

                    function A(t, e) {
                        var i = a(t, e);
                        return i
                    }

                    function u(t, e) {
                        e = e || 1, e = Math.max(1, e);
                        var i = t.clientWidth * e | 0,
                            n = t.clientHeight * e | 0;
                        return t.width !== i || t.height !== n ? (t.width = i, t.height = n, !0) : !1
                    }

                    function c(t) {
                        return "_" !== t[t.length - 1]
                    }

                    function l(t, e) {
                        Object.keys(t).filter(c).forEach(function(i) {
                            e[i] = t[i]
                        })
                    }
                    var h = {
                        getWebGLContext: A,
                        resizeCanvasToDisplaySize: u,
                        setDefaults: s
                    };
                    return [t, e, i, n, r, o].forEach(function(t) {
                        l(t, h)
                    }), h
                }), i("twgl/v3", [], function() {
                    function t(t) {
                        p = t
                    }

                    function e(t, e, i) {
                        var n = new p(3);
                        return t && (n[0] = t), e && (n[1] = e), i && (n[2] = i), n
                    }

                    function i(t, e, i) {
                        return i = i || new p(3), i[0] = t[0] + e[0], i[1] = t[1] + e[1], i[2] = t[2] + e[2], i
                    }

                    function n(t, e, i) {
                        return i = i || new p(3), i[0] = t[0] - e[0], i[1] = t[1] - e[1], i[2] = t[2] - e[2], i
                    }

                    function r(t, e, i, n) {
                        return n = n || new p(3), n[0] = (1 - i) * t[0] + i * e[0], n[1] = (1 - i) * t[1] + i * e[1], n[2] = (1 - i) * t[2] + i * e[2], n
                    }

                    function o(t, e, i) {
                        return i = i || new p(3), i[0] = t[0] * e, i[1] = t[1] * e, i[2] = t[2] * e, i
                    }

                    function s(t, e, i) {
                        return i = i || new p(3), i[0] = t[0] / e, i[1] = t[1] / e, i[2] = t[2] / e, i
                    }

                    function a(t, e, i) {
                        return i = i || new p(3), i[0] = t[1] * e[2] - t[2] * e[1], i[1] = t[2] * e[0] - t[0] * e[2], i[2] = t[0] * e[1] - t[1] * e[0], i
                    }

                    function A(t, e) {
                        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
                    }

                    function u(t) {
                        return Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2])
                    }

                    function c(t) {
                        return t[0] * t[0] + t[1] * t[1] + t[2] * t[2]
                    }

                    function l(t, e) {
                        e = e || new p(3);
                        var i = t[0] * t[0] + t[1] * t[1] + t[2] * t[2],
                            n = Math.sqrt(i);
                        return n > 1e-5 ? (e[0] = t[0] / n, e[1] = t[1] / n, e[2] = t[2] / n) : (e[0] = 0, e[1] = 0, e[2] = 0), e
                    }

                    function h(t, e) {
                        return e = e || new p(3), e[0] = -t[0], e[1] = -t[1], e[2] = -t[2], e
                    }

                    function d(t, e) {
                        return e = e || new p(3), e[0] = t[0], e[1] = t[1], e[2] = t[2], e
                    }

                    function f(t, e, i) {
                        return i = i || new p(3), i[0] = t[0] * e[0], i[1] = t[1] * e[1], i[2] = t[2] * e[2], i
                    }

                    function g(t, e, i) {
                        return i = i || new p(3), i[0] = t[0] / e[0], i[1] = t[1] / e[1], i[2] = t[2] / e[2], i
                    }
                    var p = Float32Array;
                    return {
                        add: i,
                        copy: d,
                        create: e,
                        cross: a,
                        divide: g,
                        divScalar: s,
                        dot: A,
                        lerp: r,
                        length: u,
                        lengthSq: c,
                        mulScalar: o,
                        multiply: f,
                        negate: h,
                        normalize: l,
                        setDefaultType: t,
                        subtract: n
                    }
                }), i("twgl/m4", ["./v3"], function(t) {
                    function e(t) {
                        VecType = t
                    }

                    function i(t, e) {
                        return e = e || new R(16), e[0] = -t[0], e[1] = -t[1], e[2] = -t[2], e[3] = -t[3], e[4] = -t[4], e[5] = -t[5], e[6] = -t[6], e[7] = -t[7], e[8] = -t[8], e[9] = -t[9], e[10] = -t[10], e[11] = -t[11], e[12] = -t[12], e[13] = -t[13], e[14] = -t[14], e[15] = -t[15], e
                    }

                    function n(t, e) {
                        return e = e || new R(16), e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = t[12], e[13] = t[13], e[14] = t[14], e[15] = t[15], e
                    }

                    function r(t) {
                        return t = t || new R(16), t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
                    }

                    function o(t, e) {
                        if (e = e || new R(16), e === t) {
                            var i;
                            return i = t[1], t[1] = t[4], t[4] = i, i = t[2], t[2] = t[8], t[8] = i, i = t[3], t[3] = t[12], t[12] = i, i = t[6], t[6] = t[9], t[9] = i, i = t[7], t[7] = t[13], t[13] = i, i = t[11], t[11] = t[14], t[14] = i, e
                        }
                        var n = t[0],
                            r = t[1],
                            o = t[2],
                            s = t[3],
                            a = t[4],
                            A = t[5],
                            u = t[6],
                            c = t[7],
                            l = t[8],
                            h = t[9],
                            d = t[10],
                            f = t[11],
                            g = t[12],
                            p = t[13],
                            M = t[14],
                            v = t[15];
                        return e[0] = n, e[1] = a, e[2] = l, e[3] = g, e[4] = r, e[5] = A, e[6] = h, e[7] = p, e[8] = o, e[9] = u, e[10] = d, e[11] = M, e[12] = s, e[13] = c, e[14] = f, e[15] = v, e
                    }

                    function s(t, e) {
                        e = e || new R(16);
                        var i = t[0],
                            n = t[1],
                            r = t[2],
                            o = t[3],
                            s = t[4],
                            a = t[5],
                            A = t[6],
                            u = t[7],
                            c = t[8],
                            l = t[9],
                            h = t[10],
                            d = t[11],
                            f = t[12],
                            g = t[13],
                            p = t[14],
                            M = t[15],
                            v = h * M,
                            m = p * d,
                            w = A * M,
                            E = p * u,
                            D = A * d,
                            S = h * u,
                            L = r * M,
                            I = p * o,
                            T = r * d,
                            y = h * o,
                            x = r * u,
                            C = A * o,
                            j = c * g,
                            N = f * l,
                            b = s * g,
                            O = f * a,
                            k = s * l,
                            B = c * a,
                            V = i * g,
                            P = f * n,
                            z = i * l,
                            U = c * n,
                            F = i * a,
                            G = s * n,
                            Q = v * a + E * l + D * g - (m * a + w * l + S * g),
                            Y = m * n + L * l + y * g - (v * n + I * l + T * g),
                            Z = w * n + I * a + x * g - (E * n + L * a + C * g),
                            H = S * n + T * a + C * l - (D * n + y * a + x * l),
                            W = 1 / (i * Q + s * Y + c * Z + f * H);
                        return e[0] = W * Q, e[1] = W * Y, e[2] = W * Z, e[3] = W * H, e[4] = W * (m * s + w * c + S * f - (v * s + E * c + D * f)), e[5] = W * (v * i + I * c + T * f - (m * i + L * c + y * f)), e[6] = W * (E * i + L * s + C * f - (w * i + I * s + x * f)), e[7] = W * (D * i + y * s + x * c - (S * i + T * s + C * c)), e[8] = W * (j * u + O * d + k * M - (N * u + b * d + B * M)), e[9] = W * (N * o + V * d + U * M - (j * o + P * d + z * M)), e[10] = W * (b * o + P * u + F * M - (O * o + V * u + G * M)), e[11] = W * (B * o + z * u + G * d - (k * o + U * u + F * d)), e[12] = W * (b * h + B * p + N * A - (k * p + j * A + O * h)), e[13] = W * (z * p + j * r + P * h - (V * h + U * p + N * r)), e[14] = W * (V * A + G * p + O * r - (F * p + b * r + P * A)), e[15] = W * (F * h + k * r + U * A - (z * A + G * h + B * r)), e
                    }

                    function a(t, e, i) {
                        i = i || new R(16);
                        var n = t[0],
                            r = t[1],
                            o = t[2],
                            s = t[3],
                            a = t[4],
                            A = t[5],
                            u = t[6],
                            c = t[7],
                            l = t[8],
                            h = t[9],
                            d = t[10],
                            f = t[11],
                            g = t[12],
                            p = t[13],
                            M = t[14],
                            v = t[15],
                            m = e[0],
                            w = e[1],
                            E = e[2],
                            D = e[3],
                            S = e[4],
                            L = e[5],
                            I = e[6],
                            T = e[7],
                            y = e[8],
                            x = e[9],
                            C = e[10],
                            j = e[11],
                            N = e[12],
                            b = e[13],
                            O = e[14],
                            k = e[15];
                        return i[0] = n * m + r * S + o * y + s * N, i[1] = n * w + r * L + o * x + s * b, i[2] = n * E + r * I + o * C + s * O, i[3] = n * D + r * T + o * j + s * k, i[4] = a * m + A * S + u * y + c * N, i[5] = a * w + A * L + u * x + c * b, i[6] = a * E + A * I + u * C + c * O, i[7] = a * D + A * T + u * j + c * k, i[8] = l * m + h * S + d * y + f * N, i[9] = l * w + h * L + d * x + f * b, i[10] = l * E + h * I + d * C + f * O, i[11] = l * D + h * T + d * j + f * k, i[12] = g * m + p * S + M * y + v * N, i[13] = g * w + p * L + M * x + v * b, i[14] = g * E + p * I + M * C + v * O, i[15] = g * D + p * T + M * j + v * k, i
                    }

                    function A(t, e, i) {
                        return i = i || r(), t !== i && (i[0] = t[0], i[1] = t[1], i[2] = t[2], i[3] = t[3], i[4] = t[4], i[5] = t[5], i[6] = t[6], i[7] = t[7], i[8] = t[8], i[9] = t[9], i[10] = t[10], i[11] = t[11]), i[12] = e[0], i[13] = e[1], i[14] = e[2], i[15] = 1, i
                    }

                    function u(e, i) {
                        return i = i || t.create(), i[0] = e[12], i[1] = e[13], i[2] = e[14], i
                    }

                    function c(e, i, n) {
                        n = n || t.create();
                        var r = 4 * i;
                        return n[0] = e[r + 0], n[1] = e[r + 1], n[2] = e[r + 2], n
                    }

                    function l(t, e, i, n, r) {
                        r = r || new R(16);
                        var o = Math.tan(.5 * Math.PI - .5 * t),
                            s = 1 / (i - n);
                        return r[0] = o / e, r[1] = 0, r[2] = 0, r[3] = 0, r[4] = 0, r[5] = o, r[6] = 0, r[7] = 0, r[8] = 0, r[9] = 0, r[10] = (i + n) * s, r[11] = -1, r[12] = 0, r[13] = 0, r[14] = i * n * s * 2, r[15] = 0, r
                    }

                    function h(t, e, i, n, r, o, s) {
                        return s = s || new R(16), s[0] = 2 / (e - t), s[1] = 0, s[2] = 0, s[3] = 0, s[4] = 0, s[5] = 2 / (n - i), s[6] = 0, s[7] = 0, s[8] = 0, s[9] = 0, s[10] = -1 / (o - r), s[11] = 0, s[12] = (e + t) / (t - e), s[13] = (n + i) / (i - n), s[14] = -r / (r - o), s[15] = 1, s
                    }

                    function d(t, e, i, n, r, o, s) {
                        s = s || new R(16);
                        var a = e - t,
                            A = n - i,
                            u = r - o;
                        return s[0] = 2 * r / a, s[1] = 0, s[2] = 0, s[3] = 0, s[4] = 0, s[5] = 2 * r / A, s[6] = 0, s[7] = 0, s[8] = (t + e) / a, s[9] = (n + i) / A, s[10] = o / u, s[11] = -1, s[12] = 0, s[13] = 0, s[14] = r * o / u, s[15] = 0, s
                    }

                    function f(e, i, n, r) {
                        r = r || new R(16);
                        var o = j,
                            s = N,
                            a = b;
                        return t.normalize(t.subtract(e, i, a), a), t.normalize(t.cross(n, a, o), o), t.normalize(t.cross(a, o, s), s), r[0] = o[0], r[1] = o[1], r[2] = o[2], r[3] = 0, r[4] = s[0], r[5] = s[1], r[6] = s[2], r[7] = 0, r[8] = a[0], r[9] = a[1], r[10] = a[2], r[11] = 0, r[12] = e[0], r[13] = e[1], r[14] = e[2], r[15] = 1, r
                    }

                    function g(t, e) {
                        return e = e || new R(16), e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = t[0], e[13] = t[1], e[14] = t[2], e[15] = 1, e
                    }

                    function p(t, e, i) {
                        i = i || new R(16);
                        var n = e[0],
                            r = e[1],
                            o = e[2],
                            s = t[0],
                            a = t[1],
                            A = t[2],
                            u = t[3],
                            c = t[4],
                            l = t[5],
                            h = t[6],
                            d = t[7],
                            f = t[8],
                            g = t[9],
                            p = t[10],
                            M = t[11],
                            v = t[12],
                            m = t[13],
                            w = t[14],
                            E = t[15];
                        return t !== i && (i[0] = s, i[1] = a, i[2] = A, i[3] = u, i[4] = c, i[5] = l, i[6] = h, i[7] = d, i[8] = f, i[9] = g, i[10] = p, i[11] = M), i[12] = s * n + c * r + f * o + v, i[13] = a * n + l * r + g * o + m, i[14] = A * n + h * r + p * o + w, i[15] = u * n + d * r + M * o + E, i
                    }

                    function M(t, e) {
                        e = e || new R(16);
                        var i = Math.cos(t),
                            n = Math.sin(t);
                        return e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = i, e[6] = n, e[7] = 0, e[8] = 0, e[9] = -n, e[10] = i, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
                    }

                    function v(t, e, i) {
                        i = i || new R(16);
                        var n = t[4],
                            r = t[5],
                            o = t[6],
                            s = t[7],
                            a = t[8],
                            A = t[9],
                            u = t[10],
                            c = t[11],
                            l = Math.cos(e),
                            h = Math.sin(e);
                        return i[4] = l * n + h * a, i[5] = l * r + h * A, i[6] = l * o + h * u, i[7] = l * s + h * c, i[8] = l * a - h * n, i[9] = l * A - h * r, i[10] = l * u - h * o, i[11] = l * c - h * s, t !== i && (i[0] = t[0], i[1] = t[1], i[2] = t[2], i[3] = t[3], i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]), i
                    }

                    function m(t, e) {
                        e = e || new R(16);
                        var i = Math.cos(t),
                            n = Math.sin(t);
                        return e[0] = i, e[1] = 0, e[2] = -n, e[3] = 0, e[4] = 0, e[5] = 1, e[6] = 0, e[7] = 0, e[8] = n, e[9] = 0, e[10] = i, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
                    }

                    function w(t, e, i) {
                        i = i || new R(16);
                        var n = t[0],
                            r = t[1],
                            o = t[2],
                            s = t[3],
                            a = t[8],
                            A = t[9],
                            u = t[10],
                            c = t[11],
                            l = Math.cos(e),
                            h = Math.sin(e);
                        return i[0] = l * n - h * a, i[1] = l * r - h * A, i[2] = l * o - h * u, i[3] = l * s - h * c, i[8] = l * a + h * n, i[9] = l * A + h * r, i[10] = l * u + h * o, i[11] = l * c + h * s, t !== i && (i[4] = t[4], i[5] = t[5], i[6] = t[6], i[7] = t[7], i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]), i
                    }

                    function E(t, e) {
                        e = e || new R(16);
                        var i = Math.cos(t),
                            n = Math.sin(t);
                        return e[0] = i, e[1] = n, e[2] = 0, e[3] = 0, e[4] = -n, e[5] = i, e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = 1, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
                    }

                    function D(t, e, i) {
                        i = i || new R(16);
                        var n = t[0],
                            r = t[1],
                            o = t[2],
                            s = t[3],
                            a = t[4],
                            A = t[5],
                            u = t[6],
                            c = t[7],
                            l = Math.cos(e),
                            h = Math.sin(e);
                        return i[0] = l * n + h * a, i[1] = l * r + h * A, i[2] = l * o + h * u, i[3] = l * s + h * c, i[4] = l * a - h * n, i[5] = l * A - h * r, i[6] = l * u - h * o, i[7] = l * c - h * s, t !== i && (i[8] = t[8], i[9] = t[9], i[10] = t[10], i[11] = t[11], i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]), i
                    }

                    function S(t, e, i) {
                        i = i || new R(16);
                        var n = t[0],
                            r = t[1],
                            o = t[2],
                            s = Math.sqrt(n * n + r * r + o * o);
                        n /= s, r /= s, o /= s;
                        var a = n * n,
                            A = r * r,
                            u = o * o,
                            c = Math.cos(e),
                            l = Math.sin(e),
                            h = 1 - c;
                        return i[0] = a + (1 - a) * c, i[1] = n * r * h + o * l, i[2] = n * o * h - r * l, i[3] = 0, i[4] = n * r * h - o * l, i[5] = A + (1 - A) * c, i[6] = r * o * h + n * l, i[7] = 0, i[8] = n * o * h + r * l, i[9] = r * o * h - n * l, i[10] = u + (1 - u) * c, i[11] = 0, i[12] = 0, i[13] = 0, i[14] = 0, i[15] = 1, i
                    }

                    function L(t, e, i, n) {
                        n = n || new R(16);
                        var r = e[0],
                            o = e[1],
                            s = e[2],
                            a = Math.sqrt(r * r + o * o + s * s);
                        r /= a, o /= a, s /= a;
                        var A = r * r,
                            u = o * o,
                            c = s * s,
                            l = Math.cos(i),
                            h = Math.sin(i),
                            d = 1 - l,
                            f = A + (1 - A) * l,
                            g = r * o * d + s * h,
                            p = r * s * d - o * h,
                            M = r * o * d - s * h,
                            v = u + (1 - u) * l,
                            m = o * s * d + r * h,
                            w = r * s * d + o * h,
                            E = o * s * d - r * h,
                            D = c + (1 - c) * l,
                            S = t[0],
                            L = t[1],
                            I = t[2],
                            T = t[3],
                            y = t[4],
                            x = t[5],
                            C = t[6],
                            j = t[7],
                            N = t[8],
                            b = t[9],
                            O = t[10],
                            k = t[11];
                        return n[0] = f * S + g * y + p * N, n[1] = f * L + g * x + p * b, n[2] = f * I + g * C + p * O, n[3] = f * T + g * j + p * k, n[4] = M * S + v * y + m * N, n[5] = M * L + v * x + m * b, n[6] = M * I + v * C + m * O, n[7] = M * T + v * j + m * k, n[8] = w * S + E * y + D * N, n[9] = w * L + E * x + D * b, n[10] = w * I + E * C + D * O, n[11] = w * T + E * j + D * k, t !== n && (n[12] = t[12], n[13] = t[13], n[14] = t[14], n[15] = t[15]), n
                    }

                    function I(t, e) {
                        return e = e || new R(16), e[0] = t[0], e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = t[1], e[6] = 0, e[7] = 0, e[8] = 0, e[9] = 0, e[10] = t[2],
                            e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, e
                    }

                    function T(t, e, i) {
                        i = i || new R(16);
                        var n = e[0],
                            r = e[1],
                            o = e[2];
                        return i[0] = n * t[0], i[1] = n * t[1], i[2] = n * t[2], i[3] = n * t[3], i[4] = r * t[4], i[5] = r * t[5], i[6] = r * t[6], i[7] = r * t[7], i[8] = o * t[8], i[9] = o * t[9], i[10] = o * t[10], i[11] = o * t[11], t !== i && (i[12] = t[12], i[13] = t[13], i[14] = t[14], i[15] = t[15]), i
                    }

                    function y(e, i, n) {
                        n = n || t.create();
                        var r = i[0],
                            o = i[1],
                            s = i[2],
                            a = r * e[3] + o * e[7] + s * e[11] + e[15];
                        return n[0] = (r * e[0] + o * e[4] + s * e[8] + e[12]) / a, n[1] = (r * e[1] + o * e[5] + s * e[9] + e[13]) / a, n[2] = (r * e[2] + o * e[6] + s * e[10] + e[14]) / a, n
                    }

                    function x(e, i, n) {
                        n = n || t.create();
                        var r = i[0],
                            o = i[1],
                            s = i[2];
                        return n[0] = r * e[0] + o * e[4] + s * e[8], n[1] = r * e[1] + o * e[5] + s * e[9], n[2] = r * e[2] + o * e[6] + s * e[10], n
                    }

                    function C(e, i, n) {
                        n = n || t.create();
                        var r = s(e),
                            o = i[0],
                            a = i[1],
                            A = i[2];
                        return n[0] = o * r[0] + a * r[1] + A * r[2], n[1] = o * r[4] + a * r[5] + A * r[6], n[2] = o * r[8] + a * r[9] + A * r[10], n
                    }
                    var R = Float32Array,
                        j = t.create(),
                        N = t.create(),
                        b = t.create();
                    return {
                        axisRotate: L,
                        axisRotation: S,
                        create: r,
                        copy: n,
                        frustum: d,
                        getAxis: c,
                        getTranslation: u,
                        identity: r,
                        inverse: s,
                        lookAt: f,
                        multiply: a,
                        negate: i,
                        ortho: h,
                        perspective: l,
                        rotateX: v,
                        rotateY: w,
                        rotateZ: D,
                        rotateAxis: L,
                        rotationX: M,
                        rotationY: m,
                        rotationZ: E,
                        scale: T,
                        scaling: I,
                        setDefaultType: e,
                        setTranslation: A,
                        transformDirection: x,
                        transformNormal: C,
                        transformPoint: y,
                        translate: p,
                        translation: g,
                        transpose: o
                    }
                }), i("twgl/primitives", ["./twgl", "./m4", "./v3"], function(t, e, i) {
                    function n(t, e) {
                        var i = 0;
                        return t.push = function() {
                            for (var e = 0; e < arguments.length; ++e) {
                                var n = arguments[e];
                                if (n instanceof Array || n.buffer && n.buffer instanceof ArrayBuffer)
                                    for (var r = 0; r < n.length; ++r) t[i++] = n[r];
                                else t[i++] = n
                            }
                        }, t.reset = function(t) {
                            i = t || 0
                        }, t.numComponents = e, Object.defineProperty(t, "numElements", {
                            get: function() {
                                return this.length / this.numComponents | 0
                            }
                        }), t
                    }

                    function r(t, e, i) {
                        var r = i || Float32Array;
                        return n(new r(t * e), t)
                    }

                    function o(t) {
                        return "indices" !== t
                    }

                    function s(t) {
                        function e(e) {
                            for (var o = t[e], a = o.numComponents, A = r(a, s, o.constructor), u = 0; s > u; ++u)
                                for (var c = i[u], l = c * a, h = 0; a > h; ++h) A.push(o[l + h]);
                            n[e] = A
                        }
                        var i = t.indices,
                            n = {},
                            s = i.length;
                        return Object.keys(t).filter(o).forEach(e), n
                    }

                    function a(t) {
                        if (t.indices) throw "can't flatten normals of indexed vertices. deindex them first";
                        for (var e = t.normal, i = e.length, n = 0; i > n; n += 9) {
                            var r = e[n + 0],
                                o = e[n + 1],
                                s = e[n + 2],
                                a = e[n + 3],
                                A = e[n + 4],
                                u = e[n + 5],
                                c = e[n + 6],
                                l = e[n + 7],
                                h = e[n + 8],
                                d = r + a + c,
                                f = o + A + l,
                                g = s + u + h,
                                p = Math.sqrt(d * d + f * f + g * g);
                            d /= p, f /= p, g /= p, e[n + 0] = d, e[n + 1] = f, e[n + 2] = g, e[n + 3] = d, e[n + 4] = f, e[n + 5] = g, e[n + 6] = d, e[n + 7] = f, e[n + 8] = g
                        }
                        return t
                    }

                    function A(t, e, i) {
                        for (var n = t.length, r = new Float32Array(3), o = 0; n > o; o += 3) i(e, [t[o], t[o + 1], t[o + 2]], r), t[o] = r[0], t[o + 1] = r[1], t[o + 2] = r[2]
                    }

                    function u(t, e, n) {
                        n = n || i.create();
                        var r = e[0],
                            o = e[1],
                            s = e[2];
                        return n[0] = r * t[0] + o * t[1] + s * t[2], n[1] = r * t[4] + o * t[5] + s * t[6], n[2] = r * t[8] + o * t[9] + s * t[10], n
                    }

                    function c(t, i) {
                        return A(t, i, e.transformDirection), t
                    }

                    function l(t, i) {
                        return A(t, e.inverse(i), u), t
                    }

                    function h(t, i) {
                        return A(t, i, e.transformPoint), t
                    }

                    function d(t, e) {
                        return Object.keys(t).forEach(function(i) {
                            var n = t[i];
                            i.indexOf("pos") >= 0 ? h(n, e) : i.indexOf("tan") >= 0 || i.indexOf("binorm") >= 0 ? c(n, e) : i.indexOf("norm") >= 0 && l(n, e)
                        }), t
                    }

                    function f(t, e, i) {
                        return t = t || 2, e = e || 0, i = i || 0, t *= .5, {
                            position: {
                                numComponents: 2,
                                data: [e + -1 * t, i + -1 * t, e + 1 * t, i + -1 * t, e + -1 * t, i + 1 * t, e + 1 * t, i + 1 * t]
                            },
                            normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],
                            texcoord: [0, 0, 1, 0, 0, 1, 1, 1],
                            indices: [0, 1, 2, 2, 1, 3]
                        }
                    }

                    function g(t, i, n, o, s) {
                        t = t || 1, i = i || 1, n = n || 1, o = o || 1, s = s || e.identity();
                        for (var a = (n + 1) * (o + 1), A = r(3, a), u = r(3, a), c = r(2, a), l = 0; o >= l; l++)
                            for (var h = 0; n >= h; h++) {
                                var f = h / n,
                                    g = l / o;
                                A.push(t * f - .5 * t, 0, i * g - .5 * i), u.push(0, 1, 0), c.push(f, g)
                            }
                        for (var p = n + 1, M = r(3, n * o * 2, Uint16Array), l = 0; o > l; l++)
                            for (var h = 0; n > h; h++) M.push((l + 0) * p + h, (l + 1) * p + h, (l + 0) * p + h + 1), M.push((l + 1) * p + h, (l + 1) * p + h + 1, (l + 0) * p + h + 1);
                        var v = d({
                            position: A,
                            normal: u,
                            texcoord: c,
                            indices: M
                        }, s);
                        return v
                    }

                    function p(t, e, i, n, o, s, a) {
                        if (0 >= e || 0 >= i) throw Error("subdivisionAxis and subdivisionHeight must be > 0");
                        n = n || 0, o = o || Math.PI, s = s || 0, a = a || 2 * Math.PI;
                        for (var A = o - n, u = a - s, c = (e + 1) * (i + 1), l = r(3, c), h = r(3, c), d = r(2, c), f = 0; i >= f; f++)
                            for (var g = 0; e >= g; g++) {
                                var p = g / e,
                                    M = f / i,
                                    v = u * p,
                                    m = A * M,
                                    w = Math.sin(v),
                                    E = Math.cos(v),
                                    D = Math.sin(m),
                                    S = Math.cos(m),
                                    L = E * D,
                                    I = S,
                                    T = w * D;
                                l.push(t * L, t * I, t * T), h.push(L, I, T), d.push(1 - p, M)
                            }
                        for (var y = e + 1, x = r(3, e * i * 2, Uint16Array), g = 0; e > g; g++)
                            for (var f = 0; i > f; f++) x.push((f + 0) * y + g, (f + 0) * y + g + 1, (f + 1) * y + g), x.push((f + 1) * y + g, (f + 0) * y + g + 1, (f + 1) * y + g + 1);
                        return {
                            position: l,
                            normal: h,
                            texcoord: d,
                            indices: x
                        }
                    }

                    function M(t) {
                        t = t || 1;
                        for (var e = t / 2, i = [
                                [-e, -e, -e],
                                [+e, -e, -e],
                                [-e, +e, -e],
                                [+e, +e, -e],
                                [-e, -e, +e],
                                [+e, -e, +e],
                                [-e, +e, +e],
                                [+e, +e, +e]
                            ], n = [
                                [1, 0, 0],
                                [-1, 0, 0],
                                [0, 1, 0],
                                [0, -1, 0],
                                [0, 0, 1],
                                [0, 0, -1]
                            ], o = [
                                [1, 0],
                                [0, 0],
                                [0, 1],
                                [1, 1]
                            ], s = 24, a = r(3, s), A = r(3, s), u = r(2, s), c = r(3, 12, Uint16Array), l = 0; 6 > l; ++l) {
                            for (var h = C[l], d = 0; 4 > d; ++d) {
                                var f = i[h[d]],
                                    g = n[l],
                                    p = o[d];
                                a.push(f), A.push(g), u.push(p)
                            }
                            var M = 4 * l;
                            c.push(M + 0, M + 1, M + 2), c.push(M + 0, M + 2, M + 3)
                        }
                        return {
                            position: a,
                            normal: A,
                            texcoord: u,
                            indices: c
                        }
                    }

                    function v(t, e, i, n, o, s, a) {
                        if (3 > n) throw Error("radialSubdivisions must be 3 or greater");
                        if (1 > o) throw Error("verticalSubdivisions must be 1 or greater");
                        for (var A = void 0 === s ? !0 : s, u = void 0 === a ? !0 : a, c = (A ? 2 : 0) + (u ? 2 : 0), l = (n + 1) * (o + 1 + c), h = r(3, l), d = r(3, l), f = r(2, l), g = r(3, n * (o + c) * 2, Uint16Array), p = n + 1, M = Math.atan2(t - e, i), v = Math.cos(M), m = Math.sin(M), w = A ? -2 : 0, E = o + (u ? 2 : 0), D = w; E >= D; ++D) {
                            var S, L = D / o,
                                I = i * L;
                            0 > D ? (I = 0, L = 1, S = t) : D > o ? (I = i, L = 1, S = e) : S = t + (e - t) * (D / o), (-2 === D || D === o + 2) && (S = 0, L = 0), I -= i / 2;
                            for (var T = 0; p > T; ++T) {
                                var y = Math.sin(T * Math.PI * 2 / n),
                                    x = Math.cos(T * Math.PI * 2 / n);
                                h.push(y * S, I, x * S), d.push(0 > D || D > o ? 0 : y * v, 0 > D ? -1 : D > o ? 1 : m, 0 > D || D > o ? 0 : x * v), f.push(T / n, 1 - L)
                            }
                        }
                        for (var D = 0; o + c > D; ++D)
                            for (var T = 0; n > T; ++T) g.push(p * (D + 0) + 0 + T, p * (D + 0) + 1 + T, p * (D + 1) + 1 + T), g.push(p * (D + 0) + 0 + T, p * (D + 1) + 1 + T, p * (D + 1) + 0 + T);
                        return {
                            position: h,
                            normal: d,
                            texcoord: f,
                            indices: g
                        }
                    }

                    function m(t, e) {
                        e = e || [];
                        for (var i = [], n = 0; n < t.length; n += 4) {
                            var r = t[n],
                                o = t.slice(n + 1, n + 4);
                            o.push.apply(o, e);
                            for (var s = 0; r > s; ++s) i.push.apply(i, o)
                        }
                        return i
                    }

                    function w() {
                        var t = [0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, 30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, 30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, 0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, 30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, 30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, 0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, 100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, 30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, 30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, 30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, 67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, 30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, 30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, 0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, 0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0],
                            e = [.22, .19, .22, .79, .34, .19, .22, .79, .34, .79, .34, .19, .34, .19, .34, .31, .62, .19, .34, .31, .62, .31, .62, .19, .34, .43, .34, .55, .49, .43, .34, .55, .49, .55, .49, .43, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0],
                            i = m([18, 0, 0, 1, 18, 0, 0, -1, 6, 0, 1, 0, 6, 1, 0, 0, 6, 0, -1, 0, 6, 1, 0, 0, 6, 0, 1, 0, 6, 1, 0, 0, 6, 0, -1, 0, 6, 1, 0, 0, 6, 0, -1, 0, 6, -1, 0, 0]),
                            n = m([18, 200, 70, 120, 18, 80, 70, 200, 6, 70, 200, 210, 6, 200, 200, 70, 6, 210, 100, 70, 6, 210, 160, 70, 6, 70, 180, 210, 6, 100, 70, 210, 6, 76, 210, 100, 6, 140, 210, 80, 6, 90, 130, 110, 6, 160, 160, 220], [255]),
                            o = t.length / 3,
                            s = {
                                position: r(3, o),
                                texcoord: r(2, o),
                                normal: r(3, o),
                                color: r(4, o, Uint8Array),
                                indices: r(3, o / 3, Uint16Array)
                            };
                        s.position.push(t), s.texcoord.push(e), s.normal.push(i), s.color.push(n);
                        for (var a = 0; o > a; ++a) s.indices.push(a);
                        return s
                    }

                    function E(t, e, n, o, s, a, A) {
                        function u(t, e, i) {
                            return t + (e - t) * i
                        }

                        function c(e, n, r, A, c, l) {
                            for (var f = 0; s >= f; f++) {
                                var v = n / (h - 1),
                                    m = f / s,
                                    w = 2 * (v - .5),
                                    E = (a + m * d) * Math.PI,
                                    D = Math.sin(E),
                                    S = Math.cos(E),
                                    L = u(t, e, D),
                                    I = w * o,
                                    T = S * t,
                                    y = D * L;
                                g.push(I, T, y);
                                var x = i.add(i.multiply([0, D, S], r), A);
                                p.push(x), M.push(v * c + l, m)
                            }
                        }

                        function l(t, e) {
                            for (var i = 0; s > i; ++i) w.push(t + i + 0, t + i + 1, e + i + 0), w.push(t + i + 1, e + i + 1, e + i + 0)
                        }
                        if (0 >= s) throw Error("subdivisionDown must be > 0");
                        a = a || 0, A = A || 1;
                        for (var h = 2, d = A - a, f = 2 * (s + 1) * (2 + h), g = r(3, f), p = r(3, f), M = r(2, f), v = 0; h > v; v++) {
                            var m = 2 * (v / (h - 1) - .5);
                            c(e, v, [1, 1, 1], [0, 0, 0], 1, 0), c(e, v, [0, 0, 0], [m, 0, 0], 0, 0), c(n, v, [1, 1, 1], [0, 0, 0], 1, 0), c(n, v, [0, 0, 0], [m, 0, 0], 0, 1)
                        }
                        var w = r(3, 2 * s * (2 + h), Uint16Array),
                            E = s + 1;
                        return l(0 * E, 4 * E), l(5 * E, 7 * E), l(6 * E, 2 * E), l(3 * E, 1 * E), {
                            position: g,
                            normal: p,
                            texcoord: M,
                            indices: w
                        }
                    }

                    function D(t, e, i, n, r, o) {
                        return v(t, t, e, i, n, r, o)
                    }

                    function S(t, e, i, n, o, s) {
                        if (3 > i) throw Error("radialSubdivisions must be 3 or greater");
                        if (3 > n) throw Error("verticalSubdivisions must be 3 or greater");
                        o = o || 0, s = s || 2 * Math.PI, range = s - o;
                        for (var a = i + 1, A = n + 1, u = a * A, c = r(3, u), l = r(3, u), h = r(2, u), d = r(3, i * n * 2, Uint16Array), f = 0; A > f; ++f)
                            for (var g = f / n, p = g * Math.PI * 2, M = Math.sin(p), v = t + M * e, m = Math.cos(p), w = m * e, E = 0; a > E; ++E) {
                                var D = E / i,
                                    S = o + D * range,
                                    L = Math.sin(S),
                                    I = Math.cos(S),
                                    T = L * v,
                                    y = I * v,
                                    x = L * M,
                                    C = I * M;
                                c.push(T, w, y), l.push(x, m, C), h.push(D, 1 - g)
                            }
                        for (var f = 0; n > f; ++f)
                            for (var E = 0; i > E; ++E) {
                                var R = 1 + E,
                                    j = 1 + f;
                                d.push(a * f + E, a * j + E, a * f + R), d.push(a * j + E, a * j + R, a * f + R)
                            }
                        return {
                            position: c,
                            normal: l,
                            texcoord: h,
                            indices: d
                        }
                    }

                    function L(t, e, i, n, o) {
                        if (3 > e) throw Error("divisions must be at least 3");
                        i = i ? i : 1, o = o ? o : 1, n = n ? n : 0;
                        for (var s = (e + 1) * (i + 1), a = r(3, s), A = r(3, s), u = r(2, s), c = r(3, i * e * 2, Uint16Array), l = 0, h = t - n, d = 0; i >= d; ++d) {
                            for (var f = n + h * Math.pow(d / i, o), g = 0; e >= g; ++g) {
                                var p = 2 * Math.PI * g / e,
                                    M = f * Math.cos(p),
                                    v = f * Math.sin(p);
                                if (a.push(M, 0, v), A.push(0, 1, 0), u.push(1 - g / e, d / i), d > 0 && g !== e) {
                                    var m = l + (g + 1),
                                        w = l + g,
                                        E = l + g - e,
                                        D = l + (g + 1) - e;
                                    c.push(m, w, E), c.push(m, E, D)
                                }
                            }
                            l += e + 1
                        }
                        return {
                            position: a,
                            normal: A,
                            texcoord: u,
                            indices: c
                        }
                    }

                    function I(t) {
                        return Math.random() * t | 0
                    }

                    function T(t, e) {
                        e = e || {};
                        var i = t.position.numElements,
                            n = r(4, i, Uint8Array),
                            o = e.rand || function(t, e) {
                                return 3 > e ? I(256) : 255
                            };
                        if (t.color = n, t.indices)
                            for (var s = 0; i > s; ++s) n.push(o(s, 0), o(s, 1), o(s, 2), o(s, 3));
                        else
                            for (var a = e.vertsPerColor || 3, A = i / a, s = 0; A > s; ++s)
                                for (var u = [o(s, 0), o(s, 1), o(s, 2), o(s, 3)], c = 0; a > c; ++c) n.push(u);
                        return t
                    }

                    function y(e) {
                        return function(i) {
                            var n = e.apply(this, Array.prototype.slice.call(arguments, 1));
                            return t.createBuffersFromArrays(i, n)
                        }
                    }

                    function x(e) {
                        return function(i) {
                            var n = e.apply(null, Array.prototype.slice.call(arguments, 1));
                            return t.createBufferInfoFromArrays(i, n)
                        }
                    }
                    var C = [
                        [3, 7, 5, 1],
                        [6, 2, 0, 4],
                        [6, 7, 3, 2],
                        [0, 1, 5, 4],
                        [7, 6, 4, 5],
                        [2, 3, 1, 0]
                    ];
                    return {
                        create3DFBufferInfo: x(w),
                        create3DFBuffers: y(w),
                        create3DFVertices: w,
                        createAugmentedTypedArray: r,
                        createCubeBufferInfo: x(M),
                        createCubeBuffers: y(M),
                        createCubeVertices: M,
                        createPlaneBufferInfo: x(g),
                        createPlaneBuffers: y(g),
                        createPlaneVertices: g,
                        createSphereBufferInfo: x(p),
                        createSphereBuffers: y(p),
                        createSphereVertices: p,
                        createTruncatedConeBufferInfo: x(v),
                        createTruncatedConeBuffers: y(v),
                        createTruncatedConeVertices: v,
                        createXYQuadBufferInfo: x(f),
                        createXYQuadBuffers: y(f),
                        createXYQuadVertices: f,
                        createCresentBufferInfo: x(E),
                        createCresentBuffers: y(E),
                        createCresentVertices: E,
                        createCylinderBufferInfo: x(D),
                        createCylinderBuffers: y(D),
                        createCylinderVertices: D,
                        createTorusBufferInfo: x(S),
                        createTorusBuffers: y(S),
                        createTorusVertices: S,
                        createDiscBufferInfo: x(L),
                        createDiscBuffers: y(L),
                        createDiscVertices: L,
                        deindexVertices: s,
                        flattenNormals: a,
                        makeRandomVertexColors: T,
                        reorientDirections: c,
                        reorientNormals: l,
                        reorientPositions: h,
                        reorientVertices: d
                    }
                }), i("main", ["twgl/twgl", "twgl/m4", "twgl/v3", "twgl/primitives"], function(t, e, i, n) {
                    return t.m4 = e, t.v3 = i, t.primitives = n, t
                }), e(["main"], function(t) {
                    return t
                }, void 0, !0), i("build/js/twgl-includer-full", function() {}), e("main")
            })
        }, {}],
        4: [function(t, e, i) {
            function n() {
                var t = document.createElement("video");
                t.addEventListener("ended", function() {
                    t.play()
                }), this.request = function() {
                    t.paused && (t.src = s("video/mp4", "AAAAGGZ0eXBpc29tAAAAAG1wNDFhdmMxAAAIA21vb3YAAABsbXZoZAAAAADSa9v60mvb+gABX5AAlw/gAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAdkdHJhawAAAFx0a2hkAAAAAdJr2/rSa9v6AAAAAQAAAAAAlw/gAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAQAAAAHAAAAAAAJGVkdHMAAAAcZWxzdAAAAAAAAAABAJcP4AAAAAAAAQAAAAAG3G1kaWEAAAAgbWRoZAAAAADSa9v60mvb+gAPQkAGjneAFccAAAAAAC1oZGxyAAAAAAAAAAB2aWRlAAAAAAAAAAAAAAAAVmlkZW9IYW5kbGVyAAAABodtaW5mAAAAFHZtaGQAAAABAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAAZHc3RibAAAAJdzdHNkAAAAAAAAAAEAAACHYXZjMQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAMABwASAAAAEgAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABj//wAAADFhdmNDAWQAC//hABlnZAALrNlfllw4QAAAAwBAAAADAKPFCmWAAQAFaOvssiwAAAAYc3R0cwAAAAAAAAABAAAAbgAPQkAAAAAUc3RzcwAAAAAAAAABAAAAAQAAA4BjdHRzAAAAAAAAAG4AAAABAD0JAAAAAAEAehIAAAAAAQA9CQAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEALcbAAAAAHHN0c2MAAAAAAAAAAQAAAAEAAABuAAAAAQAAAcxzdHN6AAAAAAAAAAAAAABuAAADCQAAABgAAAAOAAAADgAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABMAAAAUc3RjbwAAAAAAAAABAAAIKwAAACt1ZHRhAAAAI6llbmMAFwAAdmxjIDIuMi4xIHN0cmVhbSBvdXRwdXQAAAAId2lkZQAACRRtZGF0AAACrgX//6vcRem95tlIt5Ys2CDZI+7veDI2NCAtIGNvcmUgMTQyIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDEzIG1lPWhleCBzdWJtZT03IHBzeT0xIHBzeV9yZD0xLjAwOjAuMDAgbWl4ZWRfcmVmPTEgbWVfcmFuZ2U9MTYgY2hyb21hX21lPTEgdHJlbGxpcz0xIDh4OGRjdD0xIGNxbT0wIGRlYWR6b25lPTIxLDExIGZhc3RfcHNraXA9MSBjaHJvbWFfcXBfb2Zmc2V0PS0yIHRocmVhZHM9MTIgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTEgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD00MCByYz1hYnIgbWJ0cmVlPTEgYml0cmF0ZT0xMDAgcmF0ZXRvbD0xLjAgcWNvbXA9MC42MCBxcG1pbj0xMCBxcG1heD01MSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAU2WIhAAQ/8ltlOe+cTZuGkKg+aRtuivcDZ0pBsfsEi9p/i1yU9DxS2lq4dXTinViF1URBKXgnzKBd/Uh1bkhHtMrwrRcOJslD01UB+fyaL6ef+DBAAAAFEGaJGxBD5B+v+a+4QqF3MgBXz9MAAAACkGeQniH/+94r6EAAAAKAZ5hdEN/8QytwAAAAAgBnmNqQ3/EgQAAAA5BmmhJqEFomUwIIf/+4QAAAApBnoZFESw//76BAAAACAGepXRDf8SBAAAACAGep2pDf8SAAAAADkGarEmoQWyZTAgh//7gAAAACkGeykUVLD//voEAAAAIAZ7pdEN/xIAAAAAIAZ7rakN/xIAAAAAOQZrwSahBbJlMCCH//uEAAAAKQZ8ORRUsP/++gQAAAAgBny10Q3/EgQAAAAgBny9qQ3/EgAAAAA5BmzRJqEFsmUwIIf/+4AAAAApBn1JFFSw//76BAAAACAGfcXRDf8SAAAAACAGfc2pDf8SAAAAADkGbeEmoQWyZTAgh//7hAAAACkGflkUVLD//voAAAAAIAZ+1dEN/xIEAAAAIAZ+3akN/xIEAAAAOQZu8SahBbJlMCCH//uAAAAAKQZ/aRRUsP/++gQAAAAgBn/l0Q3/EgAAAAAgBn/tqQ3/EgQAAAA5Bm+BJqEFsmUwIIf/+4QAAAApBnh5FFSw//76AAAAACAGePXRDf8SAAAAACAGeP2pDf8SBAAAADkGaJEmoQWyZTAgh//7gAAAACkGeQkUVLD//voEAAAAIAZ5hdEN/xIAAAAAIAZ5jakN/xIEAAAAOQZpoSahBbJlMCCH//uEAAAAKQZ6GRRUsP/++gQAAAAgBnqV0Q3/EgQAAAAgBnqdqQ3/EgAAAAA5BmqxJqEFsmUwIIf/+4AAAAApBnspFFSw//76BAAAACAGe6XRDf8SAAAAACAGe62pDf8SAAAAADkGa8EmoQWyZTAgh//7hAAAACkGfDkUVLD//voEAAAAIAZ8tdEN/xIEAAAAIAZ8vakN/xIAAAAAOQZs0SahBbJlMCCH//uAAAAAKQZ9SRRUsP/++gQAAAAgBn3F0Q3/EgAAAAAgBn3NqQ3/EgAAAAA5Bm3hJqEFsmUwIIf/+4QAAAApBn5ZFFSw//76AAAAACAGftXRDf8SBAAAACAGft2pDf8SBAAAADkGbvEmoQWyZTAgh//7gAAAACkGf2kUVLD//voEAAAAIAZ/5dEN/xIAAAAAIAZ/7akN/xIEAAAAOQZvgSahBbJlMCCH//uEAAAAKQZ4eRRUsP/++gAAAAAgBnj10Q3/EgAAAAAgBnj9qQ3/EgQAAAA5BmiRJqEFsmUwIIf/+4AAAAApBnkJFFSw//76BAAAACAGeYXRDf8SAAAAACAGeY2pDf8SBAAAADkGaaEmoQWyZTAgh//7hAAAACkGehkUVLD//voEAAAAIAZ6ldEN/xIEAAAAIAZ6nakN/xIAAAAAOQZqsSahBbJlMCCH//uAAAAAKQZ7KRRUsP/++gQAAAAgBnul0Q3/EgAAAAAgBnutqQ3/EgAAAAA5BmvBJqEFsmUwIIf/+4QAAAApBnw5FFSw//76BAAAACAGfLXRDf8SBAAAACAGfL2pDf8SAAAAADkGbNEmoQWyZTAgh//7gAAAACkGfUkUVLD//voEAAAAIAZ9xdEN/xIAAAAAIAZ9zakN/xIAAAAAOQZt4SahBbJlMCCH//uEAAAAKQZ+WRRUsP/++gAAAAAgBn7V0Q3/EgQAAAAgBn7dqQ3/EgQAAAA5Bm7xJqEFsmUwIIf/+4AAAAApBn9pFFSw//76BAAAACAGf+XRDf8SAAAAACAGf+2pDf8SBAAAADkGb4EmoQWyZTAgh//7hAAAACkGeHkUVLD//voAAAAAIAZ49dEN/xIAAAAAIAZ4/akN/xIEAAAAOQZokSahBbJlMCCH//uAAAAAKQZ5CRRUsP/++gQAAAAgBnmF0Q3/EgAAAAAgBnmNqQ3/EgQAAAA5BmmhJqEFsmUwIIf/+4QAAAApBnoZFFSw//76BAAAACAGepXRDf8SBAAAACAGep2pDf8SAAAAADkGarEmoQWyZTAgh//7gAAAACkGeykUVLD//voEAAAAIAZ7pdEN/xIAAAAAIAZ7rakN/xIAAAAAPQZruSahBbJlMFEw3//7B"), t.play())
                }, this.release = function() {
                    t.pause(), t.src = ""
                }
            }

            function r() {
                var t = null;
                this.request = function() {
                    t || (t = setInterval(function() {
                        window.location = window.location, setTimeout(window.stop, 0)
                    }, 3e4))
                }, this.release = function() {
                    t && (clearInterval(t), t = null)
                }
            }

            function o() {
                var t = navigator.userAgent || navigator.vendor || window.opera;
                return t.match(/iPhone/i) || t.match(/iPod/i) ? r : n
            }
            var s = function(t, e) {
                return "data:" + t + ";base64," + e
            };
            e.exports = o()
        }, {}],
        5: [function(t, e, i) {
            function n(t, e, i, n, r, o) {
                t.beginPath(), t.moveTo(e + o, i), t.lineTo(e + n - o, i), t.quadraticCurveTo(e + n, i, e + n, i + o), t.lineTo(e + n, i + r - o), t.quadraticCurveTo(e + n, i + r, e + n - o, i + r), t.lineTo(e + o, i + r), t.quadraticCurveTo(e, i + r, e, i + r - o), t.lineTo(e, i + o), t.quadraticCurveTo(e, i, e + o, i), t.closePath(), t.fill(), t.stroke()
            }

            function r() {
                this.gl = null, this.glTex = null, this.backupTex = null, this.vrTextureDescription = null, this.canvas = null, this.ctx = null, this.dirty = !1
            }

            function o(t, e, i) {
                for (var n = e.split(" "), r = "", o = [], s = 0, a = 0, A = 0, u = 0; u < n.length; u++) {
                    n[u].length > 25 && (n[u] = n[u].substring(0, 20) + "[...]");
                    var c = r + n[u] + " ",
                        l = t.measureText(c);
                    A = l.width, A > i && u > 0 ? (A > s && (s = a), o.push(r), r = n[u] + " ") : "\n" == n[u][0] ? (A > s && (s = a), o.push(r), r = n[u].slice(1) + " ") : r = c, a = A
                }
                return o.push(r), 1 == o.length && (s = A), [o, 1.1 * s]
            }
            VRTextureDescription = t("./VRTextureDescription.js");
            var s = t("../js-ext/twgl-full.js"),
                a = 1024;
            r.prototype.initBase = function(t) {
                this.vrTextureDescription = new VRTextureDescription, this.canvas = document.createElement("canvas"), this.ctx = this.canvas.getContext("2d"), this.ctx.canvas.width = a, this.ctx.canvas.height = a, this.gl = t
            }, r.prototype.setDirty = function() {
                this.dirty = !0
            }, r.prototype.clearDirty = function() {
                this.dirty = !1
            }, r.prototype.getDirty = function() {
                return this.dirty
            }, r.prototype.getDirtyAndClear = function() {
                var t = this.dirty;
                return this.dirty = !1, t
            }, r.prototype.teardown = function() {}, r.prototype.updateBase = function() {
                null != this.gl && (null != this.glTex && this.gl.deleteTexture(this.glTex), this.glTex = s.createTexture(this.gl, {
                    min: this.gl.LINEAR,
                    mag: this.gl.LINEAR,
                    src: this.ctx.canvas
                }))
            }, VRCanvasDecal = function() {}, VRCanvasDecal.prototype = new r;
            var A = function(t) {
                var e, i, n, r, o = t.decalObject.desiredSphereFOV,
                    s = t.width,
                    A = t.height,
                    u = [];
                s > A ? (n = a, r = n * A / s, e = 0, i = a / 2 - r / 2, u = [o[0], o[0] * A / s]) : (r = a, n = r * s / A, i = 0, e = a / 2 - n / 2, u = [o[0], o[0] * A / s]), t.decalObject.ctx.drawImage(t, e, i, n, r), t.decalObject.vrTextureDescription.sphereFOV = u, t.decalObject.updateBase(), t.decalObject.clearDirty()
            };
            VRCanvasDecal.prototype.init = function(t, e, i) {
                this.initBase(t), this.setDirty(), this.vrTextureDescription = i, this.desiredSphereFOV = i.sphereFOV, this.imgsrc = e, this.image = new Image, this.image.decalObject = this, this.image.crossOrigin = "Anonymous", this.image.onload = function() {
                    A(this)
                }, this.image.src = e
            }, VRCanvasDecal.prototype.update = function(t) {
                this.updateBase()
            }, VRCanvasSpinner = function() {}, VRCanvasSpinner.prototype = new r, VRCanvasSpinner.prototype.init = function(t) {
                this.initBase(t)
            }, VRCanvasSpinner.prototype.update = function(t) {
                this.ctx.fillStyle = "#00f", this.ctx.strokeStyle = "#ff0", this.ctx.lineWidth = "10", this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height), this.ctx.beginPath(), this.ctx.arc(this.ctx.canvas.width / 2, this.ctx.canvas.height / 2, this.ctx.canvas.width / 2.2 * Math.abs(Math.cos(t)), 0, 2 * Math.PI), this.ctx.stroke(), this.updateBase()
            }, VRCanvasArrow = function() {}, VRCanvasArrow.prototype = new r, VRCanvasArrow.prototype.init = function(t, e, i) {
                this.initBase(t), this.ctx.canvas.width = 256, this.ctx.canvas.height = 256, this.isLeft = i, this.vrTextureDescription.sphereFOV = [e, e]
            }, VRCanvasArrow.prototype.update = function(t) {
                this.ctx.beginPath(), this.ctx.lineWidth = 32, this.ctx.strokeStyle = "rgba(0,0,0,1.0)", this.ctx.fillStyle = "rgba(255,255,255,1.0)", 0 == this.isLeft ? (this.ctx.moveTo(128, 32), this.ctx.lineTo(224, 128), this.ctx.lineTo(128, 224), this.ctx.lineTo(128, 168), this.ctx.lineTo(32, 168), this.ctx.lineTo(32, 88), this.ctx.lineTo(128, 88), this.ctx.lineTo(128, 32)) : (this.ctx.moveTo(128, 32), this.ctx.lineTo(32, 128), this.ctx.lineTo(128, 224), this.ctx.lineTo(128, 168), this.ctx.lineTo(224, 168), this.ctx.lineTo(224, 88), this.ctx.lineTo(128, 88), this.ctx.lineTo(128, 32)), this.ctx.closePath(), this.ctx.stroke(), this.ctx.fill(), this.updateBase()
            }, VRCanvasTextBox = function() {}, VRCanvasTextBox.prototype = new r, VRCanvasTextBox.prototype.init = function(t, e, i, r) {
                this.initBase(t);
                var s = "Arial";
                null != r.fontface && (s = r.fontface);
                var a = 48;
                null != r.fontsize && (a = r.fontsize), a *= .5;
                var A = "center";
                null != r.align && (A = r.align);
                var u = 12;
                null != r.borderThickness && (u = r.borderThickness);
                var c = "#FFFFFF";
                null != r.borderColor && (c = r.borderColor);
                var l = "#000000";
                null != r.backgroundColor && (l = r.backgroundColor);
                var h = "#FFFFFF";
                null != r.textColor && (h = r.textColor), this.ctx.font = "Bold " + a + "px " + s;
                var d = 1.4,
                    f = o(this.ctx, e, this.ctx.canvas.width / 2),
                    g = f[0],
                    p = f[1];
                this.ctx.canvas.width = p + 2 * u, this.ctx.canvas.height = g.length * a * d + 2 * u, this.ctx.fillStyle = l, this.ctx.strokeStyle = c, this.ctx.lineWidth = u, n(this.ctx, u / 2, u / 2, p, g.length * a * d + u / 2, 6), this.ctx.fillStyle = h, this.ctx.font = a + "px " + s, this.ctx.textAlign = A;
                for (var M = 0; M < g.length; M++) {
                    var v = g[M];
                    "right" == A || "end" == A ? this.ctx.fillText(v, p + u, (M + 1) * a * d) : "center" == A ? this.ctx.fillText(v, p / 2 + u, (M + 1) * a * d) : ("start" == A || "left" == A) && this.ctx.fillText(v, 2 * u, (M + 1) * a * d)
                }
                var m = this.ctx.canvas.width,
                    w = this.ctx.canvas.height;
                this.vrTextureDescription.sphereFOV = [i, w * i / m]
            }, VRCanvasTextBox.prototype.update = function(t) {
                this.updateBase()
            }, VRCanvasFactoryCore = function() {
                this.createCanvasSpinner = function() {
                    return new VRCanvasSpinner
                }, this.createCanvasTextBox = function() {
                    return new VRCanvasTextBox
                }, this.createCanvasArrow = function() {
                    return new VRCanvasArrow
                }, this.createCanvasDecal = function() {
                    return new VRCanvasDecal
                }
            };
            var u = function() {
                function t() {
                    var t = new VRCanvasFactoryCore;
                    return t
                }
                var e;
                return {
                    getInstance: function() {
                        return e || (e = t()), e
                    }
                }
            }();
            e.exports = u.getInstance()
        }, {
            "../js-ext/twgl-full.js": 3,
            "./VRTextureDescription.js": 25
        }],
        6: [function(t, e, i) {
            function n() {
                this.eulerX = 0, this.eulerY = 0, this.eulerZ = 0, this.baseMat = twgl.m4.identity()
            }
            twgl = t("../js-ext/twgl-full.js");
            var r = t("./VRUtil.js"),
                o = new r,
                s = t("./VRRotMath.js"),
                a = new s;
            n.prototype.updateBase = function(t) {
                this.baseMat = twgl.m4.identity(), twgl.m4.rotateX(this.baseMat, Math.PI, this.baseMat), twgl.m4.rotateX(this.baseMat, this.eulerX, this.baseMat), twgl.m4.rotateY(this.baseMat, this.eulerY, this.baseMat), twgl.m4.rotateZ(this.baseMat, this.eulerZ, this.baseMat), twgl.m4.copy(this.baseMat, t)
            }, n.prototype.setEuler = function(t, e, i) {
                this.eulerX = t, this.eulerY = e, this.eulerZ = i
            }, n.prototype.getEuler = function() {
                return [this.eulerX, this.eulerY, this.eulerZ]
            }, VRIdleSpinner = function() {}, VRIdleSpinner.prototype = new n, VRIdleSpinner.prototype.update = function(t, e) {
                1 == e && (this.eulerZ = 0), this.setEuler(0, this.eulerZ - .01, 0), this.updateBase(t)
            };
            var A = function() {
                function t() {
                    var t = new VRIdleSpinner;
                    return t
                }
                var e;
                return {
                    getInstance: function() {
                        return e || (e = t()), e
                    }
                }
            }();
            VRMouseSpinner = function() {
                this.decayMode = !1, this.decayMult = .9, this.dX = 0, this.dY = 0
            }, VRMouseSpinner.prototype = new n, VRMouseSpinner.prototype.mouseMove = function(t, e, i, n) {
                this.eulerY = this.eulerY + .01 * e, this.eulerZ = this.eulerZ - .01 * t, this.dX = t, this.dY = e
            }, VRMouseSpinner.prototype.startDecay = function() {
                this.decayMode = !0, this.dX = parseFloat(this.dX), this.dY = parseFloat(this.dY)
            }, VRMouseSpinner.prototype.update = function(t, e) {
                1 == e && (this.eulerZ = 0), 1 == this.decayMode && (this.mouseMove(this.dX * this.decayMult, this.dY * this.decayMult, 0, 0), Math.abs(this.dX) < 1e-6 && Math.abs(this.dY) < 1e-6 && (this.decayMode = !1)), this.updateBase(t)
            }, VRGyroSpinner = function() {
                this.deviceOrientation = null, this.screenOrientation = window.orientation, window.addEventListener("deviceorientation", this.onDeviceOrientationChange_.bind(this), !0), window.addEventListener("orientationchange", this.onScreenOrientationChange_.bind(this), !0), this.baseRotation = twgl.m4.identity(), this.screenTransform = twgl.m4.identity(), this.yawOffset = 0, this.init = !1
            }, VRGyroSpinner.prototype = new n, VRGyroSpinner.prototype.onDeviceOrientationChange_ = function(t) {
                this.deviceOrientation = t
            }, VRGyroSpinner.prototype.onScreenOrientationChange_ = function(t) {
                this.screenOrientation = window.orientation
            }, VRGyroSpinner.prototype.update = function(t, e) {
                if (null != this.deviceOrientation) {
                    var i = a.gyroToMat(this.deviceOrientation.alpha, this.deviceOrientation.beta, this.deviceOrientation.gamma, this.screenOrientation, e);
                    twgl.m4.copy(i[0], t);
                    a.matToEuler(i);
                    this.eulerX = i[1], this.eulerY = i[2], this.eulerZ = 0
                }
            }, VRGyroSpinner.prototype.isMobile = function() {
                return window.DeviceOrientationEvent ? o.isMobile() : !1
            }, mobileAndTabletcheck = function() {};
            var u = function() {
                function t() {
                    var t = new VRGyroSpinner;
                    return t
                }
                var e;
                return {
                    getInstance: function() {
                        return e || (e = t()), e
                    }
                }
            }();
            VRLookMode = {
                MOUSE: 0,
                IDLESPINNER: 1,
                GYRO: 2
            }, VRLookController = function() {
                var t = this;
                this.angle = 0, this.vrMouseSpinner = new VRMouseSpinner, this.vrIdleSpinner = A.getInstance(), this.vrGyroSpinner = u.getInstance(), this.camera = null, this.mode = VRLookMode.MOUSE, this.euler = [0, 0, 0], this.pointer = null, this.setCamera = function(e) {
                    t.camera = e
                }, this.mouseMove = function(e, i, n, r) {
                    t.vrMouseSpinner.mouseMove(e, i, n, r), this.pointer = [n, r]
                }, this.mouseStop = function() {
                    this.pointer = null, t.vrMouseSpinner.startDecay()
                }, this.checkModes = function() {
                    this.vrGyroSpinner.isMobile() ? this.mode = VRLookMode.GYRO : this.mode = VRLookMode.MOUSE
                }, this.update = function(t) {
                    switch (this.checkModes(), this.mode) {
                        case VRLookMode.MOUSE:
                            this.vrMouseSpinner.update(this.camera, t), this.euler = this.vrMouseSpinner.getEuler();
                            break;
                        case VRLookMode.IDLESPINNER:
                            this.vrIdleSpinner.update(this.camera, t), this.euler = this.vrIdleSpinner.getEuler();
                            break;
                        case VRLookMode.GYRO:
                            this.vrGyroSpinner.update(this.camera, t), this.euler = this.vrGyroSpinner.getEuler()
                    }
                }, this.isGyro = function() {
                    return this.mode == VRLookMode.GYRO
                }, this.getHeading = function() {
                    return this.mode == VRLookMode.GYRO ? [this.euler[0], this.euler[1], this.euler[2]] : [-180 * this.euler[2] / Math.PI, -180 * this.euler[1] / Math.PI, 180 * this.euler[0] / Math.PI]
                }
            }, e.exports = VRLookController
        }, {
            "../js-ext/twgl-full.js": 3,
            "./VRRotMath.js": 15,
            "./VRUtil.js": 26
        }],
        7: [function(t, e, i) {
            var n = t("./VRTextureDescription.js");
            VRDecal = function() {
                this.textureDescription = null, this.imgsrc = null, this.init = function(t) {
                    this.decal = t, this.textureDescription = new n, this.textureDescription.setSphereParamsFromString(this.decal.getAttribute("sphereParams")), this.textureDescription.plane = this.textureDescription.parseBoolString(this.decal.getAttribute("plane")), this.textureDescription.setPlaneOffsetParamsFromString(this.decal.getAttribute("planeOffset")), this.imgsrc = this.decal.getAttribute("src"), this.jumpTo = this.decal.getAttribute("jumpTo"), void 0 == this.jumpTo && (this.jumpTo = "")
                }, this.initDict = function(t) {
                    this.textureDescription = new n, this.textureDescription.initDict(t.textureDescription), this.jumpTo = t.jumpTo, this.imgsrc = t.imgsrc
                }, this.getDecalElement = function() {
                    var t = document.createElement("decal");
                    return this.textureDescription.setElement(t), t.setAttribute("src", this.imgsrc), "" != this.jumpTo && t.setAttribute("jumpTo", this.jumpTo), t
                }
            }, e.exports = VRDecal
        }, {
            "./VRTextureDescription.js": 25
        }],
        8: [function(t, e, i) {
            var n = t("./VRRenderModes.js"),
                r = t("./VRIcons.js");
            VRHandsets = {
                Desktop: {
                    width: -1,
                    name: "Desktop browser"
                },
                Nexus5: {
                    width: 110,
                    name: "Nexus 5"
                },
                Nexus6: {
                    width: 133,
                    name: "Nexus 6"
                },
                GalaxyS6: {
                    width: 114,
                    name: "Samsing Galaxy S6"
                },
                GalaxyNote4: {
                    width: 125,
                    name: "Samsung Galaxy Note 4"
                },
                LGG3: {
                    width: 121,
                    name: "LG G3"
                },
                iPhoneSE: {
                    width: 89,
                    name: "iPhone SE"
                },
                iPhone4: {
                    width: 75,
                    name: "iPhone 4"
                },
                iPhone5s: {
                    width: 89,
                    name: "iPhone 5s"
                },
                iPhone5: {
                    width: 89,
                    name: "iPhone 5"
                },
                iPhone6: {
                    width: 104,
                    name: "iPhone 6"
                },
                iPhone6p: {
                    width: 112,
                    name: "iPhone 6 plus"
                }
            }, VRDevices = {
                FULLSCREEN: {
                    name: "Fullscreen",
                    renderMode: n.MONOCULAR,
                    icon: r.logoFullscreen,
                    hfov: 90,
                    ipd: -1,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                ANAGLYPH: {
                    name: "Red-blue glasses",
                    renderMode: n.STEREOANAGLYPH,
                    icon: r.logoAnaglyph,
                    hfov: 60,
                    ipd: -1,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                CARDBOARDV2: {
                    name: "Google Cardboard v2 (2015)",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoCardboard,
                    hfov: 60,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [.34, .55]
                },
                VIEWMASTER: {
                    name: "View-Master VR (2016)",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoCardboard,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [.34, .55]
                },
                GEARVR2015: {
                    name: "Samsung Gear VR",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoCardboard,
                    hfov: 90,
                    ipd: 60,
                    ipdAdjust: 0,
                    k: [.215, .215]
                },
                CARDBOARDV1: {
                    name: "Google Cardboard v1 (2014)",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoCardboard,
                    hfov: 40,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [.441, .156]
                },
                ALIANSOFTWAREALIANCARDBOARDV11: {
                    name: "Alian Software Alian Cardboard V1.1",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                UNOFFICIALCODEBYMETAMARIAANTVR: {
                    name: "AntVR",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [-.07, .189]
                },
                BAOFENGMOJINGLLL: {
                    name: "Baofeng Mojing lll",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 75,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.07, .15]
                },
                AURAVRAURAVRV2: {
                    name: "Aura VR Aura VR v2",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                UNOFFICIALCODEBYMETAMARIABAOFENGSMALLMOJING: {
                    name: "Baofeng Small Mojing",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [.15, .219]
                },
                BAOFENGMOJINGIVGAMES: {
                    name: "Baofeng Mojing IV Games",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 56,
                    ipdAdjust: 0,
                    k: [.61, 1.129]
                },
                BOXGLASSV10: {
                    name: "Boxglass v1.0",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [.009, .009]
                },
                IAMCARDBOARDIACGIANTEVAHEADSET: {
                    name: "I AM Cardboard IAC Giant EVA Headset",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                UNOFFICIALCARDBOARD20PLUS: {
                    name: "Unofficial Cardboard 2.0 Plus",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                HANDSTANDSCOBRAVR: {
                    name: "HandStands Cobra VR™",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.477, -.209]
                },
                COLORCROSSCOLORCROSS1: {
                    name: "Colorcross Colorcross-1",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 56,
                    ipdAdjust: 0,
                    k: [.18, .18]
                },
                DEFAIRYVRSH020: {
                    name: "DEFAIRY VRSH020",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                DESTEK2016V3: {
                    name: " Destek 2016 v3",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [-.009, .009]
                },
                DOMONHANCEVRC57: {
                    name: "DOMO nHance VRC57",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 65,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                DSCOPEPRODSCOPEPROVR: {
                    name: "D-Scope Pro D-Scope Pro VR",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.009, -.009]
                },
                IAMCARDBOARDDSCVRHEADSET: {
                    name: "I AM Cardboard DSCVR headset",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [.34, .55]
                },
                DUROVISDIVE7: {
                    name: "Durovis Dive 7",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 54,
                    ipdAdjust: 0,
                    k: [.4, -.18]
                },
                FIBRUMPRO: {
                    name: "FIBRUM Pro",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.545, .545]
                },
                PROTEUSVRLABSFREEFLY: {
                    name: "Proteus VR Labs Freefly",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [.209, .209]
                },
                PROTEUSVRLABSFREEFLY: {
                    name: "Proteus VR Labs Freefly",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [.209, .209]
                },
                SAMSUNGSMR320GEARVRNOTE4: {
                    name: "Samsung SM-R320 (Gear VR Note 4)",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.215, .215]
                },
                IAMCARDBOARDIACGIANTEVAHEADSET: {
                    name: "I AM Cardboard IAC Giant EVA Headset",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                HOMIDOHOMIDOMINI: {
                    name: "Homido Homido mini",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.17, .05]
                },
                IAMCARDBOARDCLASSIC: {
                    name: "I AM Cardboard Classic",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.25, .25]
                },
                IMMERSEVRHEADSET: {
                    name: " Immerse VR Headset",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 54,
                    ipdAdjust: 0,
                    k: [.119, .159]
                },
                PROTEUSVRLABSFREEFLY: {
                    name: "Proteus VR Labs Freefly",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [.209, .209]
                },
                INCREDISONICM700VUESERIESVRGLASSES: {
                    name: "IncrediSonic M700 VUE Series VR Glasses",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 64,
                    ipdAdjust: 0,
                    k: [.019, .019]
                },
                VRBOXNOBUTTON: {
                    name: " VR Box - no button",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 68,
                    ipdAdjust: 0,
                    k: [.019, .019]
                },
                YOURCOMPANYLINGVR: {
                    name: "Your company Ling VR",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 54,
                    ipdAdjust: 0,
                    k: [.319, -.019]
                },
                MERGEVRMERGE360GOGGLES: {
                    name: "Merge VR Merge 360º Goggles",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.07, .029]
                },
                MODECOMVOLCANOBLAZE: {
                    name: "Modecom Volcano Blaze",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 45,
                    ipdAdjust: 0,
                    k: [.07, .05]
                },
                NEXTCORECORPNOONVRGOGGLE: {
                    name: "Nextcore Corp. NOON VR Goggle",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.14, .14]
                },
                OWLVRVIEWER: {
                    name: "Owl VR Viewer",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 57,
                    ipdAdjust: 0,
                    k: [.46, .23]
                },
                ONEPLUSCARDBOARDVIEWERV11: {
                    name: "OnePlus Cardboard Viewer v1.1",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                PLANETVRCARDBOARD: {
                    name: "PlanetVR Cardboard",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [.109, .039]
                },
                POWISCUSTOMPOWISVIEWR: {
                    name: "PowisCustom Powis ViewR",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [.281, .494]
                },
                REFUGIO3DREFUGIO3DLVERSION: {
                    name: "Refugio3D Refugio3D L-Version",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 52,
                    ipdAdjust: 0,
                    k: [.009, .009]
                },
                RITECHRIEMIII: {
                    name: "RITECH Riem III",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [.34, .239]
                },
                POPTECH3DVRHEADSET: {
                    name: "Pop-Tech 3D VR Headset",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.36, .36]
                },
                STARLIGHTVRMODELSL001: {
                    name: "Starlight VR Model# SL-001",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.079, .1]
                },
                SUNNYPEAKVRG10200: {
                    name: "SUNNYPEAK VRG-10200",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                SUNNYPEAKVRG10900: {
                    name: "SUNNYPEAK VRG-10900",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                SUNNYPEAKVRG10200: {
                    name: "SUNNYPEAK VRG-10200",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                SUNNYPEAKVRG10700: {
                    name: "SUNNYPEAK VRG-10700",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                TEEFANTFVRA88004: {
                    name: "TEEFAN TF-VRA88004",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                SUNNYPEAKVRG11600: {
                    name: "SUNNYPEAK VRG-11600",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                TEEFANTFVRA88002: {
                    name: "TEEFAN TF-VRA88002",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                TEEFANTFVRA88001: {
                    name: "TEEFAN TF-VRA88001",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                TEEFANTFVRA88003: {
                    name: "TEEFAN TF-VRA88003",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 59,
                    ipdAdjust: 0,
                    k: [0, 0]
                },
                TTINTERNATIONAL3DVRVIEWER: {
                    name: "T.T. International 3D VR viewer",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 54,
                    ipdAdjust: 0,
                    k: [.1, 1]
                },
                NOVOVRCOMNOVOVRCARDBOARDV20: {
                    name: "novoVR.com novoVR（cardboard）V2.0",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 67,
                    ipdAdjust: 0,
                    k: [.3, .3]
                },
                VIARVIARBOX: {
                    name: "VIAR ViarBox",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 63,
                    ipdAdjust: 0,
                    k: [-.079, .079]
                },
                EVOMADEVIEWBOX: {
                    name: "evomade View Box",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.4, .15]
                },
                VRBOXNOBUTTON: {
                    name: " VR Box - no button",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 68,
                    ipdAdjust: 0,
                    k: [.019, .019]
                },
                ADAPTIVEDESIGNSVRKIX: {
                    name: "Adaptive Designs VRKiX",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 50,
                    ipdAdjust: 0,
                    k: [.009, -.009]
                },
                WEARALITYWEARALITYSKY01: {
                    name: "Wearality Wearality Sky 0.1",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 75,
                    ipd: 65,
                    ipdAdjust: 0,
                    k: [.119, .15]
                },
                YAY3DVRVIEWERFORNEXUS7: {
                    name: "yay3d VR Viewer for Nexus 7",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 55,
                    ipd: 70,
                    ipdAdjust: 0,
                    k: [.449, 0]
                },
                CARLZEISSAGVRONE: {
                    name: "Carl Zeiss AG VR ONE",
                    renderMode: n.STEREOSIDEBYSIDE,
                    icon: r.logoAnaglyph,
                    hfov: 50,
                    ipd: 61,
                    ipdAdjust: 0,
                    k: [.1, 1]
                }
            };
            var o = function(t, e, i) {
                    var n = t.ipd,
                        r = e.width;
                    return 0 > n || 0 > r ? 0 : 0 > i ? (.5 * n - .25 * r) / (.5 * r) : (.5 * i - .25 * r) / (.5 * r)
                },
                s = function() {
                    var t = "test",
                        e = window.localStorage;
                    try {
                        return e.setItem(t, "1"), e.removeItem(t), !0
                    } catch (i) {
                        return !1
                    }
                };
            VRDeviceManager = function() {
                this.version = "0.1", this.currentDeviceName = "ANAGLYPH", this.currentDevice = VRDevices[this.currentDeviceName], this.windowedDevice = VRDevices.FULLSCREEN, this.currentHandsetName = "Desktop", this.currentHandset = VRHandsets[this.currentHandsetName], this.windowedHandset = VRDevices.Desktop, this.userIPDOffset = 64, this.overrideIPD = !1, this.useLocalStorage = !0, this.localDict = null, this.init = function() {
                    0 == s() && (this.useLocalStorage = !1);
                    var t = this.getCookie();
                    null != t && (this.currentDeviceName = t.device, this.currentDevice = VRDevices[this.currentDeviceName], this.currentHandsetName = t.handset, this.currentHandset = VRHandsets[this.currentHandsetName], this.userIPDOffset = t.userIPDOffset, this.overrideIPD = t.overrideIPD)
                }, this.firstTime = function() {
                    var t = this.getCookie();
                    return null == t
                }, this.flushToCookie = function() {
                    var t = {
                        device: this.currentDeviceName,
                        handset: this.currentHandsetName,
                        userIPDOffset: this.userIPDOffset,
                        overrideIPD: this.overrideIPD
                    };
                    this.setCookie(t)
                }, this.setCookie = function(t) {
                    if (!this.useLocalStorage) return void(this.localDict = t);
                    var e = window.localStorage,
                        i = "vrEmbedDict_" + this.version + "_";
                    e[i + "device"] = t.device, e[i + "handset"] = t.handset, e[i + "userIPDOffset"] = t.userIPDOffset, e[i + "overrideIPD"] = t.overrideIPD
                }, this.getCookie = function() {
                    if (!this.useLocalStorage) return this.localDict;
                    var t = window.localStorage,
                        e = "vrEmbedDict_" + this.version + "_";
                    if (void 0 == t[e + "device"] || void 0 == t[e + "handset"] || void 0 == t[e + "userIPDOffset"] || void 0 == t[e + "overrideIPD"]) return null;
                    var i = {
                        device: t[e + "device"],
                        handset: t[e + "handset"],
                        userIPDOffset: t[e + "userIPDOffset"],
                        overrideIPD: t[e + "overrideIPD"]
                    };
                    return i
                }, this.getDeviceList = function() {
                    var t = [];
                    for (var e in VRDevices) "length" !== e && VRDevices.hasOwnProperty(e) && t.push(e);
                    return t
                }, this.getHandsetList = function() {
                    var t = [];
                    for (var e in VRHandsets) "length" !== e && VRHandsets.hasOwnProperty(e) && t.push(e);
                    return t
                }, this.getDevice = function(t) {
                    return VRDevices[t]
                }, this.getHandset = function(t) {
                    return VRHandsets[t]
                }, this.setOverrideIPD = function(t) {
                    this.overrideIPD = t, this.flushToCookie()
                }, this.setUserIPDOffset = function(t) {
                    this.userIPDOffset = t, this.flushToCookie()
                }, this.setCurrentDevice = function(t) {
                    this.currentDeviceName = t, this.currentDevice = VRDevices[t], this.flushToCookie()
                }, this.setCurrentHandset = function(t) {
                    this.currentHandsetName = t, this.currentHandset = VRHandsets[t], this.flushToCookie()
                }, this.getCurrentHandset = function() {
                    return this.currentHandset
                }, this.getWindowedHandset = function() {
                    return this.windowedHandset
                }, this.getCurrentDevice = function() {
                    return 0 == this.overrideIPD ? this.currentDevice.ipdAdjust = o(this.currentDevice, this.currentHandset, -1) : this.currentDevice.ipdAdjust = o(this.currentDevice, this.currentHandset, this.userIPDOffset), this.currentDevice
                }, this.getWindowedDevice = function() {
                    return this.currentDevice.ipdAdjust = 0, this.windowedDevice
                }
            };
            var a = function() {
                function t() {
                    var t = new VRDeviceManager;
                    return t.init(), t
                }
                var e;
                return {
                    getInstance: function() {
                        return e || (e = t()), e
                    }
                }
            }();
            e.exports = a.getInstance()
        }, {
            "./VRIcons.js": 10,
            "./VRRenderModes.js": 14
        }],
        9: [function(t, e, i) {
            function n(t, e, i, n, r) {
                var o = (t - e + i) % i,
                    s = (n - e + i) % i,
                    a = o - s;
                return a > 0 && r > a ? !0 : !1
            }

            function r(t, e) {
                var i = [Math.PI * (t[0] - e.sphereCentre[0]) / -180, Math.PI * (t[1] - e.sphereCentre[1]) / -180],
                    n = Math.cos(i[0]) * Math.cos(i[1]),
                    r = 90,
                    o = .5 * r / n;
                if (!(1e-6 >= o)) {
                    var s = -o * Math.cos(i[1]) * Math.sin(i[0]),
                        a = -o * Math.sin(i[1]),
                        A = e.planeOffset[0] - .5 * e.sphereFOV[0];
                    if (A > s) return !1;
                    var u = e.planeOffset[0] + .5 * e.sphereFOV[0];
                    if (s > u) return !1;
                    var c = e.planeOffset[1] - .5 * e.sphereFOV[1];
                    if (c > a) return !1;
                    var l = e.planeOffset[1] + .5 * e.sphereFOV[1];
                    return a > l ? !1 : !0
                }
            }
            navigator.vibrate = navigator.vibrate || navigator.webkitVibrate || navigator.mozVibrate || navigator.msVibrate, VRGuiTimer = function() {
                this.canvas = null, this.callback = null, this.callbackArgs = null, this["in"] = !1, this.startTime = Number.MAX_VALUE, this.callbackFired = !1, this.timeout = 1500, this.init = function(t, e, i) {
                    this.canvas = t, this.callback = e, this.callbackArgs = i
                }, this.isInBoundingBox = function(t, e) {
                    if (0 == e.plane) {
                        var i = e.sphereCentre[0] - .5 * e.sphereFOV[0];
                        if (!n(t[0], -180, 360, i, e.sphereFOV[0])) return !1;
                        var o = e.sphereCentre[1] - .5 * e.sphereFOV[1];
                        return n(t[1], -90, 180, o, e.sphereFOV[1]) ? !0 : !1
                    }
                    return r(t, e)
                }, this.update = function(t, e) {
                    if (null == this.callback) return this.isInBoundingBox(t, this.canvas.vrTextureDescription) ? this["in"] = !0 : this["in"] = !1, 0;
                    if (this.isInBoundingBox(t, this.canvas.vrTextureDescription)) {
                        if (0 == this["in"]) return this["in"] = !0, this.startTime = e, this.callbackFired = !1, 0;
                        var i = e - this.startTime;
                        return i > this.timeout ? (this.callbackFired || this.fireCallback(), 0) : i / this.timeout
                    }
                    return 1 == this["in"], this["in"] = !1, this.startTime = Number.MAX_VALUE, this.callbackFired = !1, 0
                }, this.fireCallback = function() {
                    this.callbackFired = !0, console.log("FIRING CALLBACK!"), this.callback(this.callbackArgs)
                }
            }, VRGui = function() {
                this.canvasSet = [], this.gl = null, this.guiHover = !1, this.isHovering = function() {
                    return this.guiHover
                }, this.init = function(t) {
                    this.gl = t
                }, this.teardown = function() {
                    for (texIt = 0; texIt < this.canvasSet.length; texIt++) this.canvasSet[texIt][0].teardown();
                    this.canvasSet = []
                }, this.isGuiDirty = function() {
                    for (texIt = 0; texIt < this.canvasSet.length; texIt++) {
                        var t = this.canvasSet[texIt][0].getDirty();
                        if (t) return !0
                    }
                    return !1
                }, this.update = function(t, e) {
                    var i = [t[0], t[1]];
                    this.guiHover = !1;
                    var n = 0;
                    for (texIt = 0; texIt < this.canvasSet.length; texIt++) {
                        var r = this.canvasSet[texIt][1].update(i, e);
                        r > n && (n = r), void 0 != this.canvasSet[texIt] && 1 == this.canvasSet[texIt][1]["in"] && (this.guiHover = !0)
                    }
                    return n
                }, this.createTextBox = function(t, e, i, n, r, o, s, a, A) {
                    var u = VRCanvasFactory.createCanvasTextBox();
                    u.init(this.gl, a, t, A), u.vrTextureDescription.sphereCentre = [e, i], u.vrTextureDescription.plane = n, u.vrTextureDescription.planeOffset = r, u.update(self.tick);
                    var c = new VRGuiTimer;
                    c.init(u, o, s), this.canvasSet.push([u, c])
                }, this.createDecal = function(t, e, i, n) {
                    var r = VRCanvasFactory.createCanvasDecal();
                    r.init(this.gl, i, n), r.update(self.tick);
                    var o = new VRGuiTimer;
                    o.init(r, t, e), this.canvasSet.push([r, o])
                }, this.createArrow = function(t, e, i, n, r, o) {
                    var s = VRCanvasFactory.createCanvasArrow();
                    s.init(this.gl, t, o), s.vrTextureDescription.sphereCentre = [e, i], s.update(self.tick);
                    var a = new VRGuiTimer;
                    a.init(s, n, r), this.canvasSet.push([s, a])
                }
            }, e.exports = VRGui
        }, {}],
        10: [function(t, e, i) {
            var n = function(t, e) {
                return "data:" + t + ";base64," + e
            };
            VRLogos = {
                logoCardboard: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxNS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+DQo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9ImNhcmRib2FyZF94NUZfcm91bmRlZCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayINCgkgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSIyNHB4IiBoZWlnaHQ9IjI0cHgiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjQgMjQiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iI0ZGRkZGRiIgZD0iTTQsNkMzLjQ1LDYsMyw2LjQ1LDMsN3YxMGMwLDAuNTUsMC40NSwxLDEsMWg0YzAuNTUsMCwxLjMxOC0wLjMxOCwxLjcwNy0wLjcwN2wxLjU4Ni0xLjU4Ng0KCQljMC4zODktMC4zODksMS4wMTYtMC4zOCwxLjM5NCwwLjAybDEuNDYxLDEuNTQ3QzE0LjUyNSwxNy42NzMsMTUuMjg0LDE4LDE1LjgzNCwxOEgyMGMwLjU1LDAsMS0wLjQ1LDEtMVY3YzAtMC41NS0wLjQ1LTEtMS0xSDR6DQoJCSBNNy41LDE1Yy0xLjY1NiwwLTMtMS4zNDQtMy0zczEuMzQ0LTMsMy0zczMsMS4zNDQsMywzUzkuMTU2LDE1LDcuNSwxNXogTTE2LjUsMTVjLTEuNjU2LDAtMy0xLjM0NC0zLTNzMS4zNDQtMywzLTNzMywxLjM0NCwzLDMNCgkJUzE4LjE1NiwxNSwxNi41LDE1eiIvPg0KCTxwYXRoIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgZD0iTTQsNkMzLjQ1LDYsMyw2LjQ1LDMsN3YxMGMwLDAuNTUsMC40NSwxLDEsMWg0DQoJCWMwLjU1LDAsMS4zMTgtMC4zMTgsMS43MDctMC43MDdsMS41ODYtMS41ODZjMC4zODktMC4zODksMS4wMTYtMC4zOCwxLjM5NCwwLjAybDEuNDYxLDEuNTQ3QzE0LjUyNSwxNy42NzMsMTUuMjg0LDE4LDE1LjgzNCwxOEgyMA0KCQljMC41NSwwLDEtMC40NSwxLTFWN2MwLTAuNTUtMC40NS0xLTEtMUg0eiBNNy41LDE1Yy0xLjY1NiwwLTMtMS4zNDQtMy0zczEuMzQ0LTMsMy0zczMsMS4zNDQsMywzUzkuMTU2LDE1LDcuNSwxNXogTTE2LjUsMTUNCgkJYy0xLjY1NiwwLTMtMS4zNDQtMy0zczEuMzQ0LTMsMy0zczMsMS4zNDQsMywzUzE4LjE1NiwxNSwxNi41LDE1eiIvPg0KPC9nPg0KPHBhdGggZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMUQxRDFCIiBzdHJva2Utd2lkdGg9IjAuMiIgc3Ryb2tlLW1pdGVybGltaXQ9IjEwIiBkPSJNOSwxMmMwLDAuODI5LTAuNjcxLDEuNS0xLjUsMS41Ii8+DQo8cGF0aCBmaWxsPSJub25lIiBzdHJva2U9IiMxRDFEMUIiIHN0cm9rZS13aWR0aD0iMC4yIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIGQ9Ik0xOCwxMmMwLDAuODI5LTAuNjcxLDEuNS0xLjUsMS41Ii8+DQo8L3N2Zz4NCg=="),
                logoFullscreen: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxNS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+DQo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9ImZ1bGxzY3JlZW5fMV8iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCINCgkgeT0iMHB4IiB3aWR0aD0iMjRweCIgaGVpZ2h0PSIyNHB4IiB2aWV3Qm94PSIwIDAgMjQgMjQiIGVuYWJsZS1iYWNrZ3JvdW5kPSJuZXcgMCAwIDI0IDI0IiB4bWw6c3BhY2U9InByZXNlcnZlIj4NCjxwb2x5Z29uIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgcG9pbnRzPSIzLDMgMyw5IDAsOSAwLDAgOSwwIDksMyAiLz4NCjxwb2x5Z29uIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgcG9pbnRzPSIzLDIxIDksMjEgOSwyNCAwLDI0IDAsMTUgMywxNSAiLz4NCjxwb2x5Z29uIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgcG9pbnRzPSIyMSwyMSAyMSwxNSAyNCwxNSAyNCwyNCAxNSwyNCAxNSwyMSANCgkiLz4NCjxwb2x5Z29uIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgcG9pbnRzPSIyMSwzIDE1LDMgMTUsMCAyNCwwIDI0LDkgMjEsOSAiLz4NCjwvc3ZnPg0K"),
                logoWindowed: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxNS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+DQo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IndpbmRvd2VkXzFfIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiDQoJIHk9IjBweCIgd2lkdGg9IjI0cHgiIGhlaWdodD0iMjRweCIgdmlld0JveD0iMCAwIDI0IDI0IiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCAyNCAyNCIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMxRDFEMUIiIHN0cm9rZS13aWR0aD0iMC4yIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIHBvaW50cz0iNiw2IDYsMCA5LDAgOSw5IDAsOSAwLDYgIi8+DQo8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMxRDFEMUIiIHN0cm9rZS13aWR0aD0iMC4yIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIHBvaW50cz0iNiwxOCAwLDE4IDAsMTUgOSwxNSA5LDI0IDYsMjQgIi8+DQo8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMxRDFEMUIiIHN0cm9rZS13aWR0aD0iMC4yIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIHBvaW50cz0iMTgsMTggMTgsMjQgMTUsMjQgMTUsMTUgMjQsMTUgMjQsMTggDQoJIi8+DQo8cG9seWdvbiBmaWxsPSIjRkZGRkZGIiBzdHJva2U9IiMxRDFEMUIiIHN0cm9rZS13aWR0aD0iMC4yIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIHBvaW50cz0iMTgsNiAyNCw2IDI0LDkgMTUsOSAxNSwwIDE4LDAgIi8+DQo8L3N2Zz4NCg=="),
                logoAnaglyph: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxNS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+DQo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9ImFuYWdseXBoX3g1Rl9yb3VuZGVkIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIg0KCSB4PSIwcHgiIHk9IjBweCIgd2lkdGg9IjI0cHgiIGhlaWdodD0iMjRweCIgdmlld0JveD0iMCAwIDI0IDI0IiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCAyNCAyNCIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8cmVjdCB4PSI0LjUiIHk9IjEwLjUiIGZpbGw9IiMzNkE5RTEiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjUiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgd2lkdGg9IjYiIGhlaWdodD0iMyIvPg0KPHJlY3QgeD0iMTMuNSIgeT0iMTAuNSIgZmlsbD0iI0JFMTYyMiIgc3Ryb2tlPSIjMUQxRDFCIiBzdHJva2Utd2lkdGg9IjAuNSIgc3Ryb2tlLW1pdGVybGltaXQ9IjEwIiB3aWR0aD0iNiIgaGVpZ2h0PSIzIi8+DQo8Zz4NCgk8cGF0aCBmaWxsPSIjRkZGRkZGIiBkPSJNMy41LDcuNUMzLjIyNSw3LjUsMyw3LjcyNSwzLDh2OGMwLDAuMjc1LDAuMjI1LDAuNSwwLjUsMC41SDEwYzAuMjc1LDAsMC42NTktMC4xNTksMC44NTQtMC4zNTQNCgkJbDAuNzkzLTAuNzkzYzAuMTk0LTAuMTk0LDAuNTEzLTAuMTk0LDAuNzA3LDBsMC43OTMsMC43OTNDMTMuMzQxLDE2LjM0MSwxMy43MjUsMTYuNSwxNCwxNi41aDYuNWMwLjI3NSwwLDAuNS0wLjIyNSwwLjUtMC41VjgNCgkJYzAtMC4yNzUtMC4yMjUtMC41LTAuNS0wLjVIMy41eiBNMTAuNSwxM2MwLDAuMjc1LTAuMjI1LDAuNS0wLjUsMC41SDVjLTAuMjc1LDAtMC41LTAuMjI1LTAuNS0wLjV2LTJjMC0wLjI3NSwwLjIyNS0wLjUsMC41LTAuNWg1DQoJCWMwLjI3NSwwLDAuNSwwLjIyNSwwLjUsMC41VjEzeiBNMTkuNSwxM2MwLDAuMjc1LTAuMjI1LDAuNS0wLjUsMC41aC01Yy0wLjI3NSwwLTAuNS0wLjIyNS0wLjUtMC41di0yYzAtMC4yNzUsMC4yMjUtMC41LDAuNS0wLjVoNQ0KCQljMC4yNzUsMCwwLjUsMC4yMjUsMC41LDAuNVYxM3oiLz4NCgk8cGF0aCBmaWxsPSJub25lIiBzdHJva2U9IiMxRDFEMUIiIHN0cm9rZS13aWR0aD0iMC41IiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIGQ9Ik0zLjUsNy41QzMuMjI1LDcuNSwzLDcuNzI1LDMsOHY4DQoJCWMwLDAuMjc1LDAuMjI1LDAuNSwwLjUsMC41SDEwYzAuMjc1LDAsMC42NTktMC4xNTksMC44NTQtMC4zNTRsMC43OTMtMC43OTNjMC4xOTQtMC4xOTQsMC41MTMtMC4xOTQsMC43MDcsMGwwLjc5MywwLjc5Mw0KCQlDMTMuMzQxLDE2LjM0MSwxMy43MjUsMTYuNSwxNCwxNi41aDYuNWMwLjI3NSwwLDAuNS0wLjIyNSwwLjUtMC41VjhjMC0wLjI3NS0wLjIyNS0wLjUtMC41LTAuNUgzLjV6IE0xMC41LDEzDQoJCWMwLDAuMjc1LTAuMjI1LDAuNS0wLjUsMC41SDVjLTAuMjc1LDAtMC41LTAuMjI1LTAuNS0wLjV2LTJjMC0wLjI3NSwwLjIyNS0wLjUsMC41LTAuNWg1YzAuMjc1LDAsMC41LDAuMjI1LDAuNSwwLjVWMTN6IE0xOS41LDEzDQoJCWMwLDAuMjc1LTAuMjI1LDAuNS0wLjUsMC41aC01Yy0wLjI3NSwwLTAuNS0wLjIyNS0wLjUtMC41di0yYzAtMC4yNzUsMC4yMjUtMC41LDAuNS0wLjVoNWMwLjI3NSwwLDAuNSwwLjIyNSwwLjUsMC41VjEzeiIvPg0KPC9nPg0KPC9zdmc+DQo="),
                logoSettings: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxNS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+DQo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9InNldHRpbmdzIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCINCgkgd2lkdGg9IjI0cHgiIGhlaWdodD0iMjRweCIgdmlld0JveD0iMCAwIDI0IDI0IiBlbmFibGUtYmFja2dyb3VuZD0ibmV3IDAgMCAyNCAyNCIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8Zz4NCgk8cGF0aCBmaWxsPSIjRkZGRkZGIiBkPSJNMTksMTMuNWMwLjI3NSwwLDAuNS0wLjIyNSwwLjUtMC41di0yYzAtMC4yNzUtMC4yMjUtMC41LTAuNS0wLjVoLTAuNjk2Yy0wLjI3NSwwLTAuNTcxLTAuMjEzLTAuNjU5LTAuNDc0DQoJCWwtMC4yNTctMC42MjJjLTAuMTIzLTAuMjQ2LTAuMDY0LTAuNjA2LDAuMTMtMC44MDFsMC40OTMtMC40OTNjMC4xOTQtMC4xOTQsMC4xOTQtMC41MTMsMC0wLjcwN0wxNi41OTcsNS45OQ0KCQljLTAuMTk0LTAuMTk0LTAuNTEzLTAuMTk0LTAuNzA3LDBsLTAuNDkzLDAuNDkzYy0wLjE5NCwwLjE5NC0wLjU1NSwwLjI1My0wLjgwMSwwLjEzbC0wLjYyMi0wLjI1Ng0KCQlDMTMuNzEzLDYuMjY5LDEzLjUsNS45NzIsMTMuNSw1LjY5N1Y1YzAtMC4yNzUtMC4yMjUtMC41LTAuNS0wLjVoLTJjLTAuMjc1LDAtMC41LDAuMjI1LTAuNSwwLjV2MC42OTcNCgkJYzAsMC4yNzUtMC4yMTMsMC41NzEtMC40NzQsMC42NTlMOS40MDQsNi42MTJjLTAuMjQ2LDAuMTIzLTAuNjA2LDAuMDY0LTAuODAxLTAuMTNMOC4xMTEsNS45ODljLTAuMTk0LTAuMTk0LTAuNTEzLTAuMTk0LTAuNzA3LDANCgkJTDUuOTksNy40MDNjLTAuMTk0LDAuMTk0LTAuMTk0LDAuNTEzLDAsMC43MDdsMC40OTMsMC40OTNjMC4xOTQsMC4xOTQsMC4yNTMsMC41NTUsMC4xMywwLjgwMWwtMC4yNTcsMC42MjMNCgkJQzYuMjY4LDEwLjI4Nyw1Ljk3MiwxMC41LDUuNjk3LDEwLjVINWMtMC4yNzUsMC0wLjUsMC4yMjUtMC41LDAuNXYyYzAsMC4yNzUsMC4yMjUsMC41LDAuNSwwLjVoMC42OTcNCgkJYzAuMjc1LDAsMC41NzEsMC4yMTMsMC42NTksMC40NzRsMC4yNTYsMC42MjJjMC4xMjMsMC4yNDYsMC4wNjQsMC42MDYtMC4xMywwLjgwMWwtMC40OTMsMC40OTJjLTAuMTk0LDAuMTk0LTAuMTk0LDAuNTEzLDAsMC43MDcNCgkJbDEuNDE0LDEuNDE0YzAuMTk0LDAuMTk0LDAuNTEzLDAuMTk0LDAuNzA3LDBsMC40OTItMC40OTJjMC4xOTQtMC4xOTQsMC41NTUtMC4yNTMsMC44MDEtMC4xM2wwLjYyMywwLjI1Nw0KCQljMC4yNjEsMC4wODgsMC40NzQsMC4zODQsMC40NzQsMC42NTlWMTljMCwwLjI3NSwwLjIyNSwwLjUsMC41LDAuNWgyYzAuMjc1LDAsMC41LTAuMjI1LDAuNS0wLjV2LTAuNjk2DQoJCWMwLTAuMjc1LDAuMjEzLTAuNTcxLDAuNDc0LTAuNjU5bDAuNjIyLTAuMjU2YzAuMjQ2LTAuMTIzLDAuNjA2LTAuMDY0LDAuODAxLDAuMTNsMC40OTIsMC40OTJjMC4xOTQsMC4xOTQsMC41MTMsMC4xOTQsMC43MDcsMA0KCQlsMS40MTQtMS40MTRjMC4xOTQtMC4xOTQsMC4xOTQtMC41MTMsMC0wLjcwN2wtMC40OTItMC40OTJjLTAuMTk0LTAuMTk0LTAuMjUzLTAuNTU1LTAuMTMtMC44MDFsMC4yNTctMC42MjMNCgkJYzAuMDg4LTAuMjYxLDAuMzg0LTAuNDc0LDAuNjU5LTAuNDc0SDE5eiBNMTIsMTMuNWMtMC44MjksMC0xLjUtMC42NzEtMS41LTEuNWMwLTAuODI4LDAuNjcxLTEuNSwxLjUtMS41czEuNSwwLjY3MSwxLjUsMS41DQoJCUMxMy41LDEyLjgyOSwxMi44MjksMTMuNSwxMiwxMy41eiIvPg0KCTxwYXRoIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgZD0iTTE5LDEzLjVjMC4yNzUsMCwwLjUtMC4yMjUsMC41LTAuNXYtMg0KCQljMC0wLjI3NS0wLjIyNS0wLjUtMC41LTAuNWgtMC42OTZjLTAuMjc1LDAtMC41NzEtMC4yMTMtMC42NTktMC40NzRsLTAuMjU3LTAuNjIyYy0wLjEyMy0wLjI0Ni0wLjA2NC0wLjYwNiwwLjEzLTAuODAxDQoJCWwwLjQ5My0wLjQ5M2MwLjE5NC0wLjE5NCwwLjE5NC0wLjUxMywwLTAuNzA3TDE2LjU5Nyw1Ljk5Yy0wLjE5NC0wLjE5NC0wLjUxMy0wLjE5NC0wLjcwNywwbC0wLjQ5MywwLjQ5Mw0KCQljLTAuMTk0LDAuMTk0LTAuNTU1LDAuMjUzLTAuODAxLDAuMTNsLTAuNjIyLTAuMjU2QzEzLjcxMyw2LjI2OSwxMy41LDUuOTcyLDEzLjUsNS42OTdWNWMwLTAuMjc1LTAuMjI1LTAuNS0wLjUtMC41aC0yDQoJCWMtMC4yNzUsMC0wLjUsMC4yMjUtMC41LDAuNXYwLjY5N2MwLDAuMjc1LTAuMjEzLDAuNTcxLTAuNDc0LDAuNjU5TDkuNDA0LDYuNjEyYy0wLjI0NiwwLjEyMy0wLjYwNiwwLjA2NC0wLjgwMS0wLjEzTDguMTExLDUuOTg5DQoJCWMtMC4xOTQtMC4xOTQtMC41MTMtMC4xOTQtMC43MDcsMEw1Ljk5LDcuNDAzYy0wLjE5NCwwLjE5NC0wLjE5NCwwLjUxMywwLDAuNzA3bDAuNDkzLDAuNDkzYzAuMTk0LDAuMTk0LDAuMjUzLDAuNTU1LDAuMTMsMC44MDENCgkJbC0wLjI1NywwLjYyM0M2LjI2OCwxMC4yODcsNS45NzIsMTAuNSw1LjY5NywxMC41SDVjLTAuMjc1LDAtMC41LDAuMjI1LTAuNSwwLjV2MmMwLDAuMjc1LDAuMjI1LDAuNSwwLjUsMC41aDAuNjk3DQoJCWMwLjI3NSwwLDAuNTcxLDAuMjEzLDAuNjU5LDAuNDc0bDAuMjU2LDAuNjIyYzAuMTIzLDAuMjQ2LDAuMDY0LDAuNjA2LTAuMTMsMC44MDFsLTAuNDkzLDAuNDkyYy0wLjE5NCwwLjE5NC0wLjE5NCwwLjUxMywwLDAuNzA3DQoJCWwxLjQxNCwxLjQxNGMwLjE5NCwwLjE5NCwwLjUxMywwLjE5NCwwLjcwNywwbDAuNDkyLTAuNDkyYzAuMTk0LTAuMTk0LDAuNTU1LTAuMjUzLDAuODAxLTAuMTNsMC42MjMsMC4yNTcNCgkJYzAuMjYxLDAuMDg4LDAuNDc0LDAuMzg0LDAuNDc0LDAuNjU5VjE5YzAsMC4yNzUsMC4yMjUsMC41LDAuNSwwLjVoMmMwLjI3NSwwLDAuNS0wLjIyNSwwLjUtMC41di0wLjY5Ng0KCQljMC0wLjI3NSwwLjIxMy0wLjU3MSwwLjQ3NC0wLjY1OWwwLjYyMi0wLjI1NmMwLjI0Ni0wLjEyMywwLjYwNi0wLjA2NCwwLjgwMSwwLjEzbDAuNDkyLDAuNDkyYzAuMTk0LDAuMTk0LDAuNTEzLDAuMTk0LDAuNzA3LDANCgkJbDEuNDE0LTEuNDE0YzAuMTk0LTAuMTk0LDAuMTk0LTAuNTEzLDAtMC43MDdsLTAuNDkyLTAuNDkyYy0wLjE5NC0wLjE5NC0wLjI1My0wLjU1NS0wLjEzLTAuODAxbDAuMjU3LTAuNjIzDQoJCWMwLjA4OC0wLjI2MSwwLjM4NC0wLjQ3NCwwLjY1OS0wLjQ3NEgxOXogTTEyLDEzLjVjLTAuODI5LDAtMS41LTAuNjcxLTEuNS0xLjVjMC0wLjgyOCwwLjY3MS0xLjUsMS41LTEuNXMxLjUsMC42NzEsMS41LDEuNQ0KCQlDMTMuNSwxMi44MjksMTIuODI5LDEzLjUsMTIsMTMuNXoiLz4NCjwvZz4NCjwvc3ZnPg0K"),
                logoVrEmbed: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMSBUaW55Ly9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLXRpbnkuZHRkIj48c3ZnIHZlcnNpb249IjEuMSIgYmFzZVByb2ZpbGU9InRpbnkiIGlkPSJsb2dvMiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSIyNHB4IiBoZWlnaHQ9IjI0cHgiIHZpZXdCb3g9IjAgMCAyNCAyNCIgb3ZlcmZsb3c9ImluaGVyaXQiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxjaXJjbGUgZmlsbD0iI0ZGRkZGRiIgc3Ryb2tlPSIjMUQxRDFCIiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIGN4PSIxMi4wNDIiIGN5PSIxMi4wNDIiIHI9IjExLjI1Ii8+PHBhdGggZmlsbD0ibm9uZSIgc3Ryb2tlPSIjNjY2NjY2IiBzdHJva2UtbWl0ZXJsaW1pdD0iMTAiIGQ9Ik0yMSwxMi4wODNjMC01LjAwOS00LjAyNS05LjA2Mi05LTkuMDYyIi8+PGc+PHBhdGggZmlsbD0iIzFEMUQxQiIgZD0iTTUuMzU3LDguODA3aDAuODk2TDUuMSwxMkg0LjIyTDMuMDc1LDguODA3aDAuOTM4YzAuMjIyLDAuNzg1LDAuNDQzLDEuNTcsMC42NjUsMi4zNTVDNC45MDQsMTAuMzc3LDUuMTMsOS41OTIsNS4zNTcsOC44MDdMNS4zNTcsOC44MDd6Ii8+PHBhdGggZmlsbD0iIzFEMUQxQiIgZD0iTTguMjEyLDguNzMyYzAuMTU3LDAuMDE0LDAuMDcyLDAuNjk0LDAuMDcyLDAuODZDNi45MzEsOS40NDEsNy4yNzEsMTEuMTA1LDcuMjcxLDEySDYuNDNWOC44MDdoMC43OTd2MC41NTdDNy40NSw4Ljk5NCw3Ljc0Myw4LjY4OSw4LjIxMiw4LjczMkM4LjIyMyw4LjczMyw4LjIwMiw4LjczMSw4LjIxMiw4LjczMnoiLz48cGF0aCBmaWxsPSIjRkY5OTAwIiBkPSJNNi42NSwxMy4xNzZINC4zNjV2MC45MTZoMi4wOTh2MC43NUg0LjM2NXYxLjExMWgyLjM5MXYwLjc3NUgzLjQ4M3YtNC4zMThjMC43MjIsMCwxLjQ0MywwLDIuMTY1LDBjMC4zMTMsMCwwLjYyNiwwLDAuOTM5LDBDNi43MjksMTIuNDExLDYuNjUsMTMuMDM1LDYuNjUsMTMuMTc2TDYuNjUsMTMuMTc2eiIvPjxwYXRoIGZpbGw9IiNGRjk5MDAiIGQ9Ik0xMS4wODgsMTMuNTQ3YzAuOTM2LDAuMzc0LDAuNTgsMi4zODksMC41NzcsMy4xODJIMTAuODF2LTIuMDMzYzAtMC40NC0wLjQ5LTAuNzE5LTAuODM0LTAuMzk0Yy0wLjE5OSwwLjE4Ny0wLjE3OSwwLjQ3Ni0wLjE3OSwwLjcyNGMwLDAuNTY4LDAsMS4xMzYsMCwxLjcwM0g4Ljk1NXYtMS45YzAtMC45OTMtMS4wMi0wLjY4OC0xLjAyLDAuMTc5YzAsMC41NzMsMCwxLjE0NywwLDEuNzIySDcuMDg5di0zLjE4OEg3Ljl2MC40NjdjMC4zOTctMC42MzcsMS40NjQtMC44MTMsMS43OSwwLjAwMkM5Ljk3MywxMy41MjYsMTAuNTcyLDEzLjM0MSwxMS4wODgsMTMuNTQ3QzExLjIyNSwxMy42MDIsMTAuOTUxLDEzLjQ5MiwxMS4wODgsMTMuNTQ3eiIvPjxwYXRoIGZpbGw9IiNGRjk5MDAiIGQ9Ik0xNC44NzcsMTMuOTJjMS4wOTQsMS4zODQtMC43LDQuMTIyLTEuOTMzLDIuNDA4YzAsMC4xMy0wLjAxOSwwLjI3MiwwLDAuNGgtMC44MjN2LTQuMzEyaDAuODM1djEuNTM1QzEzLjQxMiwxMy4zMTUsMTQuMzkxLDEzLjMwMiwxNC44NzcsMTMuOTJDMTUuMTE2LDE0LjIyMywxNC42MzksMTMuNjE3LDE0Ljg3NywxMy45MnogTTE0LjE3OSwxNS44NjVjMC41MS0wLjczNy0wLjI5My0yLjQwOC0xLjA1NC0xLjQzOEMxMi41MjEsMTUuMTk2LDEzLjQ5MywxNi44NTYsMTQuMTc5LDE1Ljg2NUMxNC4yOTksMTUuNjkxLDE0LjA1OSwxNi4wMzksMTQuMTc5LDE1Ljg2NXoiLz48cGF0aCBmaWxsPSIjRkY5OTAwIiBkPSJNMTcuNjA4LDEzLjZjMC43MDgsMC4zMTYsMC44NDQsMS4wNzUsMC44MzQsMS43NjhjLTAuNzc1LDAtMS41NTEsMC0yLjMyNiwwYzAuMDI0LDAuNjA2LDAuNzIyLDEuMDg2LDEuMjU4LDAuNjQ2YzAuMzM5LTAuMjc3LDAuNTUtMC4yMTksMS4wMjQtMC4yMTljLTAuMTcsMS40My0yLjU1NywxLjMtMy4wMDEsMC4xMzNDMTQuODQ3LDE0LjQ4MiwxNi4wNjcsMTIuOTEsMTcuNjA4LDEzLjZDMTcuODMxLDEzLjY5OSwxNy4zODYsMTMuNSwxNy42MDgsMTMuNnogTTE2LjM1OSwxNC4zMjJjLTAuMTI3LDAuMTQxLTAuMjAxLDAuMzA1LTAuMjIzLDAuNDk0YzAuNDc5LDAsMC45NTksMCwxLjQzOCwwQzE3LjUzNSwxNC4yNDcsMTYuNzk4LDEzLjg2NSwxNi4zNTksMTQuMzIyQzE2LjI0MSwxNC40NDMsMTYuNDc4LDE0LjE5OSwxNi4zNTksMTQuMzIyeiIvPjxwYXRoIGZpbGw9IiNGRjk5MDAiIGQ9Ik0yMC4yNywxMy41ODdjMC4xNTIsMC4wODYsMC4yNzQsMC4yMDQsMC4zNjYsMC4zNTNjMC0wLjUwOCwwLTEuMDE1LDAtMS41MjNoMC44NDd2NC4zMTJoLTAuODEydi0wLjQ0MWMtMC43MjcsMS4xNTYtMi4xNTYsMC4zMDEtMi4yODQtMC43OTlDMTguMjcxLDE0LjQ5NSwxOS4wMTQsMTIuODc3LDIwLjI3LDEzLjU4N0MyMC40MiwxMy42NzIsMjAuMTE5LDEzLjUwMiwyMC4yNywxMy41ODd6IE0yMC40NzUsMTUuODYxYzAuNTU4LTAuNzk3LTAuNDM0LTIuNDEyLTEuMDcxLTEuMzk2QzE4LjkzOSwxNS4yMjQsMTkuNzUzLDE2Ljg5MywyMC40NzUsMTUuODYxQzIwLjU5OCwxNS42ODYsMjAuMzUyLDE2LjAzNywyMC40NzUsMTUuODYxeiIvPjwvZz48L3N2Zz4="),
                logoShare: n("image/svg+xml", "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz48IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0ic2hhcmVzaGVldCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiIHdpZHRoPSIyNHB4IiBoZWlnaHQ9IjI0cHgiIHZpZXdCb3g9IjAgMCAyNCAyNCIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMjQgMjQiIHhtbDpzcGFjZT0icHJlc2VydmUiPjxnPjxnPjxwYXRoIGZpbGw9IiNGRkZGRkYiIHN0cm9rZT0iIzFEMUQxQiIgc3Ryb2tlLXdpZHRoPSIwLjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCIgZD0iTTE4Ljc1LDE1Yy0wLjk5NCwwLTEuODkzLDAuMzk1LTIuNTYzLDEuMDI2bC03LjMxOC0zLjA5MUM4Ljk0NiwxMi42MzUsOSwxMi4zMjUsOSwxMnMtMC4wNTQtMC42MzUtMC4xMzItMC45MzZsNy4zMTgtMy4wOTFDMTYuODU2LDguNjA1LDE3Ljc1NSw5LDE4Ljc1LDljMi4wNywwLDMuNzUtMS42OCwzLjc1LTMuNzVjMC0yLjA3MS0xLjY4LTMuNzUtMy43NS0zLjc1UzE1LDMuMTc5LDE1LDUuMjVjMCwwLjI1NywwLjAyNiwwLjUwNywwLjA3NSwwLjc0OWwtNy40MywzLjEzOEM2Ljk5NCw4LjU5Miw2LjE2Niw4LjI1LDUuMjUsOC4yNUMzLjE3OSw4LjI1LDEuNSw5LjkyOSwxLjUsMTJjMCwyLjA3LDEuNjc5LDMuNzUsMy43NSwzLjc1YzAuOTE3LDAsMS43NDUtMC4zNDIsMi4zOTYtMC44ODhMMTUuMDc1LDE4QzE1LjAyNiwxOC4yNDMsMTUsMTguNDkzLDE1LDE4Ljc1YzAsMi4wNywxLjY4LDMuNzUsMy43NSwzLjc1czMuNzUtMS42OCwzLjc1LTMuNzVTMjAuODIsMTUsMTguNzUsMTV6Ii8+PC9nPjwvZz48L3N2Zz4=")
            }, e.exports = VRLogos
        }, {}],
        11: [function(t, e, n) {
            var r = {},
                o = 4096,
                s = function(t) {
                    var e = null,
                        n = t.split("/");
                    for (i = 0; l = n.length, i < l; i++)
                        if (n[i].endsWith("imgur.com") && i < l - 1) return e = n[i + 1], "" == e ? null : (partspl = e.split("."), "" == partspl[0] ? null : partspl[0]);
                    return null
                },
                a = function(t, e) {
                    var i = document.createElement("canvas"),
                        n = i.getContext("2d"),
                        r = parseFloat(t.width),
                        s = parseFloat(t.height),
                        a = r,
                        A = s;
                    r > o && (A = o * s / r, a = o), s > o && (a = o * r / s, A = o), n.canvas.width = a, n.canvas.height = A, n.drawImage(t, 0, 0, a, A), e({
                        canvas: i,
                        ctx: n,
                        image: t
                    })
                },
                A = function(t, e) {
                    var i = new Image;
                    i.imgsrc = t, i.crossOrigin = "Anonymous", i.onload = function() {
                        a(i, e)
                    }, i.src = t
                },
                u = function(t, e, i, n) {
                    var r = "";
                    r += e, r += t, r += "?client_id=fe596e6329962dd";
                    var o = new XMLHttpRequest;
                    o.open("GET", r, !0), o.setRequestHeader("Authorization", "Client-ID fe596e6329962dd"), o.setRequestHeader("Accept", "application/json"), o.send(), o.onreadystatechange = function() {
                        if (4 == o.readyState && 200 == o.status) {
                            var e = JSON.parse(o.responseText);
                            i(t, e, n)
                        }
                    }
                },
                c = function(t, e, i) {
                    r[t] = e;
                    var n = e.data.link;
                    null != i && A(n, i)
                },
                h = function(t, e) {
                    return t in r ? void(null != e && c(t, r[t], e)) : void u(t, "https://web.archive.org/web/20190205160217/https://api.imgur.com/3/image/", c, e)
                },
                d = function(t, e) {
                    var i = s(t);
                    null != i ? h(i, e) : A(t, e)
                };
            VRImageURLParser = function() {
                var t = this;
                this.urlList = [], this.callback = null, this.gotURLIdx = function(e, i) {
                    for (t.urlList[e] = i, il = 0; il < t.urlList.length; il++)
                        if (null == t.urlList[il]) return;
                    t.callback(t.urlList)
                }, this.init = function(t, e) {
                    for (this.callback = e, im = 0; im < t.length; im++) this.urlList[im] = null;
                    for (im = 0; im < t.length; im++) d(t[im], this.gotURLIdx.bind(null, im))
                }
            }, e.exports = VRImageURLParser
        }, {}],
        12: [function(t, e, i) {
            Wakelock = t("../js-ext/wakelock.js"), VRManager = function(t) {
                this.quad = t, this.fallbackFullscreen = !1, this.fallbackScroll = null, this.fallbackParent = null, this.fallbackTmpCanvas = null, this.wakelock = new Wakelock, this.isLandscape = function() {
                    return window.innerWidth > window.innerHeight ? !0 : !1
                }, this.render = function(t) {
                    this.quad.render()
                }, this.exitVR = function() {
                    if (1 == this.fallbackFullscreen) {
                        this.quad.getContainer();
                        window.onscroll = this.fallbackScroll, this.fallbackFullscreen = !1, this.fallbackParent.appendChild(this.quad.getContainer()), document.body.removeChild(this.fallbackTmpCanvas), this.fallbackScroll = null, this.fallbackParent = null, this.fallbackTmpCanvas = null
                    } else document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();
                    this.wakelock.release(), this.quad.vrtwglQuad.setCanvasWindowed()
                }, this.enterFullscreen = function() {
                    var t = this.quad.getContainer();
                    if (t.requestFullscreen) this.fallbackFullscreen = !1,
                        t.requestFullscreen();
                    else if (t.mozRequestFullScreen) this.fallbackFullscreen = !1, t.mozRequestFullScreen();
                    else if (t.webkitRequestFullscreen) this.fallbackFullscreen = !1, t.webkitRequestFullscreen();
                    else {
                        if (0 == this.isLandscape()) return alert("Please rotate device to landscape mode before activating"), !1;
                        this.fallbackParent = t.parentNode, this.fallbackTmpCanvas = document.createElement("div"), this.fallbackTmpCanvas.style.background = "#000000", this.fallbackTmpCanvas.appendChild(this.quad.getContainer()), document.body.appendChild(this.fallbackTmpCanvas), this.fallbackFullscreen = !0, this.fallbackTmpCanvas.style.zDepth = 1e3, this.fallbackTmpCanvas.style.top = 0, this.fallbackTmpCanvas.style.right = 0, this.fallbackTmpCanvas.style.bottom = 0, this.fallbackTmpCanvas.style.left = 0, this.fallbackTmpCanvas.style.position = "absolute", this.fallbackTmpCanvas.scrollIntoView(!0), this.fallbackScroll = window.onscroll, window.onscroll = function() {
                            this.fallbackTmpCanvas.scrollIntoView(!0)
                        }
                    }
                    return this.quad.vrtwglQuad.setCanvasFullscreen(), this.quad.resize(), this.wakelock.request(), !0
                }
            }, e.exports = VRManager
        }, {
            "../js-ext/wakelock.js": 4
        }],
        13: [function(t, e, i) {
            function n() {
                var t = this;
                this.vrDeviceManager = s, this.story = null, this.headsetSelector = null, this.displaySelector = null, this.ipdCheckbox = null, this.ipdSlider = null, this.ipdSliderText = null, this.init = function() {
                    this.dialog = document.createElement("div");
                    var t = this.dialog.style;
                    t.position = "fixed", t.top = "0", t.right = "0", t.bottom = "0", t.left = "0", t.background = "rgba(0,0,0,0.8)", t.zIndex = "99999", t.opacity = "1", t.pointerEvents = "auto", t.color = "#000", t.fontFamily = '"Helvetica Neue", Helvetica, Arial, sans-serif', t.fontWeight = "bold", this.dialogText = document.createElement("div");
                    var e = this.dialogText.style;
                    a(e), e.minHeight = "60px", this.dialogDevices = document.createElement("div");
                    var i = this.dialogDevices.style;
                    a(i), i.maxHeight = "200px", i.overflow = "scroll", i.overflowy = "scroll", this.dialogShare = document.createElement("div");
                    var n = this.dialogShare.style;
                    a(n), n.maxHeight = "100px", n.overflow = "scroll", this.dialog.appendChild(this.dialogText), this.dialog.appendChild(this.dialogDevices), this.dialog.appendChild(this.dialogShare), this.dialog.addEventListener("click", this.onClickLeft_.bind(this)), this.dialog.addEventListener("touchstart", this.onClickLeft_.bind(this)), this.setupDialogOptions(), this.setupDialogDevices(), this.setupDialogShare(null)
                }, this.setupDialogOptions = function() {
                    var t = "";
                    t += "<img src=" + r.logoVrEmbed + ' width=60px style="float: left; margin: 2px 2px 2px 2px;"/>', t += '<a href="https://web.archive.org/web/20190205160217/http://vrembed.org" target="_blank" style="color: inherit; text-decoration: none;">', t += '<br/>vrEmbed.org</a><br/><span style="font-size:70%">(c) Bhautik Joshi 2015-16</span><div style="clear:left;">', this.dialogText.innerHTML = t
                }, this.setupDialogSetup = function() {
                    var t = "";
                    t += "<img src=" + r.logoVrEmbed + ' width=60px style="float: right; margin: 0 0 2px 2px;"/>', t += '<b>Select headset & display:</b><br/><div style="clear:left;">', this.dialogText.innerHTML = t
                }, this.createHeadsetSelector = function(t) {
                    var e = this.vrDeviceManager.getDeviceList(),
                        i = document.createElement("select");
                    for (deviceit = 0; deviceit < e.length; deviceit++) {
                        var n = e[deviceit],
                            r = this.vrDeviceManager.getDevice(n),
                            o = document.createElement("option");
                        o.value = n;
                        var s = document.createTextNode(r.name);
                        o.appendChild(s), i.appendChild(o)
                    }
                    t.appendChild(document.createTextNode("Select headset: ")), t.appendChild(i), t.appendChild(document.createElement("br")), i.onchange = this.syncManagerToDeviceButtons, this.headsetSelector = i
                }, this.createDisplaySelector = function(t) {
                    var e = this.vrDeviceManager.getHandsetList(),
                        i = document.createElement("select");
                    for (deviceit = 0; deviceit < e.length; deviceit++) {
                        var n = e[deviceit],
                            r = this.vrDeviceManager.getHandset(n),
                            o = document.createElement("option");
                        o.value = n;
                        var s = document.createTextNode(r.name);
                        o.appendChild(s), i.appendChild(o)
                    }
                    t.appendChild(document.createTextNode("Select display: ")), t.appendChild(i), t.appendChild(document.createElement("br")), i.onchange = this.syncManagerToDeviceButtons, this.displaySelector = i
                }, this.createUserOffsetSlider = function(t) {
                    var e = document.createElement("input");
                    e.type = "checkbox";
                    var i = document.createElement("input");
                    i.type = "range", i.min = 35, i.max = 80, i.style.width = "100px";
                    var n = document.createTextNode("0mm");
                    this.ipdCheckbox = e, this.ipdSlider = i, this.ipdSliderText = n, this.ipdCheckbox.onchange = this.userIPDChange, this.ipdSlider.onchange = this.userIPDChange, t.appendChild(document.createTextNode("Override IPD: ")), t.appendChild(this.ipdCheckbox), t.appendChild(this.ipdSlider), t.appendChild(this.ipdSliderText)
                }, this.userIPDChange = function() {
                    t.ipdCheckbox.checked ? t.setupIPDOverride(1) : t.setupIPDOverride(0), t.ipdSliderText.nodeValue = t.ipdSlider.value + "mm", t.syncManagerToDeviceButtons()
                }, this.syncDeviceButtonsToManager = function() {
                    var e = t.vrDeviceManager.currentDeviceName;
                    t.headsetSelector.value = e;
                    var i = t.vrDeviceManager.currentHandsetName;
                    t.displaySelector.value = i;
                    var n = t.vrDeviceManager.userIPDOffset;
                    t.ipdSlider.value = n, t.ipdSliderText.nodeValue = n + "mm";
                    var r = t.vrDeviceManager.overrideIPD;
                    t.setupIPDOverride(r)
                }, this.setupIPDOverride = function(e) {
                    0 == e ? (t.ipdCheckbox.checked = !1, t.ipdSlider.disabled = !0, t.ipdSliderText.nodeValue = "") : (t.ipdCheckbox.checked = !0, t.ipdSlider.disabled = !1, t.ipdSliderText.nodeValue = t.vrDeviceManager.userIPDOffset + "mm")
                }, this.syncManagerToDeviceButtons = function() {
                    t.vrDeviceManager.setCurrentHandset(t.displaySelector.value), t.vrDeviceManager.setCurrentDevice(t.headsetSelector.value), t.vrDeviceManager.setUserIPDOffset(t.ipdSlider.value), t.ipdCheckbox.checked ? t.vrDeviceManager.setOverrideIPD(1) : t.vrDeviceManager.setOverrideIPD(0)
                }, this.setupDialogDevices = function() {
                    var t = "";
                    t += '<span style="font-size:120%">Setup headset:<br/>', this.dialogDevices.innerHTML = t, this.createHeadsetSelector(this.dialogDevices), this.createDisplaySelector(this.dialogDevices), this.createUserOffsetSlider(this.dialogDevices), this.syncDeviceButtonsToManager()
                }, this.setupShareButton = function(t, e, i) {
                    t.style.borderRadius = "10px", t.style.padding = "5px", t.style.margin = "5px", t.style.backgroundColor = e, t.style.fontSize = "80%", t.style.color = "#fff", t.innerHTML = i
                }, this.setupDialogShare = function(t) {
                    if (this.dialogShare.innerHTML = '<span style="font-size:120%">Share:<br/>', null != t) {
                        var e = t[0],
                            i = t[1],
                            n = "https://web.archive.org/web/20190205160217/https://twitter.com/intent/tweet?text=" + encodeURIComponent("Check out my #vrEmbed ") + e,
                            r = "https://web.archive.org/web/20190205160217/https://www.facebook.com/sharer/sharer.php?u=" + e,
                            o = "https://web.archive.org/web/20190205160217/https://plus.google.com/share?url=" + e,
                            s = "https://web.archive.org/web/20190205160217/http://www.reddit.com/submit?url=" + e,
                            a = document.createElement("div");
                        a.style.textAlign = "center";
                        var A = document.createElement("span"),
                            u = '<a href="' + n + '" target="_blank" style="color: inherit; text-decoration: none;">Twitter</a>';
                        this.setupShareButton(A, "#00aced", u), a.appendChild(A);
                        var c = document.createElement("span"),
                            l = '<a href="' + r + '" target="_blank" style="color: inherit; text-decoration: none;">Facebook</a>';
                        this.setupShareButton(c, "#3b5998", l), a.appendChild(c);
                        var h = document.createElement("span"),
                            d = '<a href="' + o + '" target="_blank" style="color: inherit; text-decoration: none;">G+</a>';
                        this.setupShareButton(h, "#dd4b39", d), a.appendChild(h);
                        var f = document.createElement("span"),
                            g = '<a href="' + s + '" target="_blank" style="color: inherit; text-decoration: none;">Reddit</a>';
                        this.setupShareButton(f, "#ff5700", g), a.appendChild(f), this.dialogShare.appendChild(a);
                        var p = document.createElement("div"),
                            M = document.createElement("span");
                        M.style.fontSize = "120%", M.innerHTML = "Embed:", p.appendChild(M);
                        var v = document.createElement("input");
                        v.setAttribute("value", i), v.style.width = "100%", v.style.fontWeight = "normal", v.style.fontFamily = '"Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace', p.appendChild(v), this.dialogShare.appendChild(p)
                    }
                }, this.showDialogOptions = function() {
                    this.setupDialogOptions(), this.dialogDevices.style.display = "block", this.dialogShare.style.display = "none", document.body.appendChild(this.dialog), this.syncDeviceButtonsToManager()
                }, this.showDialogShare = function(t) {
                    this.setupDialogShare(t), this.dialogDevices.style.display = "none", this.dialogShare.style.display = "block", document.body.appendChild(this.dialog)
                }, this.showDialogOptionsFirstTime = function(t) {
                    this.setupDialogSetup(), this.dialogDevices.style.display = "block", this.dialogShare.style.display = "none", document.body.appendChild(this.dialog), this.syncDeviceButtonsToManager(), this.story = t
                }, this.hideDialog = function() {
                    document.body.removeChild(this.dialog), this.syncManagerToDeviceButtons(), null != this.story && (this.story.stateToggler.setState(o.FULLSCREEN), this.story = null)
                }, this.onClickLeft_ = function(t) {
                    var e = !1;
                    t.target == this.dialog && (e = !0), t.target == this.dialogText && (e = !0), t.target == this.dialogDevices && (e = !0), t.target == this.dialogShare && (e = !0), 0 != e && (t.stopPropagation(), t.preventDefault(), this.hideDialog())
                }
            }
            var r = t("./VRIcons.js"),
                o = t("./VRStates.js"),
                s = t("./VRDeviceManager.js"),
                a = function(t) {
                    t.width = "350px", t.position = "relative", t.margin = "10px auto", t.padding = "10px 10px 10px 10px", t.borderRadius = "5px", t.borderStlyle = "solid", t.borderColor = "#ff0000 #0000ff", t.background = "#fff"
                },
                A = function() {
                    function t() {
                        var t = new n;
                        return t.init(), t
                    }
                    var e;
                    return {
                        getInstance: function() {
                            return e || (e = t()), e
                        }
                    }
                }();
            VROptions = function() {
                this.options = A.getInstance()
            }, e.exports = VROptions
        }, {
            "./VRDeviceManager.js": 8,
            "./VRIcons.js": 10,
            "./VRStates.js": 19
        }],
        14: [function(t, e, i) {
            VRRenderModes = {
                MONOCULAR: 0,
                STEREOSIDEBYSIDE: 1,
                STEREOANAGLYPH: 2
            }, e.exports = VRRenderModes
        }, {}],
        15: [function(t, e, i) {
            function n(t, e) {
                var i = twgl.m4.identity(),
                    n = twgl.v3.create(0, 0, 1);
                twgl.m4.axisRotate(i, n, t, i);
                var r = twgl.v3.create(0, 1, 0);
                return twgl.m4.axisRotate(i, r, e, i), i
            }

            function r(t) {
                var e, i, n, r = Math.cos(t.yaw),
                    o = Math.sin(t.yaw),
                    s = Math.cos(t.pitch),
                    a = Math.sin(t.pitch),
                    A = Math.cos(t.roll),
                    u = Math.sin(t.roll),
                    c = [o * u - r * a * A, -r * s, r * a * u + o * A, s * A, -a, -s * u, o * a * A + r * u, o * s, -o * a * u + r * A];
                return c[3] > .9999 ? (e = Math.atan2(c[2], c[8]), n = Math.PI / 2, i = 0) : c[3] < -.9999 ? (e = Math.atan2(c[2], c[8]), n = -Math.PI / 2, i = 0) : (e = Math.atan2(-c[6], c[0]), i = Math.atan2(-c[5], c[4]), n = Math.asin(c[3])), {
                    yaw: e,
                    pitch: n,
                    roll: i
                }
            }
            twgl = t("../js-ext/twgl-full.js");
            var o = function(t) {
                var e = Math.atan2(-t[2], t[0]),
                    i = Math.atan2(-t[9], t[5]),
                    n = Math.asin(t[1]);
                return [e, i, n]
            };
            VRRotMath = function() {
                var t = this;
                this.timer = 0, this.offset = 0, this.gyroToMat = function(e, i, n, o, s) {
                    var a = Math.PI / 180,
                        A = r({
                            yaw: e * a,
                            pitch: i * a,
                            roll: n * a
                        }),
                        u = twgl.m4.identity();
                    1 == s && (t.offset = A.yaw + Math.PI), twgl.m4.rotateY(u, -A.pitch, u), twgl.m4.rotateZ(u, Math.PI + -A.yaw + t.offset, u), twgl.m4.rotateX(u, Math.PI, u);
                    var c = (360 + -180 * (A.yaw - t.offset) / Math.PI) % 360 - 180,
                        l = -180 * A.pitch / Math.PI;
                    return [u, c, l]
                }, this.matToEuler = function(t) {
                    return o(t)
                }, this.rotateZX = function(t, e) {
                    return n(t, e)
                }
            }, e.exports = VRRotMath
        }, {
            "../js-ext/twgl-full.js": 3
        }],
        16: [function(t, e, n) {
            var r = t("./VRScenePhoto.js"),
                o = t("./VRText.js"),
                s = t("./VRDecal.js");
            VRScene = function() {
                this.sceneElement = null, this.photoObjects = [], this.textObjects = [], this.decalObjects = [], this.oldScroll = null, this.isStereo = !1, this.name = "", this.parseChildNode = function(t) {
                    if ("PHOTO" == t.nodeName) {
                        var e = new r;
                        e.init(t), 1 == e.isStereo() && (this.isStereo = !0), this.photoObjects.push(e)
                    } else if ("TEXT" == t.nodeName) {
                        var i = new o;
                        i.init(t), this.textObjects.push(i)
                    } else if ("DECAL" == t.nodeName) {
                        var n = new s;
                        n.init(t), this.decalObjects.push(n)
                    }
                    for (var a = t.childNodes, A = 0, u = a.length; u > A; ++A) {
                        var c = a[A];
                        1 === c.nodeType && this.parseChildNode(c)
                    }
                }, this.init = function(t) {
                    this.sceneElement = t;
                    var e = t.getAttribute("name");
                    null != e && (this.name = e);
                    for (var i = t.childNodes, n = 0, r = i.length; r > n; ++n) {
                        var o = i[n];
                        1 === o.nodeType && this.parseChildNode(o)
                    }
                }, this.initDict = function(t) {
                    this.photoObjects = [], this.textObjects = [], this.decalObjects = [];
                    for (var e = 0, i = t.photoObjects.length; i > e; ++e) {
                        var n = new r;
                        n.initDict(t.photoObjects[e]), this.photoObjects.push(n)
                    }
                    for (var e = 0, i = t.textObjects.length; i > e; ++e) {
                        var a = new o;
                        a.initDict(t.textObjects[e]), this.textObjects.push(a)
                    }
                    for (var e = 0, i = t.decalObjects.length; i > e; ++e) {
                        var A = new s;
                        A.initDict(t.decalObjects[e]), this.decalObjects.push(A)
                    }
                    this.name = t.name
                }, this.initVrEmbedPhoto = function(t) {
                    var e = new r;
                    e.init(t), 1 == e.isStereo() && (this.isStereo = !0), this.photoObjects.push(e)
                }, this.getSceneElement = function() {
                    var t = document.createElement("scene");
                    for ("" != this.name && t.setAttribute("name", this.name), i = 0; i < this.photoObjects.length; i++) t.appendChild(this.photoObjects[i].getPhotoElement());
                    for (j = 0; j < this.textObjects.length; j++) t.appendChild(this.textObjects[j].getTextElement());
                    for (k = 0; k < this.decalObjects.length; k++) t.appendChild(this.decalObjects[k].getDecalElement());
                    return t
                }, this.hasJumpNav = function() {
                    for (j = 0; j < this.textObjects.length; j++)
                        if ("" != this.textObjects[j].jumpTo) return !0;
                    for (j = 0; j < this.decalObjects.length; j++)
                        if ("" != this.decalObjects[j].jumpTo) return !0;
                    return !1
                }
            }, e.exports = VRScene
        }, {
            "./VRDecal.js": 7,
            "./VRScenePhoto.js": 17,
            "./VRText.js": 23
        }],
        17: [function(t, e, i) {
            var n = t("./VRTextureDescription.js");
            VRScenePhoto = function() {
                this.scenePhoto = null, this.textureDescription = null, this.init = function(t) {
                    this.scenePhoto = t, this.textureDescription = new n, this.textureDescription.init(t)
                }, this.initDict = function(t) {
                    this.textureDescription = new n, this.textureDescription.initDict(t.textureDescription)
                }, this.populateElementCommon = function(t) {
                    this.textureDescription.setElement(t)
                }, this.isStereo = function() {
                    return this.textureDescription.isStereo
                }, this.getPhotoElement = function() {
                    var t = document.createElement("photo");
                    return this.populateElementCommon(t), t
                }, this.getSinglePhotoVrEmbedElement = function() {
                    var t = document.createElement("a");
                    return t.setAttribute("class", "vrEmbedPhoto"), this.populateElementCommon(t), t
                }, this.getSinglePhotoURLParams = function() {
                    var t = "?";
                    return t += "src=" + this.textureDescription.getAbsoluteTexturePath(), t += "&sphereParams=" + this.textureDescription.getSphereParamsString(), 0 == this.isStereo() ? t += "&isStereo=false" : (t += "&isStereo=true", t += "&texParams=" + this.textureDescription.getTexParamsString()), 0 == this.textureDescription.plane ? t += "&plane=false" : (t += "&plane=true", t += "&planeOffset=" + this.textureDescription.getPlaneOffsetParamsString()), t
                }
            }, e.exports = VRScenePhoto
        }, {
            "./VRTextureDescription.js": 25
        }],
        18: [function(t, e, i) {
            var n = t("./VRStates.js"),
                r = t("./VRIcons.js"),
                o = t("../js-ext/emitter.js");
            VRStateToggler = function() {
                this.vrStory = null, this.createButtons(), this.buttonVR.addEventListener("click", this.onClickMiddle_.bind(this)), this.buttonOptions.addEventListener("click", this.onClickOptions_.bind(this)), this.buttonShare.addEventListener("click", this.onClickShare_.bind(this)), this.buttonVRClick.prototype = new function() {}, this.buttonOptionsClick.prototype = new function() {}, this.buttonShareClick.prototype = new function() {}, this.logoCardboard = r.logoCardboard, this.logoFullscreen = r.logoFullscreen, this.logoWindowed = r.logoWindowed, this.logoSettings = r.logoSettings, this.logoVrEmbed = r.logoVrEmbed, this.logoShare = r.logoShare
            }, VRStateToggler.prototype = new o, VRStateToggler.prototype.setVRStory = function(t) {
                this.vrStory = t, this.isStereo = !1
            };
            var s = function(t) {
                t.position = "absolute", t.marginLeft = "auto", t.marginRight = "auto", t.width = "40px", t.height = "40px", t.backgroundSize = "cover", t.backgroundColor = "transparent", t.border = 0, t.userSelect = "none", t.webkitUserSelect = "none", t.MozUserSelect = "none", t.cursor = "pointer", t.opacity = "1.0"
            };
            VRStateToggler.prototype.createMiddleButton = function() {
                this.buttonVR = document.createElement("img");
                var t = this.buttonVR.style;
                s(t), t.left = 0, t.right = 0, t.width = "64px", t.height = "64px", t.bottom = "8px", this.buttonVR.draggable = !1, this.buttonVR.addEventListener("dragstart", function(t) {
                    t.preventDefault()
                })
            }, VRStateToggler.prototype.createOptionsButton = function() {
                this.buttonOptions = document.createElement("img");
                var t = this.buttonOptions.style;
                s(t), t.left = 0, t.right = 20, t.bottom = "8px", this.buttonOptions.draggable = !1, this.buttonOptions.addEventListener("dragstart", function(t) {
                    t.preventDefault()
                })
            }, VRStateToggler.prototype.createShareButton = function() {
                this.buttonShare = document.createElement("img");
                var t = this.buttonShare.style;
                s(t), t.left = 20, t.right = 0, t.bottom = "8px", this.buttonShare.draggable = !1, this.buttonShare.addEventListener("dragstart", function(t) {
                    t.preventDefault()
                })
            }, VRStateToggler.prototype.createButtons = function() {
                this.createMiddleButton(), this.createOptionsButton(), this.createShareButton()
            }, VRStateToggler.prototype.onClickMiddle_ = function(t) {
                t.stopPropagation(), t.preventDefault(), this.buttonVRClick()
            }, VRStateToggler.prototype.onClickOptions_ = function(t) {
                t.stopPropagation(), t.preventDefault(), this.buttonOptionsClick()
            }, VRStateToggler.prototype.onClickShare_ = function(t) {
                t.stopPropagation(), t.preventDefault(), this.buttonShareClick()
            }, VRStateToggler.prototype.setupButton = function(t, e, i, n) {
                t.style.display = "inline-block", t.offsetHeight, t.style.display = "block", t.src = e, t.title = i, t.style.display = n ? "inline-block" : "none"
            }, VRStateToggler.prototype.configureStereo = function(t) {
                this.isStereo = t
            }, VRStateToggler.prototype.setButtonState = function(t) {
                switch (t) {
                    case n.FULLSCREEN:
                        this.setupButton(this.buttonOptions, "", "", !1), this.setupButton(this.buttonShare, "", "", !1), this.setupButton(this.buttonVR, this.logoWindowed, "Windowed mode", !0);
                        break;
                    case n.WINDOWED:
                        this.setupButton(this.buttonOptions, this.logoSettings, "Settings", !0), this.setupButton(this.buttonShare, this.logoShare, "Share", !0), this.setupButton(this.buttonVR, this.logoCardboard, "Fullscreen mode", !0)
                }
            }, VRStateToggler.prototype.setState = function(t) {
                if (null != this.vrStory) {
                    var e = this.vrStory.setState(t);
                    if (0 == e) return void console.log("STATE CHANGE FAIL")
                } else this.emit(t);
                this.setButtonState(t)
            }, VRStateToggler.prototype.stateChange = function(t) {
                switch (t) {
                    case this.logoCardboard:
                        this.setState(n.FULLSCREEN);
                        break;
                    case this.logoWindowed:
                        this.setState(n.WINDOWED)
                }
            }, VRStateToggler.prototype.buttonVRClick = function() {
                this.stateChange(this.buttonVR.src)
            }, VRStateToggler.prototype.buttonOptionsClick = function() {
                this.vrStory.showOptions()
            }, VRStateToggler.prototype.buttonShareClick = function() {
                this.vrStory.showShare()
            }, e.exports = VRStateToggler
        }, {
            "../js-ext/emitter.js": 2,
            "./VRIcons.js": 10,
            "./VRStates.js": 19
        }],
        19: [function(t, e, i) {
            VRStates = {
                INACTIVE: 0,
                WINDOWED: 1,
                FULLSCREEN: 2
            }, e.exports = VRStates
        }, {}],
        20: [function(t, e, i) {
            var n = t("./VRStates.js"),
                r = t("./VRStateToggler.js"),
                o = t("./VRScene.js"),
                s = t("./VRManager.js"),
                a = t("./VRRenderModes.js"),
                A = t("./VRDeviceManager.js"),
                u = t("./VRGui.js"),
                c = t("./VROptions.js");
            VRStory = function() {
                var e = this;
                this.storyElement = null, this.parentElement = null, this.vrDeviceManager = A, this.vrGui = null, this.noGui = !1, this.vrOptions = new c, this.direction = [0, 0, 0], this.mousePosLast = [-1, -1], this.mouseClickPosDeg = null, this.guiDirty = !1, this.guiDirtyTimeout = !1, this.firstRun = !0, this.quad = null, this.manager = null, this.storyManager = null, this.stateToggler = new r, this.stateToggler.setVRStory(this), this.state = n.INACTIVE, this.lastVisibleCheck = 0, this.isVisible = !0, this.isStereo = !1, this.currentSceneIndex = 0, this.isFullScreen = !1, this.isLoading = !1, this.sceneList = [], this.namedSceneMap = [], this.gallerySrc = null, this.enterFullscreen = function() {
                    return this.vrDeviceManager.firstTime() ? (console.log("FIRST"), this.vrOptions.options.showDialogOptionsFirstTime(e), !1) : 0 == e.manager.enterFullscreen() ? !1 : (this.isFullScreen = !0, void(1 == e.manager.fallbackFullscreen && e.onResize()))
                }, this.exitFullscreen = function() {
                    this.isFullScreen && null != e.manager && (e.manager.exitVR(), this.isFullScreen = !1)
                }, this.windowedCallback = function() {
                    return null == e.quad ? !1 : (e.quad.setupFromDevice(this.vrDeviceManager.getWindowedDevice()), e.exitFullscreen(), console.log("WINDOWED CALLBACK"), !0)
                }, this.fullscreenCallback = function() {
                    return 0 == e.enterFullscreen() ? !1 : (e.quad.setupFromDevice(this.vrDeviceManager.getCurrentDevice()), console.log("FULLSCREEN CALLBACK"), !0)
                }, this.onResize = function() {
                    this.parentElement.clientWidth, this.parentElement.clientHeight;
                    if (null != this.quad) {
                        if (1 == this.manager.fallbackFullscreen && 0 == this.manager.isLandscape()) return void this.stateToggler.setState(n.WINDOWED);
                        if (this.isFullScreen) {
                            if (this.quad.resize(), 1 == this.manager.fallbackFullscreen) {
                                var t = this.quad.getContainer();
                                t.style.width = window.innerWidth + "px", t.style.height = window.innerHeight + "px"
                            }
                        } else this.quad.resize()
                    } else console.log("SHOULD NEVER BE HERE")
                }, this.setState = function(t) {
                    var i = e.state;
                    e.state = t;
                    var r = !1;
                    switch (t) {
                        case n.FULLSCREEN:
                            r = e.fullscreenCallback();
                            break;
                        case n.WINDOWED:
                            r = e.windowedCallback()
                    }
                    return 1 == r ? (e.state = t, this.onResize()) : e.state = i, r
                }, this.setupSceneRenderer = function() {
                    this.parentElement.clientWidth, this.parentElement.clientHeight;
                    VRtwglQuadStereoProjection = t("./VRtwglQuadStereoProjection.js"), this.quad = new VRtwglQuadStereoProjection, this.quad.init(this.parentElement), this.quad.resize()
                }, this.createImageFromSphereTexture = function() {
                    return this.quad.createImageFromSphereTexture()
                }, this.isInViewport = function() {
                    var t = this.quad.getDrawCanvas(),
                        e = t.getBoundingClientRect(),
                        i = window.innerHeight || document.documentElement.clientHeight,
                        n = window.innerWidth || document.documentElement.clientWidth;
                    return e.right < 0 || e.left > n ? !1 : e.bottom < 0 || e.top > i ? !1 : !0
                }, this.checkVisible = function() {
                    var t = Date.now();
                    t - this.lastVisibleCheck < 100 || (this.isVisible = this.isInViewport())
                }, this.animPow = function(t) {
                    return 2 * (Math.pow(2, t) / 2 - .5)
                }, this.setLoading = function(t) {
                    e.isLoading = t
                }, this.animate = function(t) {
                    if (this.checkVisible(), 0 != this.isVisible && (e.manager.render(t), null != e.vrGui)) {
                        this.firstRun ? this.firstRun = !1 : this.redrawGui();
                        var i = Date.now(),
                            n = [],
                            n = e.quad.controller.getHeading();
                        this.direction[0] = n[0], this.direction[1] = n[1], this.direction[2] = 0, this.vrGui.isHovering() ? e.quad.setGuiMult(Math.min(1, e.quad.getGuiMult() + .05)) : e.quad.setGuiMult(Math.max(0, e.quad.getGuiMult() - .05));
                        var r = 0;
                        if (null == this.direction[0] || e.isLoading || (r = null != e.mouseClickPosDeg ? e.vrGui.update([this.direction[0] + e.mouseClickPosDeg[0], this.direction[1] + e.mouseClickPosDeg[1]], i) : e.vrGui.update([this.direction[0], this.direction[1]], i)), e.clearCtx(), e.drawReticle(r), 0 == e.quad.texReady || e.isLoading) {
                            var o = Math.min((i - e.quad.textureLoadStartAnim) / (e.quad.textureLoadEndAnim - e.quad.textureLoadStartAnim), 1);
                            o >= .01 && e.drawLoader(i, this.animPow(o))
                        } else {
                            var o = Math.min((i - e.quad.textureLoadStartAnim) / (e.quad.textureLoadEndAnim - e.quad.textureLoadStartAnim), 1);
                            o >= .01 && e.drawLoader(i, this.animPow(1 - o))
                        }
                    }
                }, this.clearCtx = function() {
                    var t = this.quad.vrtwglQuad.get2dContext();
                    if (null != t) {
                        var e = t[0],
                            i = t[1],
                            n = t[2];
                        e.clearRect(0, 0, i, n)
                    }
                }, this.drawLoader = function(t, e) {
                    var i = this.quad.vrtwglQuad.get2dContext();
                    if (null != i) {
                        var n = i[0],
                            r = (i[1], i[2], t % 1500 / 1500),
                            o = 2 * Math.PI * r,
                            s = "#ffffff",
                            a = "#000000",
                            A = "#666666",
                            u = "#ff9900",
                            c = this.getReticlePositions();
                        for (objit = 0; objit < c.length; objit++) {
                            var l = c[objit];
                            n.beginPath(), n.lineWidth = 12, n.strokeStyle = a, n.fillStyle = s, n.arc(l[0], l[1], 100 * e, 0, 2 * Math.PI), n.fill(), n.stroke(), n.beginPath(), n.strokeStyle = A, n.arc(l[0], l[1], 80 * e, o, o + .5 * Math.PI), n.stroke(), n.beginPath(), n.strokeStyle = u, n.arc(l[0], l[1], 60 * e, -2 * o, -2 * o + .1 * Math.PI), n.stroke()
                        }
                    }
                }, this.getReticlePositions = function() {
                    var t = this.quad.vrtwglQuad.get2dContext();
                    if (null != t) {
                        var e = (t[0], t[1]),
                            i = t[2],
                            n = [],
                            r = this.quad.getRenderMode();
                        if (r != a.STEREOSIDEBYSIDE) n.push([e / 2, i / 2]);
                        else {
                            var o = this.quad.getIPDAdjust();
                            n.push([e / 4 - o * e / 2, i / 2]), n.push([3 * e / 4 + o * e / 2, i / 2])
                        }
                        return n
                    }
                }, this.drawReticle = function(t) {
                    if (1 != this.noGui) {
                        var e = this.quad.vrtwglQuad.get2dContext();
                        if (null != e) {
                            var i, n = e[0],
                                r = this.getReticlePositions();
                            for (i = this.vrGui.isHovering() ? .2 * t + .8 : .8 * t + .2, objit = 0; objit < r.length; objit++) {
                                var o = r[objit];
                                n.beginPath(), n.lineWidth = 10, n.strokeStyle = "rgba(0,0,0," + i + ")", n.arc(o[0], o[1], 15, 0, 2 * Math.PI), n.stroke(), n.lineWidth = 8, n.strokeStyle = "rgba(255,255,255," + i + ")", n.arc(o[0], o[1], 15, 0, 2 * Math.PI), n.stroke(), n.beginPath(), n.strokeStyle = "rgba(0,0,0,1.0)", n.lineWidth = 6, n.arc(o[0], o[1], 15, -.5 * Math.PI, -.5 * Math.PI + 2 * t * Math.PI), n.stroke()
                            }
                        }
                    }
                }, this.setupScene = function(t) {
                    this.vrGui.teardown(), this.quad.teardown(), this.guiDirtyTimeout || (this.guiDirty = !0), this.currentSceneIndex = t;
                    var e = this.sceneList[t],
                        i = [];
                    if (void 0 != e)
                        for (objit = 0; objit < e.photoObjects.length; objit++) {
                            var n = e.photoObjects[objit];
                            null != n.textureDescription && i.push(n.textureDescription)
                        }
                    this.quad.loadTextures(i), void 0 != e && this.guiGen(), this.stateToggler.configureStereo(this.isStereo), this.quad.controller.update(!1)
                }, this.nextScene = function() {
                    var t = e.sceneList.length,
                        i = (e.currentSceneIndex + 1) % t;
                    i != e.currentSceneIndex && (e.setupScene(i), e.currentSceneIndex = i)
                }, this.prevScene = function() {
                    var t = e.sceneList.length,
                        i = (e.currentSceneIndex - 1) % t;
                    i != e.currentSceneIndex && e.setupScene(i)
                }, this.gotoNamedScene = function(t) {
                    e.setupScene(e.namedSceneMap[t])
                }, this.guiGen = function() {
                    var t = this.sceneList[this.currentSceneIndex],
                        i = t.textObjects;
                    for (g = 0; g < i.length; g++) {
                        var n = i[g],
                            r = null,
                            o = null;
                        "" != n.jumpTo && (r = this.gotoNamedScene, o = n.jumpTo), this.vrGui.createTextBox(n.textureDescription.sphereFOV[0], n.textureDescription.sphereCentre[0], n.textureDescription.sphereCentre[1], n.textureDescription.plane, n.textureDescription.planeOffset, r, o, n.message, n.textOptions)
                    }
                    var s = t.decalObjects;
                    for (g = 0; g < s.length; g++) {
                        var a = s[g],
                            r = null,
                            o = null;
                        "" != a.jumpTo && (r = this.gotoNamedScene, o = a.jumpTo), this.vrGui.createDecal(r, o, a.imgsrc, a.textureDescription)
                    }
                    if (0 == t.hasJumpNav()) {
                        var A = e.sceneList.length;
                        e.currentSceneIndex > 0 && this.vrGui.createArrow(15, -30, -40, this.prevScene, null, !0), e.currentSceneIndex < A - 1 && this.vrGui.createArrow(15, 30, -40, this.nextScene, null, !1)
                    }
                }, this.refreshGui = function() {
                    e.quad.renderGui(), e.guiDirtyTimeout = !1, console.log("rendering gui")
                }, this.redrawGui = function() {
                    1 == this.guiDirty && 0 == this.vrGui.isGuiDirty() && (e.guiDirty = !1, e.guiDirtyTimeout = !0, setTimeout(this.refreshGui, 500))
                }, this.init = function(t, i) {
                    this.storyElement = t, this.storyManager = i, this.parentElement = this.storyElement.parentNode, this.setupSceneRenderer(), this.vrGui = new u, this.vrGui.init(this.quad.getContext()), this.quad.setVrGui(this.vrGui), this.setupScene(this.currentSceneIndex), this.mouseMove = function(t) {
                        var i = t.movementX || t.mozMovementX || t.webkitMovementX || 0,
                            n = t.movementY || t.mozMovementY || t.webkitMovementY || 0;
                        t = t || window.event;
                        var r = t.target || t.srcElement,
                            o = r.getBoundingClientRect(),
                            s = t.clientX - o.left,
                            a = t.clientY - o.top;
                        if (0 == i && 0 == n) {
                            var A = t.clientX - e.mousePosLast[0],
                                u = t.clientY - e.mousePosLast[1];
                            i = Math.min(A, 5), n = Math.min(u, 5)
                        }
                        e.mousePosLast = [t.clientX, t.clientY], e.mouseClickPosDeg = [(s / o.width - .5) * (360 * e.quad.uniforms.fovParams[0]), (a / o.height - .5) * (-.5 * e.quad.uniforms.fovParams[1] * 360)], e.mousePosLast[0] < 0 && (e.mousePosLast = [t.clientX, t.clientY], i = 0, n = 0), e.quad.controller.mouseMove(i, n, s / o.width, a / o.height)
                    }, this.parentElement.addEventListener("mousedown", function(t) {
                        this.parentElement.addEventListener("mousemove", e.mouseMove, !1), e.mouseMove(t)
                    }, !1), this.parentElement.addEventListener("mouseup", function(t) {
                        e.quad.controller.mouseStop(), this.parentElement.removeEventListener("mousemove", e.mouseMove, !1), e.mousePosLast = [-1, -1], e.mouseClickPosDeg = null
                    }, !1), 0 == this.noGui && (this.quad.getContainer().appendChild(this.stateToggler.buttonVR), this.quad.getContainer().appendChild(this.stateToggler.buttonOptions), this.quad.getContainer().appendChild(this.stateToggler.buttonShare)), this.manager = new s(this.quad), this.onResize(), this.animate(), this.stateToggler.setState(n.WINDOWED)
                }, this.getSizeStyle = function(t, e) {
                    var i = t.getAttribute("width"),
                        n = t.getAttribute("height");
                    return null == i && null == n ? (e.width = "100%", void(e.paddingBottom = "56.25%")) : null != n && null != i ? (e.height = n, void(e.width = i)) : void 0
                }, this.initVrEmbedPhoto = function(t, e) {
                    var i = document.createElement("div"),
                        n = i.style;
                    n.position = "relative", this.getSizeStyle(t, n);
                    var r = document.createElement("div"),
                        s = r.style;
                    s.position = "absolute", s.top = "0", s.bottom = "0", s.left = "0", s.right = "0", s.color = "white", s.fontSize = "24px", s.textAlign = "center";
                    var a = document.createElement("a");
                    r.appendChild(a), i.appendChild(r), t.appendChild(i);
                    var A = new o;
                    A.initVrEmbedPhoto(t), A.isStereo && (this.isStereo = !0), this.sceneList.push(A), this.init(a, e)
                }, this.createFullPageDiv = function() {
                    var t = document.createElement("div"),
                        e = t.style;
                    return e.position = "absolute", e.width = "100%", e.height = "100%", e.margin = "0px", e.padding = "0px", e.border = "0px", e.overflow = "hidden", document.body.appendChild(t), document.body.style.margin = "0px", document.body.style.padding = "0px", t
                }, this.createFullPageStoryDiv = function(t) {
                    this.storyManager = t;
                    var e = this.createFullPageDiv();
                    this.init(e, t)
                }, this.initStory = function(t, e) {
                    var i = t.getAttribute("noGui");
                    null != i && "true" == i && (this.noGui = !0);
                    for (var n = t.childNodes, r = 0, s = n.length; s > r; ++r) {
                        var a = n[r];
                        if (1 === a.nodeType && "SCENE" == a.nodeName) {
                            var A = new o;
                            A.init(a), A.isStereo && (this.isStereo = !0), this.sceneList.push(A), "" != A.name && (this.namedSceneMap[A.name] = this.sceneList.length - 1)
                        }
                    }
                    this.init(t, e)
                }, this.showShare = function() {
                    this.vrOptions.options.showDialogShare(this.getShareCodes())
                }, this.showOptions = function() {
                    this.vrOptions.options.showDialogOptions()
                }, this.hideOptions = function() {
                    this.vrOptions.options.hideDialog()
                }, this.getStoryElement = function() {
                    for (var t = document.createElement("story"), e = 0; e < this.sceneList.length;) {
                        var i = this.sceneList[e];
                        t.appendChild(i.getSceneElement()), e++
                    }
                    return t
                }, this.isSinglePhotoStory = function() {
                    return null != this.gallerySrc ? !0 : 1 != this.sceneList.length || 1 != this.sceneList[0].photoObjects.length || 0 != this.sceneList[0].textObjects.length || 0 != this.sceneList[0].decalObjects.length ? !1 : !0
                }, this.setGallerySrc = function(t) {
                    this.gallerySrc = t
                }, this.getShareCodes = function() {
                    var t = "",
                        e = "",
                        i = '<script async src="//web.archive.org/web/20190205160217/http://vrembed.org/vrEmbed.min.js" charset="utf-8"></script>',
                        n = "<iframe width='640' height='360' src='",
                        r = "' frameborder='0' webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>";
                    return null != this.gallerySrc ? (t = encodeURIComponent("https://web.archive.org/web/20190205160217/http://vrembed.org/?gallery=" + this.gallerySrc), e = n + "https://web.archive.org/web/20190205160217/http://vrembed.org/?gallery=" + this.gallerySrc + r) : 1 == this.isSinglePhotoStory() ? (t = encodeURIComponent("https://web.archive.org/web/20190205160217/http://vrembed.org/" + this.sceneList[0].photoObjects[0].getSinglePhotoURLParams()), e = n + "https://web.archive.org/web/20190205160217/http://vrembed.org/" + this.sceneList[0].photoObjects[0].getSinglePhotoURLParams() + r) : (t = encodeURIComponent(window.location.href), e = "<div>" + this.getStoryElement().outerHTML + i + "</div>"), [t, e]
                }
            }, e.exports = VRStory
        }, {
            "./VRDeviceManager.js": 8,
            "./VRGui.js": 9,
            "./VRManager.js": 12,
            "./VROptions.js": 13,
            "./VRRenderModes.js": 14,
            "./VRScene.js": 16,
            "./VRStateToggler.js": 18,
            "./VRStates.js": 19,
            "./VRtwglQuadStereoProjection.js": 28
        }],
        21: [function(t, e, i) {
            var n = t("./VROptions.js"),
                r = t("./VRStory.js");
            VRStoryManager = function() {
                var t = this;
                this.storyList = [], this.activeStory = -1, this.vrOptions = new n;
                var t = this;
                this.onFullscreenChange_ = function(e) {
                    if (null === document.webkitFullscreenElement || null === document.mozFullScreenElement)
                        for (storyit = 0; storyit < t.storyList.length; storyit++) t.storyList[storyit].stateToggler.setState(VRStates.WINDOWED)
                }, document.addEventListener("webkitfullscreenchange", this.onFullscreenChange_.bind(this)), document.addEventListener("mozfullscreenchange", this.onFullscreenChange_.bind(this)), this.addStory = function(t) {
                    this.storyList.push(t)
                }, this.onResize = function() {
                    for (storyit = 0; storyit < t.storyList.length; storyit++) t.storyList[storyit].onResize()
                }, this.animate = function() {
                    for (requestAnimationFrame(t.animate), storyit = 0; storyit < t.storyList.length; storyit++) t.storyList[storyit].animate()
                }, this.findStoryIndex = function(e) {
                    var i = -1;
                    for (storyit = 0; storyit < t.storyList.length; storyit++) t.storyList[storyit] == e && (i = storyit);
                    return i
                }, this.init = function() {}, this.clearPage = function() {
                    window.stop(), document.body.innerHTML = ""
                }, this.initFullpage = function() {
                    var e = new r;
                    e.createFullPageStoryDiv(), t.addStory(e)
                }, this.animate()
            };
            var o = function() {
                function t() {
                    var t = new VRStoryManager;
                    return t.init(), t
                }
                var e;
                return {
                    getInstance: function() {
                        return e || (e = t()), e
                    }
                }
            }();
            e.exports = o.getInstance()
        }, {
            "./VROptions.js": 13,
            "./VRStory.js": 20
        }],
        22: [function(t, e, i) {
            var n = t("./VRStoryManager.js"),
                r = t("./VRStory.js");
            StoryParser = function() {
                this.storyManager = n, this.storyManager.init(), this.parseDocXML = function(t) {
                    var e = t.getElementsByTagName("story");
                    for (storyit = 0; storyit < e.length; storyit++) {
                        var i = e[storyit],
                            n = new r;
                        n.initStory(i, this.storyManager), this.storyManager.addStory(n)
                    }
                    var o = t.getElementsByClassName("vrEmbedPhoto");
                    for (vrEmbedPhotosIt = 0; vrEmbedPhotosIt < o.length; vrEmbedPhotosIt++) {
                        var s = o[vrEmbedPhotosIt],
                            n = new r;
                        n.initVrEmbedPhoto(s, this.storyManager), this.storyManager.addStory(n)
                    }
                }, this.onResize = function() {
                    this.storyManager.onResize();
                }
            }, e.exports = StoryParser
        }, {
            "./VRStory.js": 20,
            "./VRStoryManager.js": 21
        }],
        23: [function(t, e, i) {
            var n = t("./VRTextureDescription.js"),
                r = t("./VRTextOptions.js");
            VRText = function() {
                this.sceneText = null, this.textureDescription = null, this.textOptions = null, this.message = "", this.jumpTo = "", this.parseMessage = function(t) {
                    this.message = t
                }, this.parseBoolString = function(t) {
                    return void 0 == t ? !1 : "true" == t.toLowerCase() ? !0 : !1
                }, this.init = function(t) {
                    this.sceneText = t, this.sceneText.setAttribute("hidden", !0), this.parseMessage(this.sceneText.innerHTML), this.jumpTo = this.sceneText.getAttribute("jumpTo"), void 0 == this.jumpTo && (this.jumpTo = ""), this.textureDescription = new n, this.textureDescription.init(this.sceneText), this.textOptions = new r, this.textOptions.init(this.sceneText)
                }, this.initDict = function(t) {
                    this.textureDescription = new n, this.textureDescription.initDict(t.textureDescription), this.parseMessage(t.message), this.jumpTo = t.jumpTo, this.textOptions = new r, this.textOptions.initDict(t.textOptions)
                }, this.getTextElement = function() {
                    var t = document.createElement("text");
                    return this.textureDescription.setElement(t), t.innerHTML = this.message, "" != this.jumpTo && t.setAttribute("jumpTo", this.jumpTo), this.textOptions.setElement(t), t
                }
            }, e.exports = VRText
        }, {
            "./VRTextOptions.js": 24,
            "./VRTextureDescription.js": 25
        }],
        24: [function(t, e, i) {
            VRTextOptions = function() {
                this.align = null, this.fontface = null, this.fontsize = null, this.borderThickness = null, this.borderColor = null, this.backgroundColor = null, this.textColor = null, this.init = function(t) {
                    this.align = t.getAttribute("align"), this.fontface = t.getAttribute("fontface"), this.fontsize = t.getAttribute("fontsize"), this.borderThickness = t.getAttribute("borderthickness"), this.borderColor = t.getAttribute("bordercolor"), this.backgroundColor = t.getAttribute("backgroundcolor"), this.textColor = t.getAttribute("textcolor")
                }, this.initDict = function(t) {
                    this.align = t.align, this.fontface = t.fontface, this.fontsize = t.fontsize, this.borderThickness = t.borderthickness, this.borderColor = t.bordercolor, this.backgroundColor = t.backgroundcolor, this.textColor = t.textcolor
                }, this.setElement = function(t) {
                    null != this.align && t.setAttribute("align", this.align), null != this.fontface && t.setAttribute("fontface", this.fontface), null != this.fontsize && t.setAttribute("fontsize", this.fontsize), null != this.borderThickness && t.setAttribute("borderthickness", this.borderThickness), null != this.borderColor && t.setAttribute("bordercolor", this.borderColor), null != this.backgroundColor && t.setAttribute("backgroundcolor", this.backgroundColor), null != this.textColor && t.setAttribute("textcolor", this.textColor)
                }
            }, e.exports = VRTextOptions
        }, {}],
        25: [function(t, e, i) {
            VRTextureDescription = function() {
                this.textureSource = "", this.metaSource = "", this.isStereo = !1, this.sphereFOV = [360, 180], this.sphereCentre = [0, 0], this.U_l = [0, 0], this.V_l = [1, 1], this.U_r = [0, 0], this.V_r = [1, 1], this.plane = !1, this.planeOffset = [0, 0], this.parseBoolString = function(t) {
                    return void 0 == t ? !1 : "true" == t.toLowerCase() ? !0 : !1
                }, this.setPlaneOffsetParamsFromString = function(t) {
                    if (void 0 != t) {
                        var e = t.split(",");
                        this.planeOffset = [parseFloat(e[0].trim()), parseFloat(e[1].trim())]
                    }
                }, this.setSphereParamsFromString = function(t) {
                    var e = t.split(",");
                    this.sphereFOV = [parseFloat(e[0].trim()), parseFloat(e[1].trim())], this.sphereCentre = [parseFloat(e[2].trim()), parseFloat(e[3].trim())]
                }, this.setTexParamsFromString = function(t) {
                    var e = t.split(",");
                    this.U_l = [parseFloat(e[0].trim()), parseFloat(e[1].trim())], this.V_l = [parseFloat(e[2].trim()), parseFloat(e[3].trim())], this.U_r = [parseFloat(e[4].trim()), parseFloat(e[5].trim())], this.V_r = [parseFloat(e[6].trim()), parseFloat(e[7].trim())]
                }, this.getPlaneOffsetParamsString = function() {
                    return this.planeOffset[0] + "," + this.planeOffset[1]
                }, this.getSphereParamsString = function() {
                    return this.sphereFOV[0] + "," + this.sphereFOV[1] + "," + this.sphereCentre[0] + "," + this.sphereCentre[1]
                }, this.getTexParamsString = function() {
                    return this.U_l[0] + "," + this.U_l[1] + "," + this.V_l[0] + "," + this.V_l[1] + "," + this.U_r[0] + "," + this.U_r[1] + "," + this.V_r[0] + "," + this.V_r[1]
                }, this.getAbsoluteTexturePath = function() {
                    var t = document.createElement("a");
                    return t.href = this.textureSource, t.protocol + "//" + t.host + t.pathname + t.search + t.hash
                }, this.init = function(t) {
                    this.setSphereParamsFromString(t.getAttribute("sphereParams")), this.plane = this.parseBoolString(t.getAttribute("plane")), this.setPlaneOffsetParamsFromString(t.getAttribute("planeOffset")), this.textureSource = t.getAttribute("src"), void 0 == this.textureSource && (this.textureSource = ""), this.metaSource = "", this.isStereo = this.parseBoolString(t.getAttribute("isStereo")), void 0 == this.isStereo && (this.isStereo = !1), 1 == this.isStereo && this.setTexParamsFromString(t.getAttribute("texParams"))
                }, this.initDict = function(t) {
                    return this.textureSource = t.src, null == this.textureSource ? void(this.textureSource = null) : (this.metaSource = "", this.isStereo = t.isStereo, this.plane = t.plane, this.sphereFOV = t.sphereFOV, this.sphereCentre = t.sphereCentre, this.planeOffset = t.planeOffset, void(this.isStereo && (this.U_l = t.U_l, this.V_l = t.V_l, this.U_r = t.U_r, this.V_r = t.V_r)))
                }, this.setElement = function(t) {
                    "" != this.textureSource && t.setAttribute("src", this.getAbsoluteTexturePath()), t.setAttribute("sphereParams", this.getSphereParamsString()), 0 == this.plane ? t.setAttribute("plane", "false") : (t.setAttribute("plane", "true"), t.setAttribute("planeOffset", this.getPlaneOffsetParamsString())), 0 == this.isStereo ? t.setAttribute("isStereo", "false") : (t.setAttribute("isStereo", "true"), t.setAttribute("texParams", this.getTexParamsString()))
                }
            }, e.exports = VRTextureDescription
        }, {}],
        26: [function(t, e, i) {
            function n() {
                this.isMobile = function() {
                    var t = !1;
                    return function(e) {
                        (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(e) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0, 4))) && (t = !0)
                    }(navigator.userAgent || navigator.vendor || window.opera), t
                }
            }
            e.exports = n
        }, {}],
        27: [function(t, e, i) {
            var n = t("../js-ext/twgl-full.js");
            VRtwglQuad = function() {
                var t = this;
                this.container = null, this.canvas = null, this.canvas2d = null, this.glContext = null, this.programInfo = null, this.bufferInfo = null, this.parentElement = null, this.uniforms = null, this.fbSize = 2048, this.canvas2dWidth = 2048, this.canvas2dHeight = 2048, this.viewportDims = [0, 0], this.isFullScreen = !1, this.initCore = function(t, e) {
                    this.programInfo = n.createProgramInfo(this.glContext, [t, e]);
                    var i = {
                        position: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0]
                    };
                    this.bufferInfo = n.createBufferInfoFromArrays(this.glContext, i)
                }, this.init = function(t, e, i) {
                    this.parentElement = t.parentNode, this.container = document.createElement("div"), this.container.style.margin = 0, this.container.style.padding = "0px", this.canvas = document.createElement("canvas"), this.canvas2d = document.createElement("canvas");
                    var r = this.canvas.style;
                    r.display = "block", r.position = "absolute";
                    var o = this.canvas2d.style;
                    o.position = "absolute", o.marginLeft = "auto", o.marginRight = "auto", o.backgroundSize = "cover", o.backgroundColor = "transparent", o.border = 0, o.userSelect = "none", o.webkitUserSelect = "none", o.MozUserSelect = "none", o.opacity = "1.0", o.left = 0, o.right = 0, o.top = "0px", o.height = "100%", o.width = "100%", this.container.appendChild(this.canvas), this.container.appendChild(this.canvas2d), t.appendChild(this.container), this.glContext = n.getWebGLContext(this.canvas), this.initCore(e, i)
                }, this.setCanvasFullscreen = function() {
                    var t = this.canvas.style;
                    t.position = "relative";
                    var e = this.canvas2d.style;
                    e.height = "100vh", e.width = "100vw", this.isFullScreen = !0
                }, this.setCanvasWindowed = function() {
                    var t = this.canvas.style;
                    t.position = "absolute";
                    var e = this.canvas2d.style;
                    e.height = "100%", e.width = "100%", this.isFullScreen = !1
                }, this.initFramebuffer = function(t, e, i, r) {
                    this.glContext = e, this.fbSize = t, this.canvas2dWidth = t, this.canvas2dHeight = t, this.initCore(i, r);
                    var o = [{
                        format: this.glContext.RGBA,
                        type: this.glContext.UNSIGNED_BYTE,
                        min: this.glContext.LINEAR,
                        mag: this.glContext.LINEAR,
                        wrap: this.glContext.CLAMP_TO_EDGE
                    }];
                    this.framebufferInfo = n.createFramebufferInfo(this.glContext, o, this.fbSize, this.fbSize)
                }, this.createImageFromTexture = function() {
                    var t = this.glContext,
                        e = this.getFramebufferTexture(),
                        i = this.fbSize,
                        n = this.fbSize,
                        r = t.createFramebuffer();
                    t.bindFramebuffer(t.FRAMEBUFFER, r), t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, e, 0);
                    var o = new Uint8Array(i * n * 4);
                    t.readPixels(0, 0, i, n, t.RGBA, t.UNSIGNED_BYTE, o), t.deleteFramebuffer(r);
                    var s = document.createElement("canvas");
                    s.width = i, s.height = n;
                    var a = s.getContext("2d"),
                        A = a.createImageData(i, n);
                    return A.data.set(o), a.putImageData(A, 0, 0), s.toDataURL()
                }, this.getFramebufferTexture = function() {
                    return this.framebufferInfo.attachments[0]
                }, this.getFramebufferSize = function() {
                    return this.fbSize
                }, this.getDevicePixelRatio = function() {
                    return window.devicePixelRatio || 1
                }, this.fixViewportSize = function() {
                    var e = t.glContext.canvas,
                        i = window.innerWidth,
                        n = window.innerHeight;
                    this.isFullScreen || (i = t.parentElement.clientWidth, n = t.parentElement.clientHeight);
                    var r = this.getDevicePixelRatio();
                    e.width = Math.floor(i * r), e.height = Math.floor(n * r), e.style.width = i + "px", e.style.height = n + "px", t.glContext.viewport(0, 0, Math.floor(i * r), Math.floor(n * r))
                }, this.resize = function() {
                    this.fixViewportSize();
                    var e = t.parentElement.clientWidth,
                        i = t.parentElement.clientHeight,
                        n = this.canvas2d.getContext("2d");
                    this.canvas2dHeight = Math.floor(this.canvas2dWidth * i / e), n.canvas.width = this.canvas2dWidth, n.canvas.height = this.canvas2dHeight
                }, this.setUniforms = function(t) {
                    this.uniforms = t
                }, this.render = function() {
                    n.resizeCanvasToDisplaySize(t.glContext.canvas, t.getDevicePixelRatio()), t.glContext.useProgram(t.programInfo.program), n.setBuffersAndAttributes(t.glContext, t.programInfo, t.bufferInfo), n.setUniforms(t.programInfo, this.uniforms), n.drawBufferInfo(t.glContext, t.glContext.TRIANGLES, t.bufferInfo)
                }, this.get2dContext = function() {
                    return null == t.canvas2d ? null : [t.canvas2d.getContext("2d"), t.canvas2dWidth, t.canvas2dHeight]
                }, this.clearFrameBuffer = function(e, i, r, o) {
                    n.bindFramebufferInfo(t.glContext, t.framebufferInfo), this.glContext.clearColor(e, i, r, o), this.glContext.clear(this.glContext.COLOR_BUFFER_BIT), n.bindFramebufferInfo(t.glContext, null)
                }, this.renderFramebuffer = function() {
                    n.bindFramebufferInfo(t.glContext, t.framebufferInfo), this.render(), n.bindFramebufferInfo(t.glContext, null)
                }, this.resetViewport = function() {
                    var e = t.getDevicePixelRatio(),
                        i = t.parentElement.clientWidth,
                        n = t.parentElement.clientHeight;
                    t.glContext.viewport(0, 0, Math.floor(i * e), Math.floor(n * e))
                }
            }, e.exports = VRtwglQuad
        }, {
            "../js-ext/twgl-full.js": 3
        }],
        28: [function(t, e, i) {
            VRtwglQuad = t("./VRtwglQuad.js"), VRRenderModes = t("./VRRenderModes.js"), VRLookController = t("./VRControllers.js"), VRDeviceManager = t("./VRDeviceManager.js"), VRCanvasFactory = t("./VRCanvasFactory.js"), VRRotMath = t("./VRRotMath.js"), VRImageURLParser = t("./VRImageURLParser.js"), Util = t("./VRUtil.js"), twgl = t("../js-ext/twgl-full.js");
            var n = "precision highp float;\nattribute vec4 position;\nvoid main() {\n  gl_Position = position;\n}\n",
                r = "precision highp float;\n#define PI 3.141592653589793\nuniform vec2 resolution;\nuniform sampler2D textureSource;\nuniform sampler2D textureGui;\nuniform mat4 transform;\nuniform int renderMode;\nuniform vec2 fovParams;\nuniform vec2 k;\nuniform float ipdAdjust;\nuniform vec2 guiMult;\nvoid main(void) {\n  vec2 uv = gl_FragCoord.xy / resolution;\n  uv.x = (1. - uv.x);\n  bool leftImg=false;\n  vec2 fov = fovParams;\n  if (renderMode == 1) {\n    fov.y *= 2.;\n    if (uv.x<0.5) { \n      uv.x *= 2.; \n      uv.x += ipdAdjust;\n      leftImg=true; }\n    else {\n      uv.x = 2.*(uv.x - .5);\n      uv.x -= ipdAdjust;\n    }\n    float r2 = (uv.x-0.5)*(uv.x-0.5) + (uv.y-0.5)*(uv.y-0.5);\n    uv.x = 0.5+(uv.x-0.5)*(1. + k.x*r2 + k.y*r2*r2);\n    uv.y = 0.5+(uv.y-0.5)*(1. + k.x*r2 + k.y*r2*r2);\n    uv.x = 0.5+fov.x*(uv.x-0.5);\n    uv.y = 0.5+fov.y*(uv.y-0.5);\n  } else {\n    uv.x = 0.5+fov.x*(uv.x-0.5);\n    uv.y = 0.5+fov.y*(uv.y-0.5);\n  }\n  float lat = 0.5*PI*(2.*uv.y-1.0);\n  float lon = PI*(2.0*uv.x-1.0);\n  float r = cos(lat);\n  vec4 sphere_pnt = vec4(r*cos(lon), r*sin(lon), sin(lat), 1.0);\n  sphere_pnt *= transform;\n  float sphere_pnt_len = length(sphere_pnt);\n  vec2 lonLat = vec2(atan(sphere_pnt.y, sphere_pnt.x), asin(sphere_pnt.z));\n  lonLat.x = (lonLat.x/(2.0*PI))+0.5;\n  lonLat.y = (lonLat.y/(PI))+0.5;\n  if (renderMode != 2) {\n    if (renderMode == 0) {\n      lonLat.y *= 0.5;\n    } else {\n      if (leftImg == true) {\n        lonLat.y *= 0.5;\n      } else {\n        lonLat.y = 0.5 + lonLat.y*0.5;\n      }\n    }\n    vec4 spherePx = texture2D(textureSource, lonLat);\n    vec4 guiPx = texture2D(textureGui, lonLat);\n    guiPx.a *= guiMult.x + (1.-guiMult.x)*guiMult.y;\n    gl_FragColor = guiPx*guiPx.a + spherePx*(1.-guiPx.a);\n  } else if (renderMode == 2) {\n    vec4 colorL, colorR, colorLSphere, colorLGui, colorRSphere, colorRGui;\n    colorLSphere = texture2D(textureSource, vec2(lonLat.x, 0.5+lonLat.y*0.5));\n    colorLGui = texture2D(textureGui, vec2(lonLat.x, 0.5+lonLat.y*0.5));\n    colorLGui.a *= guiMult.x + (1.-guiMult.x)*guiMult.y;\n    colorL = colorLGui*colorLGui.a + colorLSphere*(1.-colorLGui.a);\n    colorRSphere = texture2D(textureSource, vec2(lonLat.x, lonLat.y*0.5));\n    colorRGui = texture2D(textureGui, vec2(lonLat.x, lonLat.y*0.5));\n    colorRGui.a *= guiMult.x + (1.-guiMult.x)*guiMult.y;\n    colorR = colorRGui*colorRGui.a + colorRSphere*(1.-colorRGui.a);\n    gl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n  }\n}\n",
                o = "precision highp float;\n#define PI 3.141592653589793\nuniform vec2 resolution;\nuniform sampler2D textureSource;\nuniform mat4 transform;\nuniform vec2 sphX;\nuniform vec2 sphYX;\nuniform vec4 uvL;\nuniform vec4 uvR;\nuniform vec2 planeOffset;\nuniform float planar;\nvoid uvToSphere(in vec2 uv, out vec4 sphere_pnt) {\n  float lon = PI*(2.0*uv.x-1.0);\n  float lat = 0.5*PI*(2.*uv.y-1.0);\n  float r = cos(lat);\n  sphere_pnt = vec4(r*cos(lon), r*sin(lon), sin(lat), 1.0);\n}\nvoid main(void) {\n  //normalize uv so it is between 0 and 1\n  vec2 uv = gl_FragCoord.xy / resolution;\n  bool leftImg=true;\n  if (uv.y<0.5) { \n    uv.y *= 2.; \n    leftImg=false; }\n  else {\n    uv.y = 2.*(uv.y - .5);\n  }\n  vec4 sphere_pnt;\n  uvToSphere(uv, sphere_pnt);\n  sphere_pnt *= transform;\n  float sphere_pnt_len = length(sphere_pnt);\n  vec2 lonLat;\n  if (planar<0.5) {\n    lonLat = vec2(atan(sphere_pnt.y, sphere_pnt.x), asin(sphere_pnt.z));\n  } else {\n    lonLat = vec2(0.25*PI*sphere_pnt.y/sphere_pnt.x, 0.25*PI*sphere_pnt.z/sphere_pnt.x);\n    vec2 pofs = vec2(planeOffset.x*-1.0,planeOffset.y);\n    lonLat += pofs;\n    if (sphere_pnt.x<0. || abs(lonLat.x)>PI || abs(lonLat.y)>0.5*PI){ discard; return;}\n  }\n  lonLat.x = (lonLat.x/(2.0*PI))+0.5;\n  lonLat.y = (lonLat.y/(PI))+0.5;\n  vec2 testPt = (lonLat-sphX);\n  testPt = mod(testPt, 1.)/sphYX;\n  // bail out if we're out of drawable region\n  if (testPt.x<0. || testPt.x>1. || testPt.y<0. || testPt.y>1.){ discard; return;}\n  // now map to either left or right UV tex\n  vec2 uvX;\n  vec2 uvYX;\n  if (leftImg == true) {\n    uvX = uvL.xy;\n    uvYX = uvL.zw;\n  } else {\n    uvX = uvR.xy;\n    uvYX = uvR.zw;\n  }\n  vec2 texC = uvX + (testPt*uvYX);\n  gl_FragColor = texture2D(textureSource, texC); \n}\n";
            VRtwglQuadStereoProjection = function() {
                var t = this;
                this.vrDeviceManager = VRDeviceManager, this.vrtwglQuad = null, this.vrtwglQuadFb = null, this.vrtwglQuadFbGui = null, this.textureSet = [], this.textureDescriptions = {}, this.textures = [], this.fovX = 40, this.tick = 0, this.vrGui = null, this.controller = new VRLookController, this.cameraMatrix = twgl.m4.identity(), this.controller.setCamera(this.cameraMatrix), this.textureLoadStartAnim = Date.now(), this.textureLoadEndAnim = this.textureLoadStartAnim + 1e3, this.texReady = !1, this.rotMath = new VRRotMath, this.pickResolution = function() {
                    var t = document.createElement("canvas"),
                        e = twgl.getWebGLContext(t),
                        i = e.getParameter(e.MAX_TEXTURE_SIZE);
                    return t.remove(), 1024 >= i ? 1024 : 2048 >= i ? 2048 : 4096
                }, this.fbRes = this.pickResolution(), this.getContainer = function() {
                    return this.vrtwglQuad.container
                }, this.getDrawCanvas = function() {
                    return this.vrtwglQuad.canvas
                }, this.getContext = function() {
                    return this.vrtwglQuad.glContext
                }, this.setVrGui = function(t) {
                    this.vrGui = t
                }, this.uniforms = {
                    resolution: [0, 0],
                    fovParams: [0, 0],
                    textureSource: null,
                    textureGui: null,
                    transform: twgl.m4.identity(),
                    renderMode: VRRenderModes.STEREOSIDEBYSIDE,
                    k: [0, 0],
                    ipdAdjust: 0,
                    guiMult: [.7, 0]
                }, this.uniformsFb = {
                    resolution: [this.fbRes, this.fbRes],
                    textureSource: null,
                    transform: twgl.m4.identity(),
                    planar: 0,
                    planeOffset: [0, 0]
                }, this.uniformsFbGui = {
                    resolution: [this.fbRes, this.fbRes],
                    textureSource: null,
                    transform: twgl.m4.identity(),
                    planar: 1,
                    planeOffset: [0, 0]
                }, this.setupFromDevice = function(t) {
                    this.uniforms.renderMode = t.renderMode, this.fovX = t.hfov, this.uniforms.k = t.k, this.uniforms.ipdAdjust = t.ipdAdjust
                }, this.getRenderMode = function() {
                    return this.uniforms.renderMode
                }, this.getIPDAdjust = function() {
                    return this.uniforms.ipdAdjust
                }, this.init = function(e) {
                    this.vrtwglQuad = new VRtwglQuad, this.vrtwglQuad.init(e, n, r), this.setupFromDevice(this.vrDeviceManager.getWindowedDevice()), this.vrtwglQuadFb = new VRtwglQuad, this.vrtwglQuadFb.initFramebuffer(this.fbRes, this.vrtwglQuad.glContext, n, o), t.vrtwglQuadFb.clearFrameBuffer(0, 0, 0, 1), this.vrtwglQuadFbGui = new VRtwglQuad, this.vrtwglQuadFbGui.initFramebuffer(this.fbRes, this.vrtwglQuad.glContext, n, o), t.vrtwglQuadFbGui.clearFrameBuffer(0, 0, 0, 0), t.vrtwglQuad.resetViewport()
                }, this.createImageFromSphereTexture = function() {
                    return this.vrtwglQuadFb.createImageFromTexture()
                }, this.renderGui = function() {
                    if (null == this.vrGui) return void console.log("ERROR: trying to render before gui is ready");
                    var e = t.vrtwglQuad.glContext;
                    for (e.enable(e.BLEND), e.blendFunc(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA), t.vrtwglQuadFbGui.clearFrameBuffer(0, 0, 0, 0), texIt = 0; texIt < t.vrGui.canvasSet.length; texIt++) {
                        var i = t.vrGui.canvasSet[texIt][0],
                            n = t.vrGui.canvasSet[texIt][0].getDirty();
                        if (!n) {
                            var r = i.vrTextureDescription;
                            t.uniformsFbGui.textureSource = i.glTex, t.uniformsFbGui.sphX = [.5 - .5 * (r.sphereFOV[0] / 360), .5 - .5 * (r.sphereFOV[1] / 180)], t.uniformsFbGui.sphYX = [r.sphereFOV[0] / 360, r.sphereFOV[1] / 180], t.uniformsFbGui.transform = t.createOrientation(Math.PI * r.sphereCentre[0] / 180, Math.PI * r.sphereCentre[1] / 180), t.uniformsFbGui.uvL = [r.U_l[0], r.U_l[1], r.V_l[0] - r.U_l[0], r.V_l[1] - r.U_l[1]], t.uniformsFbGui.uvR = [r.U_r[0], r.U_r[1], r.V_r[0] - r.U_r[0], r.V_r[1] - r.U_r[1]], r.plane ? (t.uniformsFbGui.planar = 1, t.uniformsFbGui.planeOffset[0] = Math.PI * r.planeOffset[0] / 180, t.uniformsFbGui.planeOffset[1] = Math.PI * r.planeOffset[1] / 180) : (t.uniformsFbGui.planar = 0, t.uniformsFbGui.planeOffset = [0, 0]), t.renderFbGui(), e.deleteTexture(i.glTex)
                        }
                    }
                    t.vrtwglQuad.resetViewport()
                }, this.resize = function() {
                    t.vrtwglQuad.resize()
                }, this.guiToLonLat = function(t) {
                    var e = this.uniforms,
                        i = [t[0], t[1]];
                    i[0] = 1 - i[0];
                    var n = !1,
                        r = [e.fovParams[0], e.fovParams[1]],
                        o = e.k,
                        s = e.renderMode,
                        a = e.ipdAdjust;
                    if (1 == s) {
                        r[1] *= 2, i[0] < .5 ? (i[0] *= 2, i[0] += a, n = !0) : (i[0] = 2 * (i[0] - .5), i[0] -= a);
                        var A = (i[0] - .5) * (i[0] - .5) + (i[1] - .5) * (i[1] - .5);
                        i[0] = .5 + (i[0] - .5) * (1 + o[0] * A + o[1] * A * A), i[1] = .5 + (i[1] - .5) * (1 + o[0] * A + o[1] * A * A), i[0] = .5 + r[0] * (i[0] - .5), i[1] = .5 + r[1] * (i[1] - .5)
                    } else i[0] = .5 + r[0] * (i[0] - .5), i[1] = .5 + r[1] * (i[1] - .5);
                    var u = Math.PI * (2 * i[0] - 1),
                        c = .5 * Math.PI * (2 * i[1] - 1),
                        l = Math.cos(c),
                        h = [l * Math.cos(u), l * Math.sin(u), Math.sin(c)];
                    h = twgl.m4.transformPoint(e.transform, h);
                    var d = [Math.atan2(h[1], h[0]), Math.asin(h[2])];
                    return [180 * d[0] / Math.PI, 180 * d[1] / Math.PI]
                }, this.getGuiMult = function() {
                    return this.uniforms.guiMult[1]
                }, this.setGuiMult = function(t) {
                    this.uniforms.guiMult = [.7, t]
                }, this.render = function() {
                    this.controller.update(!1), twgl.m4.copy(this.cameraMatrix, this.uniforms.transform), this.uniforms.resolution = [t.vrtwglQuad.canvas.width, t.vrtwglQuad.canvas.height];
                    var e = 2 * t.vrtwglQuad.canvas.height / t.vrtwglQuad.canvas.width;
                    this.uniforms.fovParams = [this.fovX / 360, e * this.fovX / 360], this.uniforms.textureSource = t.vrtwglQuadFb.getFramebufferTexture(), this.uniforms.textureGui = t.vrtwglQuadFbGui.getFramebufferTexture(), t.vrtwglQuad.setUniforms(this.uniforms), t.vrtwglQuad.render()
                }, this.renderFb = function() {
                    t.vrtwglQuadFb.setUniforms(this.uniformsFb), t.vrtwglQuadFb.renderFramebuffer()
                }, this.renderFbGui = function() {
                    t.vrtwglQuadFbGui.setUniforms(this.uniformsFbGui), t.vrtwglQuadFbGui.renderFramebuffer()
                }, this.anim = function() {
                    t.render(), requestAnimationFrame(t.anim)
                }, this.createOrientation = function(t, e) {
                    return this.rotMath.rotateZX(t, e)
                }, this.texturesLoaded = function(e, i, n) {
                    void 0 != e && alert(e);
                    var r = t.vrtwglQuad.glContext;
                    r.enable(r.BLEND), r.blendFunc(r.SRC_ALPHA, r.ONE_MINUS_SRC_ALPHA), t.vrtwglQuadFb.clearFrameBuffer(0, 0, 0, 1);
                    for (var o in t.textures)
                        if (t.textures.hasOwnProperty(o)) {
                            var s = t.textureDescriptions[o];
                            t.uniformsFb.textureSource = t.textures[o], t.uniformsFb.sphX = [.5 - .5 * (s.sphereFOV[0] / 360), .5 - .5 * (s.sphereFOV[1] / 180)], t.uniformsFb.sphYX = [s.sphereFOV[0] / 360, s.sphereFOV[1] / 180], t.uniformsFb.transform = t.createOrientation(Math.PI * s.sphereCentre[0] / 180, Math.PI * s.sphereCentre[1] / 180), t.uniformsFb.uvL = [s.U_l[0], s.U_l[1], s.V_l[0] - s.U_l[0], s.V_l[1] - s.U_l[1]], t.uniformsFb.uvR = [s.U_r[0], s.U_r[1], s.V_r[0] - s.U_r[0], s.V_r[1] - s.U_r[1]], s.plane ? (t.uniformsFb.planar = 1, t.uniformsFb.planeOffset[0] = Math.PI * s.planeOffset[0] / 180, t.uniformsFb.planeOffset[1] = Math.PI * s.planeOffset[1] / 180) : (t.uniformsFb.planar = 0, t.uniformsFb.planeOffset = [0, 0]), t.renderFb(), r.deleteTexture(t.textures[o])
                        } t.vrtwglQuad.resetViewport(), t.resize(), t.texReady = !0, t.textureLoadStartAnim = Date.now(), t.textureLoadEndAnim = t.textureLoadStartAnim + 250
                }, this.loadTextures = function(e) {
                    if (0 == e.length) return t.texReady = !0, t.textures = [], void t.texturesLoaded(void 0, [], []);
                    var i = [],
                        n = new VRImageURLParser;
                    for (texIt = 0; texIt < e.length; texIt++) i.push(e[texIt].textureSource), this.textureDescriptions[texIt] = e[texIt];
                    n.init(i, this.loadTexturesCanvas), t.texReady = !1, t.textureLoadStartAnim = Date.now(), t.textureLoadEndAnim = t.textureLoadStartAnim + 1e3
                }, this.loadTexturesCanvas = function(e) {
                    var i = t.vrtwglQuad.glContext,
                        n = [];
                    for (cIt = 0; cIt < e.length; cIt++) {
                        var r = {
                            min: i.LINEAR,
                            mag: i.LINEAR,
                            src: e[cIt].ctx.canvas
                        };
                        n[cIt] = r
                    }
                    t.textures = twgl.createTextures(i, n, t.texturesLoaded)
                }, this.teardown = function() {
                    this.textures = [], this.textureDescriptions = []
                }
            }, e.exports = VRtwglQuadStereoProjection
        }, {
            "../js-ext/twgl-full.js": 3,
            "./VRCanvasFactory.js": 5,
            "./VRControllers.js": 6,
            "./VRDeviceManager.js": 8,
            "./VRImageURLParser.js": 11,
            "./VRRenderModes.js": 14,
            "./VRRotMath.js": 15,
            "./VRUtil.js": 26,
            "./VRtwglQuad.js": 27
        }],
        29: [function(t, e, i) {
            var n = t("./VRStoryParser.js"),
                r = t("./VRStoryManager.js"),
                o = t("../js-ext/domready.js"),
                s = function() {
                    function t() {
                        function t() {
                            i.onResize()
                        }

                        function e() {
                            i.parseDocXML(document.body)
                        }
                        window.VRSTORYPARSER_INIT = !0;
                        var i = new n;
                        return window.addEventListener("resize", t, !1), o(e), i
                    }
                    var e;
                    return {
                        getInstance: function() {
                            return e || (e = t()), e
                        }
                    }
                }();
            if (!window.VRSTORYPARSER_INIT) {
                ! function(t, e, i, n, r, o, s) {
                    t.GoogleAnalyticsObject = r, t[r] = t[r] || function() {
                        (t[r].q = t[r].q || []).push(arguments)
                    }, t[r].l = 1 * new Date, o = e.createElement(i), s = e.getElementsByTagName(i)[0], o.async = 1, o.src = n, s.parentNode.insertBefore(o, s)
                }(window, document, "script", "//web.archive.org/web/20190205160217/http://www.google-analytics.com/analytics.js", "ga"), ga("create", "UA-73312245-1", "auto"), ga("send", "pageview");
                s.getInstance();
                e.exports = r
            }
        }, {
            "../js-ext/domready.js": 1,
            "./VRStoryManager.js": 21,
            "./VRStoryParser.js": 22
        }]
    }, {}, [29])(29)
});

/*
     FILE ARCHIVED ON 16:02:17 Feb 05, 2019 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:19:24 Mar 26, 2020.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  exclusion.robots.policy: 0.125
  RedisCDXSource: 3.779
  PetaboxLoader3.datanode: 2762.984 (5)
  exclusion.robots: 0.134
  esindex: 0.01
  CDXLines.iter: 15.088 (3)
  LoadShardBlock: 2642.554 (3)
  load_resource: 534.912
  captures_list: 2666.154
  PetaboxLoader3.resolve: 374.768 (2)
*/
